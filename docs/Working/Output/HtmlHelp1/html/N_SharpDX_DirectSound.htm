<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE9" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>SharpDX.DirectSound Namespace</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="SharpDX.DirectSound namespace" />
    <meta name="Microsoft.Help.F1" content="SharpDX.DirectSound" />
    <meta name="Microsoft.Help.Id" content="N:SharpDX.DirectSound" />
    <meta name="Description" content="The namespace provides a managed DirectSound API." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="SharpDX.DirectSound" />
    <meta name="file" content="N_SharpDX_DirectSound" />
    <meta name="guid" content="N_SharpDX_DirectSound" />
    
    <link rel="stylesheet" type="text/css" href="../styles/branding-Help1.css" />
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework</div>
    <div class="pageBody">
      <div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>SharpDX.DirectSound Namespace</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
            The <span class="selflink">SharpDX.DirectSound</span> namespace provides a managed DirectSound API.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Classes</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="classList"><tr><th class="iconColumn">
					 
				</th><th>Class</th><th>Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_AcousticEchoCancel.htm">AcousticEchoCancel</a></td><td><div class="summary"><p>The IDirectSoundCaptureFXAec8 interface is used to set and retrieve parameters on a capture buffer that supports acoustic echo cancellation. This interface requires Microsoft Windows XP or later operating systems.</p><p>IDirectSoundCaptureFXAec8 is a define for <a href="T_SharpDX_DirectSound_AcousticEchoCancel.htm">AcousticEchoCancel</a>. The interface names are interchangeable.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundCaptureFXAec8 interface exposes the following methods.</p>IDirectSoundCaptureFXAec8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureFXAec8::GetAllParameters </td><td>The IDirectSoundCaptureFXAec8::GetAllParameters method retrieves the acoustic echo cancellation parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundCaptureFXAec8::GetStatus </td><td>The IDirectSoundCaptureFXAec8::GetStatus method retrieves the status of the effect.	
            </td></tr><tr><td>IDirectSoundCaptureFXAec8::Reset </td><td>The IDirectSoundCaptureFXAec8::Reset method resets the effect to its initial state.	
            </td></tr><tr><td>IDirectSoundCaptureFXAec8::SetAllParameters </td><td>The IDirectSoundCaptureFXAec8::SetAllParameters method sets the acoustic echo cancellation parameters of a buffer.	
            </td></tr></table><p>The LPDIRECTSOUNDCAPTUREFXAEC8 type is defined as a reference to the IDirectSoundCaptureFXAec8 interface:</p><pre> typedef struct IDirectSoundCaptureFXAec8 *LPDIRECTSOUNDCAPTUREFXAEC8;	
            </pre>Info<p>Operating System: Requires Microsoft WindowsXP or later.</p><table><tr><th>Windows </th></tr><tr><td><p>Important Note for Windows Vista</p><p>Existing applications that access Windows XP Acoustic Echo Cancellation (AEC) features via the DirectSound API will no longer obtain AEC when running on Windows Vista. These applications will still run, but their calls to AEC-specific DirectSound API calls will have no effect on the captured audio.</p><p>To learn how to obtain AEC in Windows Vista, See the Windows Vista AEC topics in the Windows SDK.</p></td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Buffer3DSettings.htm">Buffer3DSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_Buffer3DSettings.htm">Buffer3DSettings</a> structure contains all information necessary to uniquely describe the location, orientation, and motion of a 3D sound buffer. This structure is used with theIDirectSound3DBuffer8::GetAllParametersandIDirectSound3DBuffer8::SetAllParametersmethods.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_BufferCapabilities.htm">BufferCapabilities</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Capabilities.htm">Capabilities</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_Capabilities.htm">Capabilities</a> structure describes the capabilities of a device. It is used by theIDirectSound8::GetCapsmethod.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a></td><td><div class="summary"><p>The <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface is used to manipulate sound capture buffers.</p><p>To obtain the <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface, call the IDirectSoundCapture8::CreateCaptureBuffer method to obtain <a href="T_SharpDX_DirectSound_CaptureBufferBase.htm">CaptureBufferBase</a>, then pass IID_IDirectSoundCaptureBuffer8 to IDirectSoundCaptureBuffer::QueryInterface.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface exposes the following methods, arranged by category.</p>Capture Management<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureBuffer8::Lock </td><td>The Lock method locks a portion of the buffer. Locking the buffer returns references into the buffer, allowing the application to read or write audio data into memory.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::Start </td><td>The Start method begins capturing data into the buffer. If the buffer is already capturing, the method has no effect.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::Stop </td><td>The Stop method stops the buffer so that it is no longer capturing data. If the buffer is not capturing, the method has no effect.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::Unlock </td><td>The Unlock method unlocks the buffer.	
            </td></tr></table>Effects<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td><a href="M_SharpDX_DirectSound_CaptureBuffer_GetEffectStatus.htm">GetEffectStatus(Int32)</a></td><td>The GetFXStatus method retrieves the status of capture effects.	
            </td></tr><tr><td><span class="nolink">GetEffect(Guid, Int32, Guid, IntPtr<span id="LST136BD548_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_0?cpp=%");</script>)</span></td><td>The GetObjectInPath method retrieves an interface to an effect object associated with the buffer.	
            </td></tr></table>Initialization<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureBuffer8::Initialize </td><td>The Initialize method initializes a capture buffer object. Because the IDirectSoundCapture8::CreateCaptureBufferIDirectSoundCapture8::CreateCaptureBuffer	
            </td></tr></table>Information<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureBuffer8::GetCaps </td><td>The GetCaps method retrieves the capabilities of the buffer.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::GetCurrentPosition </td><td>Address of a variable that receives the offset from the start of the buffer, in bytes, of the capture cursor. The parameter can be <span class="code">null</span> if this value is not wanted.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::GetFormat </td><td>The GetFormat method retrieves the waveform format of the capture buffer.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::GetStatus </td><td>The GetStatus method retrieves the status of the capture buffer.	
            </td></tr></table><p>The LPDIRECTSOUNDCaptureBuffer8 type is defined as a reference to the <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> *LPDIRECTSOUNDCaptureBuffer8;	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_CaptureBufferBase.htm">CaptureBufferBase</a></td><td><div class="summary"><p>The <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface is used to manipulate sound capture buffers.</p><p>To obtain the <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface, call the IDirectSoundCapture8::CreateCaptureBuffer method to obtain <a href="T_SharpDX_DirectSound_CaptureBufferBase.htm">CaptureBufferBase</a>, then pass IID_IDirectSoundCaptureBuffer8 to IDirectSoundCaptureBuffer::QueryInterface.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface exposes the following methods, arranged by category.</p>Capture Management<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureBuffer8::Lock </td><td>The Lock method locks a portion of the buffer. Locking the buffer returns references into the buffer, allowing the application to read or write audio data into memory.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::Start </td><td>The Start method begins capturing data into the buffer. If the buffer is already capturing, the method has no effect.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::Stop </td><td>The Stop method stops the buffer so that it is no longer capturing data. If the buffer is not capturing, the method has no effect.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::Unlock </td><td>The Unlock method unlocks the buffer.	
            </td></tr></table>Effects<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td><a href="M_SharpDX_DirectSound_CaptureBuffer_GetEffectStatus.htm">GetEffectStatus(Int32)</a></td><td>The GetFXStatus method retrieves the status of capture effects.	
            </td></tr><tr><td><span class="nolink">GetEffect(Guid, Int32, Guid, IntPtr<span id="LST136BD548_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_1?cpp=%");</script>)</span></td><td>The GetObjectInPath method retrieves an interface to an effect object associated with the buffer.	
            </td></tr></table>Initialization<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureBuffer8::Initialize </td><td>The Initialize method initializes a capture buffer object. Because the IDirectSoundCapture8::CreateCaptureBufferIDirectSoundCapture8::CreateCaptureBuffer	
            </td></tr></table>Information<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureBuffer8::GetCaps </td><td>The GetCaps method retrieves the capabilities of the buffer.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::GetCurrentPosition </td><td>Address of a variable that receives the offset from the start of the buffer, in bytes, of the capture cursor. The parameter can be <span class="code">null</span> if this value is not wanted.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::GetFormat </td><td>The GetFormat method retrieves the waveform format of the capture buffer.	
            </td></tr><tr><td>IDirectSoundCaptureBuffer8::GetStatus </td><td>The GetStatus method retrieves the status of the capture buffer.	
            </td></tr></table><p>The LPDIRECTSOUNDCaptureBuffer8 type is defined as a reference to the <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_CaptureBuffer.htm">CaptureBuffer</a> *LPDIRECTSOUNDCaptureBuffer8;	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_CaptureBufferCapabilities.htm">CaptureBufferCapabilities</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_CaptureBufferCapabilities.htm">CaptureBufferCapabilities</a> structure describes the capabilities of a capture buffer. It is used by theIDirectSoundCaptureBuffer8::GetCapsmethod.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_CaptureBufferDescription.htm">CaptureBufferDescription</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_CaptureBufferDescription.htm">CaptureBufferDescription</a> structure describes a capture buffer. It is used by theIDirectSoundCapture8::CreateCaptureBuffermethod and by theDirectSoundFullDuplexCreate8function.<p>An earlier version of this structure, DSCBUFFERDESC1, is maintained in Dsound.h for compatibility with DirectX 7 and earlier.</p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_CaptureCapabilities.htm">CaptureCapabilities</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_CaptureCapabilities.htm">CaptureCapabilities</a> structure describes the capabilities of the capture device. It is used by theIDirectSoundCapture8::GetCapsmethod.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_CaptureEffectDescription.htm">CaptureEffectDescription</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_CaptureEffectDescription.htm">CaptureEffectDescription</a> structure contains parameters for an effect associated with a capture buffer.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Chorus.htm">Chorus</a></td><td><div class="summary"><p>The IDirectSoundFXChorus8 interface is used to set and retrieve effect parameters on a buffer that supports chorus.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXChorus8 interface exposes the following methods.</p>IDirectSoundFXChorus8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXChorus8::GetAllParameters </td><td>The GetAllParameters method retrieves the chorus parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXChorus8::SetAllParameters </td><td>The SetAllParameters method sets the chorus parameters of a buffer.	
            </td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Compressor.htm">Compressor</a></td><td><div class="summary"><p>The IDirectSoundFXCompressor8 interface is used to set and retrieve effect parameters on a buffer that supports compression.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXCompressor8 interface exposes the following methods.</p>IDirectSoundFXCompressor8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXCompressor8::GetAllParameters </td><td>The GetAllParameters method retrieves the compression parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXCompressor8::SetAllParameters </td><td>The SetAllParameters method sets the compression parameters of a buffer.	
            </td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_DeviceInformation.htm">DeviceInformation</a></td><td><div class="summary">
            Contains information about a DirectSound device.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a></td><td><div class="summary"><p>The <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a> interface is used to create buffer objects, manage devices, and set up the environment. This interface supersedes <a href="T_SharpDX_DirectSound_DirectSoundBase.htm">DirectSoundBase</a> and adds new methods.</p><p>Obtain this interface by using the DirectSoundCreate8 or DirectSoundFullDuplexCreate8 function, or by using CoCreateInstance or CoCreateInstanceEx to create an object of class CLSID_DirectSound8.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a> interface exposes the following methods.</p>IDirectSound8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound8::Compact </td><td>The Compact method has no effect.	
            </td></tr><tr><td>IDirectSound8::CreateSoundBuffer </td><td>The CreateSoundBuffer method creates a sound buffer object to manage audio samples.	
            </td></tr><tr><td>IDirectSound8::DuplicateSoundBuffer </td><td>The DuplicateSoundBuffer method creates a new secondary buffer that shares the original buffer's memory.	
            </td></tr><tr><td>IDirectSound8::GetCaps </td><td>The GetCaps method retrieves the capabilities of the hardware device that is represented by the device object.	
            </td></tr><tr><td>IDirectSound8::GetSpeakerConfig </td><td>The GetSpeakerConfig method retrieves the speaker configuration.	
            </td></tr><tr><td>IDirectSound8::Initialize </td><td>The Initialize method initializes a device object that was created by using the CoCreateInstance function.	
            </td></tr><tr><td>IDirectSound8::SetCooperativeLevel </td><td>The SetCooperativeLevel method sets the cooperative level of the application for this sound device.	
            </td></tr><tr><td>IDirectSound8::SetSpeakerConfig </td><td>The SetSpeakerConfig method specifies the speaker configuration of the device.	
            </td></tr><tr><td><span class="nolink">VerifyCertification(Int32<span id="LST136BD548_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_2?cpp=%");</script>)</span></td><td>The VerifyCertification method ascertains whether the device driver is certified for DirectX.	
            </td></tr></table><p>The LPDIRECTSOUND8 type is defined as a reference to the <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a>  *LPDIRECTSOUND8;	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_DirectSoundBase.htm">DirectSoundBase</a></td><td><div class="summary"><p>The <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a> interface is used to create buffer objects, manage devices, and set up the environment. This interface supersedes <a href="T_SharpDX_DirectSound_DirectSoundBase.htm">DirectSoundBase</a> and adds new methods.</p><p>Obtain this interface by using the DirectSoundCreate8 or DirectSoundFullDuplexCreate8 function, or by using CoCreateInstance or CoCreateInstanceEx to create an object of class CLSID_DirectSound8.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a> interface exposes the following methods.</p>IDirectSound8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound8::Compact </td><td>The Compact method has no effect.	
            </td></tr><tr><td>IDirectSound8::CreateSoundBuffer </td><td>The CreateSoundBuffer method creates a sound buffer object to manage audio samples.	
            </td></tr><tr><td>IDirectSound8::DuplicateSoundBuffer </td><td>The DuplicateSoundBuffer method creates a new secondary buffer that shares the original buffer's memory.	
            </td></tr><tr><td>IDirectSound8::GetCaps </td><td>The GetCaps method retrieves the capabilities of the hardware device that is represented by the device object.	
            </td></tr><tr><td>IDirectSound8::GetSpeakerConfig </td><td>The GetSpeakerConfig method retrieves the speaker configuration.	
            </td></tr><tr><td>IDirectSound8::Initialize </td><td>The Initialize method initializes a device object that was created by using the CoCreateInstance function.	
            </td></tr><tr><td>IDirectSound8::SetCooperativeLevel </td><td>The SetCooperativeLevel method sets the cooperative level of the application for this sound device.	
            </td></tr><tr><td>IDirectSound8::SetSpeakerConfig </td><td>The SetSpeakerConfig method specifies the speaker configuration of the device.	
            </td></tr><tr><td><span class="nolink">VerifyCertification(Int32<span id="LST136BD548_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_3?cpp=%");</script>)</span></td><td>The VerifyCertification method ascertains whether the device driver is certified for DirectX.	
            </td></tr></table><p>The LPDIRECTSOUND8 type is defined as a reference to the <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_DirectSound.htm">DirectSound</a>  *LPDIRECTSOUND8;	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_DirectSoundCapture.htm">DirectSoundCapture</a></td><td><div class="summary"><p>The IDirectSoundCapture8 interface is used to create sound capture buffers.</p><p>The interface is obtained by using the DirectSoundCaptureCreate8 or DirectSoundFullDuplexCreate8 functions, or by using CoCreateInstance or CoCreateInstanceEx to create an object of class CLSID_DirectSoundCapture8.</p><p>IDirectSoundCapture8 is a define for <a href="T_SharpDX_DirectSound_DirectSoundCapture.htm">DirectSoundCapture</a>. The two interface names are interchangeable. However, objects supporting this interface can have different functionality, depending on their class. For more information, see DirectSoundCaptureCreate8 and IDirectSoundCapture8::CreateCaptureBuffer.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundCapture8 interface exposes the following methods.</p>IDirectSoundCapture8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCapture8::CreateCaptureBuffer </td><td>The CreateCaptureBuffer method creates a buffer for capturing waveform audio.	
            </td></tr><tr><td>IDirectSoundCapture8::GetCaps </td><td>The GetCaps method retrieves the capabilities of the capture device.	
            </td></tr><tr><td>IDirectSoundCapture8::Initialize </td><td>The Initialize method initializes a capture device object created by using CoCreateInstance. Calling this method is not required when the DirectSoundCaptureCreate8 or DirectSoundFullDuplexCreate8 function is used to create the object.	
            </td></tr></table><p>The LPDIRECTSOUNDCAPTURE type is defined as a reference to the <a href="T_SharpDX_DirectSound_DirectSoundCapture.htm">DirectSoundCapture</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_DirectSoundCapture.htm">DirectSoundCapture</a> *LPDIRECTSOUNDCAPTURE;	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Distortion.htm">Distortion</a></td><td><div class="summary"><p>The IDirectSoundFXDistortion8 interface is used to set and retrieve effect parameters on a buffer that supports distortion.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXDistortion8 interface exposes the following methods.</p>IDirectSoundFXDistortion8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXDistortion8::GetAllParameters </td><td>The GetAllParameters method retrieves the distortion parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXDistortion8::SetAllParameters </td><td>The SetAllParameters method sets the distortion parameters of a buffer.	
            </td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Echo.htm">Echo</a></td><td><div class="summary"><p>The IDirectSoundFXEcho8 interface is used to set and retrieve effect parameters on a buffer that supports echo.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXEcho8 interface exposes the following methods.</p>IDirectSoundFXEcho8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXEcho8::GetAllParameters </td><td>The GetAllParameters method retrieves the echo parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXEcho8::SetAllParameters </td><td>The SetAllParameters method sets the echo parameters of a buffer.	
            </td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Flanger.htm">Flanger</a></td><td><div class="summary"><p>The IDirectSoundFXFlanger8 interface is used to set and retrieve effect parameters on a buffer that supports flange.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXFlanger8 interface exposes the following methods.</p>IDirectSoundFXFlanger8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXFlanger8::GetAllParameters </td><td>The GetAllParameters method retrieves the flange parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXFlanger8::SetAllParameters </td><td>The SetAllParameters method sets the flange parameters of a buffer.	
            </td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_FullDuplex.htm">FullDuplex</a></td><td><div class="summary"><p>The IDirectSoundFullDuplex8 interface represents a full-duplex stream.</p><p>The interface is obtained by using the DirectSoundFullDuplexCreate8 function. This function initializes DirectSound capture and playback.</p><p>The interface can also be obtained by using CoCreateInstance or CoCreateInstanceEx to create an object of class CLSID_DirectSoundFullDuplex8.</p><p>IDirectSoundFullDuplex8 is a define for <a href="T_SharpDX_DirectSound_FullDuplex.htm">FullDuplex</a>. The interface names are interchangeable.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFullDuplex8 interface exposes the following method.</p>IDirectSoundFullDuplex8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFullDuplex8::Initialize </td><td>The Initialize method initializes a full duplex object that was created by using CoCreateInstance.	
            </td></tr></table><p>The LPDIRECTSOUNDFULLDUPLEX type is defined as a reference to <a href="T_SharpDX_DirectSound_FullDuplex.htm">FullDuplex</a>.</p><pre> typedef struct <a href="T_SharpDX_DirectSound_FullDuplex.htm">FullDuplex</a> *LPDIRECTSOUNDFULLDUPLEX;	
            </pre>Info<p>Operating System: Requires Microsoft Windows XP or later.</p><table><tr><th>Windows </th></tr><tr><td><p>Important Note for Windows Vista</p><p>Existing applications that access Windows XP Acoustic Echo Cancellation (AEC) features via the DirectSound API will no longer obtain AEC when running on Windows Vista. These applications will still run, but their calls to AEC-specific DirectSound API calls will have no effect on the captured audio.</p><p>To learn how to obtain AEC in Windows Vista, See the Windows Vista AEC topics in the Windows SDK.</p></td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Gargle.htm">Gargle</a></td><td><div class="summary"><p>The IDirectSoundFXGargle8 interface is used to set and retrieve effect parameters on a buffer that supports amplitude modulation.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXGargle8 interface exposes the following methods.</p>IDirectSoundFXGargle8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXGargle8::GetAllParameters </td><td>The GetAllParameters method retrieves the amplitude modulation parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXGargle8::SetAllParameters </td><td>The SetAllParameters method sets the amplitude modulation parameters of a buffer.	
            </td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_I3DL2Reverb.htm">I3DL2Reverb</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Listener3DSettings.htm">Listener3DSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_Listener3DSettings.htm">Listener3DSettings</a> structure describes the 3D world parameters and the position of the listener. This structure is used with theIDirectSound3DListener8::GetAllParametersandIDirectSound3DListener8::SetAllParametersmethods.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_NoiseSuppress.htm">NoiseSuppress</a></td><td><div class="summary"><p>The IDirectSoundCaptureFXNoiseSuppress8 interface is used to set and retrieve parameters on a capture buffer that supports noise suppression. This interface requires Microsoft WindowsXP or later.</p><p>IDirectSoundCaptureFXNoiseSuppress8 is a define for <a href="T_SharpDX_DirectSound_NoiseSuppress.htm">NoiseSuppress</a>. The interface names are interchangeable.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundCaptureFXNoiseSuppress8 interface exposes the following methods.</p>IDirectSoundCaptureFXNoiseSuppress8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundCaptureFXNoiseSuppress8::GetAllParameters </td><td>The IDirectSoundCaptureFXNoiseSuppress8::GetAllParameters method retrieves the noise suppression parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundCaptureFXNoiseSuppress8::Reset </td><td>The IDirectSoundCaptureFXNoiseSuppress8::Reset method resets the effect to its initial state.	
            </td></tr><tr><td>IDirectSoundCaptureFXNoiseSuppress8::SetAllParameters </td><td>The IDirectSoundCaptureFXNoiseSuppress8::SetAllParameters method sets the noise suppression parameters of a buffer.	
            </td></tr></table><p>The LPDIRECTSOUNDNOISESUPPRESS8 type is defined as a reference to the IDirectSoundNoiseSuppress8 interface:</p><pre> typedef struct IDirectSoundCaptureFXNoiseSuppress8  *LPDIRECTSOUNDCAPTUREFXNOISESUPPRESS8;	
            </pre>Info<p>Operating System: Requires Microsoft WindowsXP or later.</p><table><tr><th>Windows </th></tr><tr><td><p>Important Note for Windows Vista</p><p>Existing applications that access Windows XP Acoustic Echo Cancellation (AEC) features via the DirectSound API will no longer obtain AEC when running on Windows Vista. These applications will still run, but their calls to AEC-specific DirectSound API calls will have no effect on the captured audio.</p><p>To learn how to obtain AEC in Windows Vista, See the Windows Vista AEC topics in the Windows SDK.</p></td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_NotificationPosition.htm">NotificationPosition</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_ParametricEqualizer.htm">ParametricEqualizer</a></td><td><div class="summary"><p>The IDirectSoundFXParamEq8 interface is used to set and retrieve effect parameters on a buffer that supports parametric equalizer effects.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXParamEq8 interface exposes the following methods.</p>IDirectSoundFXParamEq8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXParamEq8::GetAllParameters </td><td>The GetAllParameters method retrieves the parametric equalizer parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXParamEq8::SetAllParameters </td><td>The SetAllParameters method sets the parametric equalizer parameters of a buffer.	
            </td></tr></table></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_PrimarySoundBuffer.htm">PrimarySoundBuffer</a></td><td><div class="summary">
            A Primary DirectSound Buffer.
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a></td><td><div class="summary"><p>The <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> interface is used to manage sound buffers.</p><p>The <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> interface supersedes <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> and adds new methods.</p><p>To obtain the interface, use the CreateSoundBuffer method to retrieve <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a>, and then pass IID_IDirectSoundBuffer8 to IDirectSoundBuffer::QueryInterface.</p><p>For the primary buffer, you must use the <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> interface; <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> is not available. <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> is not documented separately. For documentation, see the corresponding <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> methods.</p><p>Not all methods of <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> are valid for primary buffers. For example, SetCurrentPosition will fail. See the reference topics for individual methods.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> interface exposes the following methods, arranged by category.</p>Effects<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td><span class="nolink">GetEffect(Guid, Int32, Guid, IntPtr<span id="LST136BD548_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_4?cpp=%");</script>)</span></td><td>The GetObjectInPath method retrieves an interface for an effect object associated with the buffer.	
            </td></tr><tr><td><span class="nolink">SetEffect(Int32, <span id="LST136BD548_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_5?cpp=array&lt;");</script>SoundBufferEffectDescription<span id="LST136BD548_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_6?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST136BD548_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_7?cpp=array&lt;");</script>SoundEffectResult<span id="LST136BD548_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_8?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</span></td><td>Number of elements in the pDSFXDesc and pdwResultCodes arrays. If this value is 0, pDSFXDesc and pdwResultCodes must both be <span class="code">null</span>. Set to 0 to remove all effects from the buffer.	
            </td></tr></table>Resource Management<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td><a href="M_SharpDX_DirectSound_SecondarySoundBuffer_AcquireResources.htm">AcquireResources(Int32, Int32, <span id="LST136BD548_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_9?cpp=array&lt;");</script>Int32<span id="LST136BD548_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_10?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td>The AcquireResources method allocates resources for a buffer that was created with the <a href="T_SharpDX_DirectSound_BufferFlags.htm">Defer</a> flag in the DSBUFFERDESCDSBUFFERDESC	
            </td></tr><tr><td>IDirectSoundBuffer8::Restore </td><td>The Restore method restores the memory allocation for a lost sound buffer.	
            </td></tr></table>Play Management<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundBuffer8::GetCurrentPosition </td><td>The GetCurrentPosition method retrieves the position of the play and write cursors in the sound buffer.	
            </td></tr><tr><td>IDirectSoundBuffer8::Lock </td><td>The Lock method readies all or part of the buffer for a data write and returns references to which data can be written.	
            </td></tr><tr><td>IDirectSoundBuffer8::Play </td><td>The Play method causes the sound buffer to play, starting at the play cursor.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetCurrentPosition </td><td>The SetCurrentPosition method sets the position of the play cursor, which is the point at which the next byte of data is read from the buffer.	
            </td></tr><tr><td>IDirectSoundBuffer8::Stop </td><td>The Stop method causes the sound buffer to stop playing.	
            </td></tr><tr><td>IDirectSoundBuffer8::Unlock </td><td>The Unlock method releases a locked sound buffer.	
            </td></tr></table>Sound Parameters<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundBuffer8::GetFrequency </td><td>The GetFrequency method retrieves the frequency, in samples per second, at which the buffer is playing.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetPan </td><td>The GetPan method retrieves the relative volume of the left and right audio channels.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetVolume </td><td>The GetVolume method retrieves the attenuation of the sound.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetFrequency </td><td>The SetFrequency method sets the frequency at which the audio samples are played.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetPan </td><td>The SetPan method sets the relative volume of the left and right channels.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetVolume </td><td>The SetVolume method sets the attenuation of the sound.	
            </td></tr></table>Miscellaneous<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundBuffer8::GetCaps </td><td>The GetCaps method retrieves the capabilities of the buffer object.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetFormat </td><td>The GetFormat method retrieves a description of the format of the sound data in the buffer, or the buffer size needed to retrieve the format description.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetStatus </td><td>The GetStatus method retrieves the status of the sound buffer.	
            </td></tr><tr><td>IDirectSoundBuffer8::Initialize </td><td>The Initialize method initializes a sound buffer object if it has not yet been initialized.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetFormat </td><td>The SetFormat method sets the format of the primary buffer. Whenever this application has the input focus, DirectSound will set the primary buffer to the specified format.	
            </td></tr></table><p>The LPDIRECTSOUNDBUFFER8 type is defined as a reference to the <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a>  *LPDIRECTSOUNDBUFFER8; 	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a></td><td><div class="summary"><p>The <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> interface is used to manage sound buffers.</p><p>The <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> interface supersedes <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> and adds new methods.</p><p>To obtain the interface, use the CreateSoundBuffer method to retrieve <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a>, and then pass IID_IDirectSoundBuffer8 to IDirectSoundBuffer::QueryInterface.</p><p>For the primary buffer, you must use the <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> interface; <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> is not available. <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> is not documented separately. For documentation, see the corresponding <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> methods.</p><p>Not all methods of <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> are valid for primary buffers. For example, SetCurrentPosition will fail. See the reference topics for individual methods.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> interface exposes the following methods, arranged by category.</p>Effects<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td><span class="nolink">GetEffect(Guid, Int32, Guid, IntPtr<span id="LST136BD548_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_11?cpp=%");</script>)</span></td><td>The GetObjectInPath method retrieves an interface for an effect object associated with the buffer.	
            </td></tr><tr><td><span class="nolink">SetEffect(Int32, <span id="LST136BD548_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_12?cpp=array&lt;");</script>SoundBufferEffectDescription<span id="LST136BD548_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST136BD548_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_14?cpp=array&lt;");</script>SoundEffectResult<span id="LST136BD548_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_15?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</span></td><td>Number of elements in the pDSFXDesc and pdwResultCodes arrays. If this value is 0, pDSFXDesc and pdwResultCodes must both be <span class="code">null</span>. Set to 0 to remove all effects from the buffer.	
            </td></tr></table>Resource Management<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td><a href="M_SharpDX_DirectSound_SecondarySoundBuffer_AcquireResources.htm">AcquireResources(Int32, Int32, <span id="LST136BD548_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_16?cpp=array&lt;");</script>Int32<span id="LST136BD548_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST136BD548_17?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td>The AcquireResources method allocates resources for a buffer that was created with the <a href="T_SharpDX_DirectSound_BufferFlags.htm">Defer</a> flag in the DSBUFFERDESCDSBUFFERDESC	
            </td></tr><tr><td>IDirectSoundBuffer8::Restore </td><td>The Restore method restores the memory allocation for a lost sound buffer.	
            </td></tr></table>Play Management<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundBuffer8::GetCurrentPosition </td><td>The GetCurrentPosition method retrieves the position of the play and write cursors in the sound buffer.	
            </td></tr><tr><td>IDirectSoundBuffer8::Lock </td><td>The Lock method readies all or part of the buffer for a data write and returns references to which data can be written.	
            </td></tr><tr><td>IDirectSoundBuffer8::Play </td><td>The Play method causes the sound buffer to play, starting at the play cursor.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetCurrentPosition </td><td>The SetCurrentPosition method sets the position of the play cursor, which is the point at which the next byte of data is read from the buffer.	
            </td></tr><tr><td>IDirectSoundBuffer8::Stop </td><td>The Stop method causes the sound buffer to stop playing.	
            </td></tr><tr><td>IDirectSoundBuffer8::Unlock </td><td>The Unlock method releases a locked sound buffer.	
            </td></tr></table>Sound Parameters<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundBuffer8::GetFrequency </td><td>The GetFrequency method retrieves the frequency, in samples per second, at which the buffer is playing.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetPan </td><td>The GetPan method retrieves the relative volume of the left and right audio channels.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetVolume </td><td>The GetVolume method retrieves the attenuation of the sound.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetFrequency </td><td>The SetFrequency method sets the frequency at which the audio samples are played.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetPan </td><td>The SetPan method sets the relative volume of the left and right channels.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetVolume </td><td>The SetVolume method sets the attenuation of the sound.	
            </td></tr></table>Miscellaneous<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundBuffer8::GetCaps </td><td>The GetCaps method retrieves the capabilities of the buffer object.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetFormat </td><td>The GetFormat method retrieves a description of the format of the sound data in the buffer, or the buffer size needed to retrieve the format description.	
            </td></tr><tr><td>IDirectSoundBuffer8::GetStatus </td><td>The GetStatus method retrieves the status of the sound buffer.	
            </td></tr><tr><td>IDirectSoundBuffer8::Initialize </td><td>The Initialize method initializes a sound buffer object if it has not yet been initialized.	
            </td></tr><tr><td>IDirectSoundBuffer8::SetFormat </td><td>The SetFormat method sets the format of the primary buffer. Whenever this application has the input focus, DirectSound will set the primary buffer to the specified format.	
            </td></tr></table><p>The LPDIRECTSOUNDBUFFER8 type is defined as a reference to the <a href="T_SharpDX_DirectSound_SoundBuffer.htm">SoundBuffer</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a>  *LPDIRECTSOUNDBUFFER8; 	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_SoundBuffer3D.htm">SoundBuffer3D</a></td><td><div class="summary"><p>The IDirectSound3DBuffer8 interface is used to retrieve and set parameters that describe the position, orientation, and environment of a sound buffer in 3D space.</p><p>IDirectSound3DBuffer8 is a define for <a href="T_SharpDX_DirectSound_SoundBuffer3D.htm">SoundBuffer3D</a>. The two interface names are interchangeable.</p><p>The IDirectSound3DBuffer8 interface is obtained from a buffer that was created with the <a href="T_SharpDX_DirectSound_BufferFlags.htm">Control3D</a> flag. You can get it from the <a href="T_SharpDX_DirectSound_SecondarySoundBuffer.htm">SecondarySoundBuffer</a> interface by using the QueryInterface method.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSound3DBuffer8 interface exposes the following methods, arranged by category.</p>3D mode<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DBuffer8::GetMode </td><td>The GetMode method retrieves the operation mode for 3D sound processing.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetMode </td><td>The SetMode method sets the operation mode for 3D sound processing.	
            </td></tr></table>Batch Parameters<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DBuffer8::GetAllParameters </td><td>The GetAllParameters method retrieves the 3D properties of the sound buffer.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetAllParameters </td><td>The SetAllParameters method sets all 3D sound buffer properties.	
            </td></tr></table>Minimum and Maximum Distance<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DBuffer8::GetMaxDistance </td><td>The GetMaxDistance method retrieves the maximum distance, which is the distance from the listener beyond which sounds in this buffer are no longer attenuated.	
            </td></tr><tr><td>IDirectSound3DBuffer8::GetMinDistance </td><td>The GetMinDistance method retrieves the minimum distance, which is the distance from the listener at which sounds in this buffer begin to be attenuated.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetMaxDistance </td><td>The SetMaxDistance method sets the maximum distance, which is the distance from the listener beyond which sounds in this buffer are no longer attenuated.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetMinDistance </td><td>The SetMinDistance method sets the minimum distance, which is the distance from the listener at which sounds in this buffer begin to be attenuated.	
            </td></tr></table>Position<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DBuffer8::GetPosition </td><td>The GetPosition method retrieves the position of the sound source.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetPosition </td><td>The SetPosition method sets the position of the sound source.	
            </td></tr></table>Sound Projection Cone<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DBuffer8::GetConeAngles </td><td>The GetConeAngles method retrieves the inside and outside angles of the sound projection cone.	
            </td></tr><tr><td>IDirectSound3DBuffer8::GetConeOrientation </td><td>The GetConeOrientation method retrieves the orientation of the sound projection cone.	
            </td></tr><tr><td>IDirectSound3DBuffer8::GetConeOutsideVolume </td><td>The GetConeOutsideVolume method retrieves the volume of the sound outside the outside angle of the sound projection cone.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetConeAngles </td><td>The SetConeAngles method sets the inside and outside angles of the sound projection cone.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetConeOrientation </td><td>The SetConeOrientation method sets the orientation of the sound projection cone.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetConeOutsideVolume </td><td>The SetConeOutsideVolume method sets the volume of the sound outside the outside angle of the sound projection cone.	
            </td></tr></table>Velocity<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DBuffer8::GetVelocity </td><td>The GetVelocity method retrieves the velocity of the sound source.	
            </td></tr><tr><td>IDirectSound3DBuffer8::SetVelocity </td><td>The SetVelocity method sets the velocity of the sound source.	
            </td></tr></table><p>The LPDIRECTSOUND3DBUFFER type is defined as a reference to the IDirectSound3DBuffer8 interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_SoundBuffer3D.htm">SoundBuffer3D</a>  *LPDIRECTSOUND3DBUFFER;	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_SoundBufferDescription.htm">SoundBufferDescription</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_SoundBufferDescription.htm">SoundBufferDescription</a> structure describes the characteristics of a new buffer object. It is used by theIDirectSound8::CreateSoundBuffermethod and by theDirectSoundFullDuplexCreate8function.<p>An earlier version of this structure, DSBUFFERDESC1, is maintained in Dsound.h for compatibility with DirectX 7 and earlier.</p></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_SoundListener3D.htm">SoundListener3D</a></td><td><div class="summary"><p>The IDirectSound3DListener8 interface is used to retrieve and set parameters that describe a listener's position, orientation, and listening environment in 3D space.</p><p>The interface can be obtained by calling the IDirectSoundBuffer8::QueryInterface method on a primary buffer created with the <a href="T_SharpDX_DirectSound_BufferFlags.htm">Control3D</a> flag.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSound3DListener8 interface exposes the following methods, arranged by category.</p>Batch Parameters<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DListener8::CommitDeferredSettings </td><td>The CommitDeferredSettings method commits any deferred settings made since the last call to this method.	
            </td></tr><tr><td>IDirectSound3DListener8::GetAllParameters </td><td>The GetAllParameters method retrieves all 3D parameters of the sound environment and the listener.	
            </td></tr><tr><td>IDirectSound3DListener8::SetAllParameters </td><td>The SetAllParameters method sets all 3D parameters of the sound environment and the listener.	
            </td></tr></table>Global Sound Properties<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DListener8::GetDistanceFactor </td><td>The GetDistanceFactor method retrieves the distance factor, which is the number of meters in a vector unit.	
            </td></tr><tr><td>IDirectSound3DListener8::GetDopplerFactor </td><td>The GetDopplerFactor method retrieves the multiplier for the Doppler effect.	
            </td></tr><tr><td>IDirectSound3DListener8::GetRolloffFactor </td><td>The GetRolloffFactor method retrieves the rolloff factor, which determines the rate of attenuation over distance.	
            </td></tr><tr><td>IDirectSound3DListener8::SetDistanceFactor </td><td>The SetDistanceFactor method sets the distance factor, which is the number of meters in a vector unit.	
            </td></tr><tr><td>IDirectSound3DListener8::SetDopplerFactor </td><td>The SetDopplerFactor method sets the multiplier for the Doppler effect.	
            </td></tr><tr><td>IDirectSound3DListener8::SetRolloffFactor </td><td>The SetRolloffFactor method sets the rolloff factor, which determines the rate of attenuation over distance.	
            </td></tr></table>Listener Properties<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSound3DListener8::GetOrientation </td><td>The GetOrientation method retrieves the orientation of the listener's head.	
            </td></tr><tr><td>IDirectSound3DListener8::GetPosition </td><td>The GetPosition method retrieves the listener's position.	
            </td></tr><tr><td>IDirectSound3DListener8::GetVelocity </td><td>The GetVelocity method retrieves the listener's velocity.	
            </td></tr><tr><td>IDirectSound3DListener8::SetOrientation </td><td>The SetOrientation method sets the orientation of the listener's head.	
            </td></tr><tr><td>IDirectSound3DListener8::SetPosition </td><td>The SetPosition method sets the listener's position.	
            </td></tr><tr><td>IDirectSound3DListener8::SetVelocity </td><td>The SetVelocity method sets the listener's velocity.	
            </td></tr></table><p>The LPDIRECTSOUND3DLISTENER type is defined as a reference to the <a href="T_SharpDX_DirectSound_SoundListener3D.htm">SoundListener3D</a> interface:</p><pre> typedef struct <a href="T_SharpDX_DirectSound_SoundListener3D.htm">SoundListener3D</a>  *LPDIRECTSOUND3DLISTENER;	
            </pre></div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_Volume.htm">Volume</a></td><td><div class="summary">	
            Functions	
            </div></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" alt="Public class" title="Public class" /></td><td><a href="T_SharpDX_DirectSound_WavesReverb.htm">WavesReverb</a></td><td><div class="summary"><p>The IDirectSoundFXWavesReverb8 interface is used to set and retrieve effect parameters on a buffer that supports Waves reverberation.</p><p>This interface is obtained by calling GetObjectInPath on the buffer that supports the effect.</p><p>In addition to the methods inherited from <a href="T_SharpDX_ComObject.htm">ComObject</a>, the IDirectSoundFXWavesReverb8 interface exposes the following methods.</p>IDirectSoundFXWavesReverb8 Members<table><tr><th>Method	
            </th><th>Description	
            </th></tr><tr><td>IDirectSoundFXWavesReverb8::GetAllParameters </td><td>The GetAllParameters method retrieves the music reverberation parameters of a buffer.	
            </td></tr><tr><td>IDirectSoundFXWavesReverb8::SetAllParameters </td><td>The SetAllParameters method sets the music reverberation parameters of a buffer.	
            </td></tr></table><p>The Waves reverberation DMO is based on the Waves MaxxVerb technology, which is licenced to Microsoft.</p></div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Structures</span></div><div id="ID1RBSection" class="collapsibleSection"><table class="members" id="structureList"><tr><th class="iconColumn">
					 
				</th><th>Structure</th><th>Description</th></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_AcousticEchoCancelSettings.htm">AcousticEchoCancelSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_AcousticEchoCancelSettings.htm">AcousticEchoCancelSettings</a> structure contains parameters for acoustic echo cancellation in a capture buffer.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_ChorusSettings.htm">ChorusSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_ChorusSettings.htm">ChorusSettings</a> structure contains parameters for a chorus effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_CompressorSettings.htm">CompressorSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_CompressorSettings.htm">CompressorSettings</a> structure contains parameters for a compression effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_DistortionSettings.htm">DistortionSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_DistortionSettings.htm">DistortionSettings</a> structure contains parameters for a distortion effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_EchoSettings.htm">EchoSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_EchoSettings.htm">EchoSettings</a> structure contains parameters for an echo effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_FlangerSettings.htm">FlangerSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_FlangerSettings.htm">FlangerSettings</a> structure contains parameters for a flange effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_GargleSettings.htm">GargleSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_GargleSettings.htm">GargleSettings</a> structure contains parameters for an amplitude modulation effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_I3DL2ReverbSettings.htm">I3DL2ReverbSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_I3DL2ReverbSettings.htm">I3DL2ReverbSettings</a> structure contains parameters for an I3DL2 (Interactive 3D Audio Level 2) reverberation effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_NoiseSuppressSettings.htm">NoiseSuppressSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_NoiseSuppressSettings.htm">NoiseSuppressSettings</a> structure contains parameters for noise suppression in a capture buffer.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_ParametricEqualizerSettings.htm">ParametricEqualizerSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_ParametricEqualizerSettings.htm">ParametricEqualizerSettings</a> structure contains parameters for a parametric equalizer effect.	
            </div></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" alt="Public structure" title="Public structure" /></td><td><a href="T_SharpDX_DirectSound_WavesReverbSettings.htm">WavesReverbSettings</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_WavesReverbSettings.htm">WavesReverbSettings</a> structure contains parameters for a Waves reverberation effect.	
            </div></td></tr></table></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Enumerations</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="enumerationList"><tr><th class="iconColumn">
					 
				</th><th>Enumeration</th><th>Description</th></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_AcousticEchoCancelMode.htm">AcousticEchoCancelMode</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_AcousticEchoCancelSettings.htm">AcousticEchoCancelSettings</a> structure contains parameters for acoustic echo cancellation in a capture buffer.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_AcousticEchoCancelStatus.htm">AcousticEchoCancelStatus</a></td><td><div class="summary"><p>The KSPROPERTY_AEC_STATUS property is used to monitor the status of an AEC node (<strong>KSNODETYPE_ACOUSTIC_ECHO_CANCEL</strong>). This is an optional property of an AEC node.</p></div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_BufferFlags.htm">BufferFlags</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_BufferStatus.htm">BufferStatus</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_CapabilitiesFlags.htm">CapabilitiesFlags</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_Capabilities.htm">Capabilities</a> structure describes the capabilities of a device. It is used by theIDirectSound8::GetCapsmethod.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_CaptureBufferCapabilitiesFlags.htm">CaptureBufferCapabilitiesFlags</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_CaptureBufferStatusFlags.htm">CaptureBufferStatusFlags</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_CaptureCapabilitiesFlags.htm">CaptureCapabilitiesFlags</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_CaptureCapabilities.htm">CaptureCapabilities</a> structure describes the capabilities of the capture device. It is used by theIDirectSoundCapture8::GetCapsmethod.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_CaptureEffectResult.htm">CaptureEffectResult</a></td><td><div class="summary">	
            The <a href="T_SharpDX_DirectSound_CaptureEffectDescription.htm">CaptureEffectDescription</a> structure contains parameters for an effect associated with a capture buffer.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_CooperativeLevel.htm">CooperativeLevel</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_I3DL2MaterialPreset.htm">I3DL2MaterialPreset</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_I3DL2ReverbPreset.htm">I3DL2ReverbPreset</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_LockFlags.htm">LockFlags</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_Mode3D.htm">Mode3D</a></td><td><div class="summary">	
            The GetMode method retrieves the operation mode for 3D sound processing.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_PlayFlags.htm">PlayFlags</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_SoundEffectResult.htm">SoundEffectResult</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_SpeakerConfiguration.htm">SpeakerConfiguration</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr><tr data="enumeration; public"><td><img src="../icons/pubenumeration.gif" alt="Public enumeration" title="Public enumeration" /></td><td><a href="T_SharpDX_DirectSound_SpeakerGeometry.htm">SpeakerGeometry</a></td><td><div class="summary">	
            No documentation.	
            </div></td></tr></table></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>