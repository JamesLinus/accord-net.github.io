<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Decision Structure</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="Decision structure" />
    <meta name="System.Keywords" content="Accord.MachineLearning.Decision structure" />
    <meta name="System.Keywords" content="Decision structure, about Decision structure" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.Decision" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.Decision" />
    <meta name="Description" content="Decision between two class labels. Indicates the class index of the first class, the class index of the adversary, and the class index of the winner." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning" />
    <meta name="file" content="T_Accord_MachineLearning_Decision" />
    <meta name="guid" content="T_Accord_MachineLearning_Decision" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning.htm" title="Accord.MachineLearning" tocid="N_Accord_MachineLearning">Accord.MachineLearning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_Decision.htm" title="Decision Structure" tocid="T_Accord_MachineLearning_Decision">Decision Structure</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_Decision__ctor.htm" title="Decision Constructor " tocid="M_Accord_MachineLearning_Decision__ctor">Decision Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_MachineLearning_Decision.htm" title="Decision Properties" tocid="Properties_T_Accord_MachineLearning_Decision">Decision Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_MachineLearning_Decision.htm" title="Decision Methods" tocid="Methods_T_Accord_MachineLearning_Decision">Decision Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>Decision Structure</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Decision between two class labels. Indicates the class index of the first 
              class, the class index of the adversary, and the class index of the winner.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning.htm">Accord.MachineLearning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">Decision</span></pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">Decision</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/Multiclass/Decision.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">Decision</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Decision__ctor.htm">Decision</a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">Decision</span> struct.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Decision_Pair.htm">Pair</a></td><td><div class="summary">
              Gets the adversarial classes.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Decision_Winner.htm">Winner</a></td><td><div class="summary">
              Gets the class label of the winner.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Indicates whether this instance and a specified object are equal.</div> (Inherited from <span class="nolink">ValueType</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Returns the hash code for this instance.</div> (Inherited from <span class="nolink">ValueType</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Decision_ToString.htm">ToString</a></td><td><div class="summary">
            Returns a <span class="nolink">String</span> that represents this instance.
            </div> (Overrides <span class="nolink">ValueType<span id="LST51AE79B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ToString<span id="LST51AE79B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_1?cs=()|vb=|cpp=()|nu=()|fs=()");</script></span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Decision_ToTuple.htm">ToTuple</a></td><td><div class="summary">
              Converts to a triplet (class_a, class_b, winner).
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">
                Compares two objects for equality, performing an elementwise 
                comparison if the elements are vectors or matrices.
            </div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To.htm">To(Type)</a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LST51AE79B_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST51AE79B_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_3?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST51AE79B_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID6RBSection" class="collapsibleSection"><p>
              The <span class="selflink">Decision</span> structure is used to represent the outcome of a binary classifier for the 
              problem of deciding between two classes. For example, let's say we would like to represent that, given
              the problem of deciding between class #4 and class #2, a binary classsifier has opted for deciding that 
              class #2 was more likely than class #4. This could be represented by a <span class="selflink">Decision</span> structure 
              by instantiating it using <span class="code">Decision(i: 4, j: 2, winner: 2)</span>.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><p>The <span class="selflink">Decision</span> structure is more likely to be used or found when dealing with strategies 
              for creating multi-class and/or multi-label classifiers using a set of binary classifiers, such as when using 
              <a href="T_Accord_MachineLearning_OneVsOne_2.htm">OneVsOne<span id="LST51AE79B_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_5?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TBinary, TInput<span id="LST51AE79B_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_6?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> and <a href="T_Accord_MachineLearning_OneVsRest_2.htm">OneVsRest<span id="LST51AE79B_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_7?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LST51AE79B_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_8?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>. In the example below, we 
              will extract the sequence of binary classification problems and their respective decisions when evaluating a 
              multi-class SVM using the one-vs-one decision strategy for multi-class problems:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABDBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABDBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABDBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Generate always same random numbers</span>
Accord.Math.Random.Generator.Seed = <span class="highlight-number">0</span>;

<span class="highlight-comment">// The following is a simple auto association function in which </span>
<span class="highlight-comment">// the last column of each input correspond to its own class. This</span>
<span class="highlight-comment">// problem should be easily solved using a Linear kernel.</span>

<span class="highlight-comment">// Sample input data</span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">6</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">7</span>, <span class="highlight-number">6</span>, <span class="highlight-number">2</span> },
};

<span class="highlight-comment">// Output for each of the inputs</span>
<span class="highlight-keyword">int</span>[] outputs = { <span class="highlight-number">0</span>, <span class="highlight-number">3</span>, <span class="highlight-number">1</span>, <span class="highlight-number">2</span> };


<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Linear&gt;()
{
    <span class="highlight-comment">// Configure the learning algorithm to use SMO to train the</span>
    <span class="highlight-comment">//  underlying SVMs in each of the binary class subproblems.</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Linear&gt;()
    {
        <span class="highlight-comment">// If you would like to use other kernels, simply replace</span>
        <span class="highlight-comment">// the generic parameter to the desired kernel class, such</span>
        <span class="highlight-comment">// as for example, Polynomial or Gaussian:</span>

        Kernel = <span class="highlight-keyword">new</span> Linear() <span class="highlight-comment">// use the Linear kernel</span>
    }
};

<span class="highlight-comment">// Estimate the multi-class support vector machine using one-vs-one method</span>
MulticlassSupportVectorMachine&lt;Linear&gt; ovo = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = ovo.Decide(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABDBA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAADBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAADBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAADBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// The decision process in a multi-class SVM is actually based on a series of</span>
<span class="highlight-comment">// smaller, binary decisions combined together using a one-vs-one strategy. It</span>
<span class="highlight-comment">// is possible to determine the results of each of those internal one-vs-one</span>
<span class="highlight-comment">// decisions using:</span>

<span class="highlight-comment">// First, call Decide, Scores, LogLikelihood or Probability methods:</span>
<span class="highlight-keyword">int</span> y = ovo.Decide(<span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">6</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span> }); <span class="highlight-comment">// result should be 3</span>

<span class="highlight-comment">// Now, call method GetLastDecisionPath():</span>
Decision[] path = ovo.GetLastDecisionPath(); <span class="highlight-comment">// contains 3 decisions</span>

<span class="highlight-comment">// The binary decisions obtained while computing the last decision</span>
<span class="highlight-comment">// above (i.e. the last call to the Decide method), were:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">//  - Class 0 vs. class 3, winner was 3</span>
<span class="highlight-comment">//  - Class 1 vs. class 3, winner was 3</span>
<span class="highlight-comment">//  - Class 2 vs. class 3, winner was 3</span>

<span class="highlight-comment">// The GetLastDecisionPath() method is thread-safe and will always</span>
<span class="highlight-comment">// return the last computed path in the current calling thread.</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAADBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning.htm">Accord.MachineLearning Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_ClassPair.htm">Accord.MachineLearning<span id="LST51AE79B_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ClassPair</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_OneVsOne_2.htm">Accord.MachineLearning<span id="LST51AE79B_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OneVsOne<span id="LST51AE79B_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_11?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TBinary, TInput<span id="LST51AE79B_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_12?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_OneVsRest_2.htm">Accord.MachineLearning<span id="LST51AE79B_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OneVsRest<span id="LST51AE79B_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_14?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LST51AE79B_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST51AE79B_15?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>