<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>LinearDualCoordinateDescent Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="LinearDualCoordinateDescent class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.LinearDualCoordinateDescent class" />
    <meta name="System.Keywords" content="LinearDualCoordinateDescent class, about LinearDualCoordinateDescent class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.VectorMachines.Learning.LinearDualCoordinateDescent" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.VectorMachines.Learning.LinearDualCoordinateDescent" />
    <meta name="Description" content="L2-regularized, L1 or L2-loss dual formulation Support Vector Machine learning (-s 1 and -s 3)." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning.VectorMachines.Learning" />
    <meta name="file" content="T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent" />
    <meta name="guid" content="T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning_VectorMachines_Learning.htm" title="Accord.MachineLearning.VectorMachines.Learning" tocid="N_Accord_MachineLearning_VectorMachines_Learning">Accord.MachineLearning.VectorMachines.Learning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent.htm" title="LinearDualCoordinateDescent Class" tocid="T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent">LinearDualCoordinateDescent Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent__ctor.htm" title="LinearDualCoordinateDescent Constructor " tocid="Overload_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent__ctor">LinearDualCoordinateDescent Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Properties_T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent.htm" title="LinearDualCoordinateDescent Properties" tocid="Properties_T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent">LinearDualCoordinateDescent Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent.htm" title="LinearDualCoordinateDescent Methods" tocid="Methods_T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent">LinearDualCoordinateDescent Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>LinearDualCoordinateDescent Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
               L2-regularized, L1 or L2-loss dual formulation 
               Support Vector Machine learning (-s 1 and -s 3).
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTDDD4A8AA_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">Accord.MachineLearning<span id="LSTDDD4A8AA_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BinaryLearningBase</a><span id="LSTDDD4A8AA_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a>, <span id="LSTDDD4A8AA_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_3?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTDDD4A8AA_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_4?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTDDD4A8AA_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />    <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTDDD4A8AA_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseSupportVectorClassification</a><span id="LSTDDD4A8AA_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a>, <a href="T_Accord_Statistics_Kernels_Linear.htm">Linear</a>, <span id="LSTDDD4A8AA_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_8?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTDDD4A8AA_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_9?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTDDD4A8AA_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />      <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTDDD4A8AA_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseLinearDualCoordinateDescent</a><span id="LSTDDD4A8AA_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a>, <a href="T_Accord_Statistics_Kernels_Linear.htm">Linear</a>, <span id="LSTDDD4A8AA_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_13?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTDDD4A8AA_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_14?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTDDD4A8AA_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />        <span class="selflink">Accord.MachineLearning.VectorMachines.Learning<span id="LSTDDD4A8AA_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_16?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LinearDualCoordinateDescent</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.6.4-alpha<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">LinearDualCoordinateDescent</span> : <span class="identifier">BaseLinearDualCoordinateDescent</span>&lt;<span class="identifier">SupportVectorMachine</span>, <span class="identifier">Linear</span>, <span class="identifier">double</span>[]&gt;, 
	<span class="identifier">ILinearSupportVectorMachineLearning</span>, <span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">SupportVectorMachine</span>, <span class="identifier">double</span>[], <span class="identifier">double</span>&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">SupportVectorMachine</span>, <span class="identifier">double</span>[], <span class="identifier">int</span>&gt;, <span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">SupportVectorMachine</span>, <span class="identifier">double</span>[], <span class="identifier">bool</span>&gt;, 
	<span class="identifier">ISupportVectorMachineLearning</span>, <span class="identifier">ISupportVectorMachineLearning</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">ISupervisedBinaryLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[]&gt;, 
	<span class="identifier">ISupervisedMulticlassLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[]&gt;, <span class="identifier">ISupervisedMultilabelLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[]&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[], <span class="identifier">int</span>[]&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[], <span class="identifier">bool</span>[]&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[], <span class="identifier">int</span>&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[], <span class="identifier">bool</span>&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">ISupportVectorMachine</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">double</span>[], <span class="identifier">double</span>&gt;</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">LinearDualCoordinateDescent</span>
	<span class="keyword">Inherits</span> <span class="identifier">BaseLinearDualCoordinateDescent</span>(<span class="keyword">Of</span> <span class="identifier">SupportVectorMachine</span>, <span class="identifier">Linear</span>, <span class="identifier">Double</span>())
	<span class="keyword">Implements</span> <span class="identifier">ILinearSupportVectorMachineLearning</span>, <span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">SupportVectorMachine</span>, <span class="identifier">Double</span>(), <span class="identifier">Double</span>), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">SupportVectorMachine</span>, <span class="identifier">Double</span>(), <span class="identifier">Integer</span>), <span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">SupportVectorMachine</span>, <span class="identifier">Double</span>(), <span class="identifier">Boolean</span>), 
	<span class="identifier">ISupportVectorMachineLearning</span>, <span class="identifier">ISupportVectorMachineLearning</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">ISupervisedBinaryLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>()), 
	<span class="identifier">ISupervisedMulticlassLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>()), 
	<span class="identifier">ISupervisedMultilabelLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>()), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>(), <span class="identifier">Integer</span>()), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>(), <span class="identifier">Boolean</span>()), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>(), <span class="identifier">Integer</span>), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>(), <span class="identifier">Boolean</span>), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">ISupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">Double</span>(), <span class="identifier">Double</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/VectorMachines/Learning/LinearDualCoordinateDescent.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">LinearDualCoordinateDescent</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent__ctor.htm">LinearDualCoordinateDescent<span id="LSTDDD4A8AA_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_17?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">LinearDualCoordinateDescent</span> class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent__ctor_1.htm">LinearDualCoordinateDescent(ISupportVectorMachine<span id="LSTDDD4A8AA_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LSTDDD4A8AA_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_19?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_20?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTDDD4A8AA_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LSTDDD4A8AA_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_22?cpp=array&lt;");</script><span id="LSTDDD4A8AA_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_23?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_24?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTDDD4A8AA_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_25?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_26?cpp=array&lt;");</script>Int32<span id="LSTDDD4A8AA_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_C.htm">C</a></td><td><div class="summary">
              Gets or sets the cost values associated with each input vector.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_28?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_29?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a></td><td><div class="summary">
              Complexity (cost) parameter C. Increasing the value of C forces the creation
              of a more accurate model that may not generalize well. If this value is not
              set and <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseComplexityHeuristic.htm">UseComplexityHeuristic</a> is set to <span class="code">true</span>, the framework
              will automatically guess a value for <span class="code">C</span>. If this value is manually set to 
              something else, then <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseComplexityHeuristic.htm">UseComplexityHeuristic</a> will be automatically 
              disabled and the given value will be used instead.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_30?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_31?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Inputs.htm">Inputs</a></td><td><div class="summary">
              Gets or sets the input vectors for training.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_32?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_33?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Kernel.htm">Kernel</a></td><td><div class="summary">
              Gets or sets the kernel function use to create a 
              kernel Support Vector Machine. If this property
              is set, <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseKernelEstimation.htm">UseKernelEstimation</a> will be
              set to false.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_34?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_35?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3_Lagrange.htm">Lagrange</a></td><td><div class="summary">
              Gets the value for the Lagrange multipliers
              (alpha) for every observation vector.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3.htm">BaseLinearDualCoordinateDescent<span id="LSTDDD4A8AA_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_36?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_37?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3_Loss.htm">Loss</a></td><td><div class="summary">
              Gets or sets the <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3_Loss.htm">Loss</a> cost function that
              should be optimized. Default is 
              <a href="T_Accord_MachineLearning_VectorMachines_Learning_Loss.htm">L2</a>.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3.htm">BaseLinearDualCoordinateDescent<span id="LSTDDD4A8AA_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_38?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_39?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Model.htm">Model</a></td><td><div class="summary">
              Gets or sets the classifier being learned.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTDDD4A8AA_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_40?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTDDD4A8AA_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_41?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_NegativeWeight.htm">NegativeWeight</a></td><td><div class="summary">
              Gets or sets the negative class weight. This should be a
              value higher than 0 indicating how much of the <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a>
              parameter C should be applied to instances carrying the negative label.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_42?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_43?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Outputs.htm">Outputs</a></td><td><div class="summary">
              Gets or sets the output labels for each training vector.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_44?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_45?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_PositiveWeight.htm">PositiveWeight</a></td><td><div class="summary">
              Gets or sets the positive class weight. This should be a
              value higher than 0 indicating how much of the <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a>
              parameter C should be applied to instances carrying the positive label.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_46?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_47?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Token.htm">Token</a></td><td><div class="summary">
              Gets or sets a cancellation token that can be used to
              stop the learning algorithm while it is running.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTDDD4A8AA_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_48?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTDDD4A8AA_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_49?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Convergence tolerance. Default value is 0.1.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3.htm">BaseLinearDualCoordinateDescent<span id="LSTDDD4A8AA_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_50?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_51?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseClassProportions.htm">UseClassProportions</a></td><td><div class="summary">
              Gets or sets a value indicating whether the weight ratio to be used between
              <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a> values for negative and positive instances should
              be computed automatically from the data proportions. Default is false.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_52?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_53?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseComplexityHeuristic.htm">UseComplexityHeuristic</a></td><td><div class="summary">
              Gets or sets a value indicating whether the Complexity parameter C
              should be computed automatically by employing an heuristic rule.
              Default is true.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_54?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_55?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseKernelEstimation.htm">UseKernelEstimation</a></td><td><div class="summary">
              Gets or sets whether initial values for some kernel parameters
              should be estimated from the data, if possible. Default is true.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_56?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_57?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_WeightRatio.htm">WeightRatio</a></td><td><div class="summary">
              Gets or sets the weight ratio between positive and negative class
              weights. This ratio controls how much of the <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a>
              parameter C should be applied to the positive class. 
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_58?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_59?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_ComputeError.htm">ComputeError</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the error rate for a given set of input and outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_60?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_61?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent_Create.htm">Create</a></td><td><div class="summary">
            Creates an instance of the model to be learned. Inheritors
            of this abstract class must define this method so new models
            can be created from the training data.
            </div> (Overrides <a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Create.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_62?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_63?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTDDD4A8AA_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_64?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Create(Int32, TKernel)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3_InnerRun.htm">InnerRun</a></td><td><div class="summary">
              Runs the learning algorithm.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseLinearDualCoordinateDescent_3.htm">BaseLinearDualCoordinateDescent<span id="LSTDDD4A8AA_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_65?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_66?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_1.htm">Learn(<span id="LSTDDD4A8AA_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_67?cpp=array&lt;");</script>TInput<span id="LSTDDD4A8AA_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_68?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_69?cpp=array&lt;");</script><span id="LSTDDD4A8AA_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_70?cpp=array&lt;");</script>Boolean<span id="LSTDDD4A8AA_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTDDD4A8AA_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_73?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_74?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTDDD4A8AA_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_75?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTDDD4A8AA_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_76?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_2.htm">Learn(<span id="LSTDDD4A8AA_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_77?cpp=array&lt;");</script>TInput<span id="LSTDDD4A8AA_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_78?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_79?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_80?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_81?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_82?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTDDD4A8AA_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_83?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTDDD4A8AA_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_84?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_3.htm">Learn(<span id="LSTDDD4A8AA_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_85?cpp=array&lt;");</script>TInput<span id="LSTDDD4A8AA_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_86?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_87?cpp=array&lt;");</script>Int32<span id="LSTDDD4A8AA_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_88?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_89?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_90?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTDDD4A8AA_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_91?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTDDD4A8AA_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_92?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_4.htm">Learn(<span id="LSTDDD4A8AA_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_93?cpp=array&lt;");</script>TInput<span id="LSTDDD4A8AA_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_94?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_95?cpp=array&lt;");</script><span id="LSTDDD4A8AA_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_96?cpp=array&lt;");</script>Int32<span id="LSTDDD4A8AA_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_97?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTDDD4A8AA_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_98?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_99?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_100?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTDDD4A8AA_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_101?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTDDD4A8AA_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_102?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Learn.htm">Learn(<span id="LSTDDD4A8AA_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_103?cpp=array&lt;");</script>TInput<span id="LSTDDD4A8AA_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_104?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_105?cpp=array&lt;");</script>Boolean<span id="LSTDDD4A8AA_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_106?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTDDD4A8AA_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_107?cpp=array&lt;");</script>Double<span id="LSTDDD4A8AA_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_108?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_109?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_110?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Run.htm">Run<span id="LSTDDD4A8AA_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_111?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_112?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_113?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Run_1.htm">Run(Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTDDD4A8AA_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_114?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTDDD4A8AA_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_115?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTDDD4A8AA_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_116?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTDDD4A8AA_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTDDD4A8AA_117?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
               This class implements a <a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a> learning algorithm
               specifically crafted for linear machines only. It provides a L2-regularized, L1
               or L2-loss coordinate descent learning algorithm for optimizing the dual form of
               learning. The code has been based on liblinear's method <span class="code">solve_l2r_l1l2_svc</span>
               method, whose original description is provided below.
             </p><p>
               Liblinear's solver <span class="code">-s 1</span>: <span class="code">L2R_L2LOSS_SVC_DUAL</span> and <span class="code">-s 3</span>: 
               <span class="code">L2R_L1LOSS_SVC_DUAL</span>. A coordinate descent algorithm for L1-loss and 
               L2-loss SVM problems in the dual.
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAHEBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAHEBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAHEBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">min_\alpha  <span class="highlight-number">0.5</span>(\alpha^T (Q + D)\alpha) - e^T \alpha,
  s.t.      <span class="highlight-number">0</span> &lt;= \alpha_i &lt;= upper_bound_i,</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAHEBA");</script><p>
              where Qij = yi yj xi^T xj and
              D is a diagonal matrix </p><p>
             In L1-SVM case:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEEBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEEBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEEBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">upper_bound_i = Cp <span class="highlight-keyword">if</span> y_i = <span class="highlight-number">1</span>
upper_bound_i = Cn <span class="highlight-keyword">if</span> y_i = <span class="highlight-number">-1</span>
D_ii = <span class="highlight-number">0</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEEBA");</script><p>
             In L2-SVM case:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACEBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACEBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACEBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">upper_bound_i = INF
D_ii = <span class="highlight-number">1</span>/(<span class="highlight-number">2</span>*Cp)    <span class="highlight-keyword">if</span> y_i = <span class="highlight-number">1</span>
D_ii = <span class="highlight-number">1</span>/(<span class="highlight-number">2</span>*Cn)    <span class="highlight-keyword">if</span> y_i = <span class="highlight-number">-1</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACEBA");</script><p>
             Given: x, y, Cp, Cn, and eps as the stopping tolerance</p><p>
             See Algorithm 3 of Hsieh et al., ICML 2008.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><p>The next example shows how to solve a multi-class problem using a one-vs-one SVM 
               where the binary machines are learned using the Linear Dual Coordinate Descent algorithm.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACDBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACDBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACDBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we have the following data to be classified</span>
<span class="highlight-comment">// into three possible classes. Those are the samples:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">//               input         output</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0 </span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
};

<span class="highlight-keyword">int</span>[] outputs = <span class="highlight-comment">// those are the class labels</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,
    <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,
    <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
};

<span class="highlight-comment">// Create a one-vs-one multi-class SVM learning algorithm </span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Linear&gt;()
{
    <span class="highlight-comment">// using LIBLINEAR's L2-loss SVC dual for each SVM</span>
    Learner = (p) =&gt; <span class="highlight-keyword">new</span> LinearDualCoordinateDescent()
    {
        Loss = Loss.L2
    }
};

<span class="highlight-comment">// The following line is only needed to ensure reproducible results. Please remove it to enable full parallelization</span>
teacher.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>; <span class="highlight-comment">// (Remove, comment, or change this line to enable full parallelism)</span>

<span class="highlight-comment">// Learn a machine</span>
<span class="highlight-keyword">var</span> machine = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = machine.Decide(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACDBA");</script><p>
               The following example shows how to obtain a <a href="T_Accord_Statistics_Models_Regression_Linear_MultipleLinearRegression.htm">MultipleLinearRegression</a> 
               from a linear <a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a>. It contains exactly the same data 
               used in the <a href="T_Accord_Statistics_Models_Regression_Linear_OrdinaryLeastSquares.htm">OrdinaryLeastSquares</a> documentation page for 
               <a href="T_Accord_Statistics_Models_Regression_Linear_MultipleLinearRegression.htm">MultipleLinearRegression</a>.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAADBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAADBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAADBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Declare some training data. This is exactly the same</span>
<span class="highlight-comment">// data used in the MultipleLinearRegression documentation page</span>

<span class="highlight-comment">// We will try to model a plane as an equation in the form</span>
<span class="highlight-comment">// "ax + by + c = z". We have two input variables (x and y)</span>
<span class="highlight-comment">// and we will be trying to find two parameters a and b and </span>
<span class="highlight-comment">// an intercept term c.</span>

<span class="highlight-comment">// Create the linear-SVM learning algorithm</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> LinearDualCoordinateDescent()
{
    Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-10</span>,
    Complexity = <span class="highlight-number">1</span>e<span class="highlight-number">+10</span>, <span class="highlight-comment">// learn a hard-margin model</span>
};

<span class="highlight-comment">// Now suppose you have some points</span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span> },
};

<span class="highlight-comment">// located in the same Z (z = 1)</span>
<span class="highlight-keyword">double</span>[] outputs = { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> };

<span class="highlight-comment">// Learn the support vector machine</span>
<span class="highlight-keyword">var</span> svm = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// Convert the svm to logistic regression</span>
<span class="highlight-keyword">var</span> regression = (MultipleLinearRegression)svm;

<span class="highlight-comment">// As result, we will be given the following:</span>
<span class="highlight-keyword">double</span> a = regression.Weights[<span class="highlight-number">0</span>]; <span class="highlight-comment">// a = 0</span>
<span class="highlight-keyword">double</span> b = regression.Weights[<span class="highlight-number">1</span>]; <span class="highlight-comment">// b = 0</span>
<span class="highlight-keyword">double</span> c = regression.Intercept;  <span class="highlight-comment">// c = 1</span>

<span class="highlight-comment">// This is the plane described by the equation</span>
<span class="highlight-comment">// ax + by + c = z =&gt; 0x + 0y + 1 = z =&gt; 1 = z.</span>

<span class="highlight-comment">// We can compute the predicted points using</span>
<span class="highlight-keyword">double</span>[] predicted = regression.Transform(inputs);

<span class="highlight-comment">// And the squared error loss using </span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> SquareLoss(outputs).Loss(predicted);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAADBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>