<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>SequentialMinimalOptimization(TKernel) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="SequentialMinimalOptimization%3CTKernel%3E class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.SequentialMinimalOptimization%3CTKernel%3E class" />
    <meta name="System.Keywords" content="SequentialMinimalOptimization%3CTKernel%3E class, about SequentialMinimalOptimization%3CTKernel%3E class" />
    <meta name="System.Keywords" content="SequentialMinimalOptimization(Of TKernel) class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.SequentialMinimalOptimization(Of TKernel) class" />
    <meta name="System.Keywords" content="SequentialMinimalOptimization(Of TKernel) class, about SequentialMinimalOptimization(Of TKernel) class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.VectorMachines.Learning.SequentialMinimalOptimization`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.VectorMachines.Learning.SequentialMinimalOptimization`1" />
    <meta name="Description" content="Sequential Minimal Optimization (SMO) Algorithm." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning.VectorMachines.Learning" />
    <meta name="file" content="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1" />
    <meta name="guid" content="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning_VectorMachines_Learning.htm" title="Accord.MachineLearning.VectorMachines.Learning" tocid="N_Accord_MachineLearning_VectorMachines_Learning">Accord.MachineLearning.VectorMachines.Learning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1.htm" title="SequentialMinimalOptimization(TKernel) Class" tocid="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1">SequentialMinimalOptimization(TKernel) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1__ctor.htm" title="SequentialMinimalOptimization(TKernel) Constructor " tocid="M_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1__ctor">SequentialMinimalOptimization(TKernel) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Properties_T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1.htm" title="SequentialMinimalOptimization(TKernel) Properties" tocid="Properties_T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1">SequentialMinimalOptimization(TKernel) Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1.htm" title="SequentialMinimalOptimization(TKernel) Methods" tocid="Methods_T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1">SequentialMinimalOptimization(TKernel) Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>SequentialMinimalOptimization<span id="LSTB28804C1_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TKernel</span><span id="LSTB28804C1_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Sequential Minimal Optimization (SMO) Algorithm.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTB28804C1_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">Accord.MachineLearning<span id="LSTB28804C1_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BinaryLearningBase</a><span id="LSTB28804C1_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">SupportVectorMachine</a><span id="LSTB28804C1_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TKernel</span></span><span id="LSTB28804C1_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LSTB28804C1_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_7?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTB28804C1_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_8?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTB28804C1_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />    <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTB28804C1_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseSupportVectorClassification</a><span id="LSTB28804C1_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">SupportVectorMachine</a><span id="LSTB28804C1_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TKernel</span></span><span id="LSTB28804C1_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span class="selflink"><span class="typeparameter">TKernel</span></span>, <span id="LSTB28804C1_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_14?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTB28804C1_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_15?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTB28804C1_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />      <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTB28804C1_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_17?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseSequentialMinimalOptimization</a><span id="LSTB28804C1_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">SupportVectorMachine</a><span id="LSTB28804C1_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_19?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TKernel</span></span><span id="LSTB28804C1_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_20?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span class="selflink"><span class="typeparameter">TKernel</span></span>, <span id="LSTB28804C1_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_21?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTB28804C1_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_22?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTB28804C1_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_23?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />        <span class="selflink">Accord.MachineLearning.VectorMachines.Learning<span id="LSTB28804C1_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_24?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SequentialMinimalOptimization<span id="LSTB28804C1_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_25?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_26?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.7.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SequentialMinimalOptimization</span>&lt;TKernel&gt; : <span class="identifier">BaseSequentialMinimalOptimization</span>&lt;<span class="identifier">SupportVectorMachine</span>&lt;TKernel&gt;, TKernel, <span class="identifier">double</span>[]&gt;
<span class="keyword">where</span> TKernel : <span class="identifier">Object</span>, <span class="identifier">IKernel</span>&lt;<span class="identifier">double</span>[]&gt;
</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">SequentialMinimalOptimization</span>(<span class="keyword">Of</span> TKernel <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IKernel</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>())})
	<span class="keyword">Inherits</span> <span class="identifier">BaseSequentialMinimalOptimization</span>(<span class="keyword">Of</span> <span class="identifier">SupportVectorMachine</span>(<span class="keyword">Of</span> TKernel), TKernel, <span class="identifier">Double</span>())</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/VectorMachines/Learning/SequentialMinimalOptimization.cs" title="View the source code">View Source</a><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TKernel</span></dt><dd /></dl></div><p>The <span class="selflink">SequentialMinimalOptimization<span id="LSTB28804C1_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_27?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_28?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1__ctor.htm">SequentialMinimalOptimization<span id="LSTB28804C1_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_29?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_30?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">SequentialMinimalOptimization<span id="LSTB28804C1_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_31?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_32?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> class</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_ActiveExamples.htm">ActiveExamples</a></td><td><div class="summary">
              Gets the indices of the active examples (examples which have
              the corresponding Lagrange multiplier different than zero).
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_33?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_34?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_BoundedExamples.htm">BoundedExamples</a></td><td><div class="summary">
              Gets the indices of the examples at the boundary (examples
              which have the corresponding Lagrange multipliers equal to C).
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_35?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_36?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_C.htm">C</a></td><td><div class="summary">
              Gets or sets the cost values associated with each input vector.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_37?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_38?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_CacheSize.htm">CacheSize</a></td><td><div class="summary">
              Gets or sets the cache size to partially store the kernel 
              matrix. Default is the same number of input vectors, meaning
              the entire kernel matrix will be computed and cached in memory.
              If set to zero, the cache will be disabled and all operations will
              be computed as needed.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_39?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_40?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_Compact.htm">Compact</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets or sets whether to produce compact models. Compact
              formulation is currently limited to linear models.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_41?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_42?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a></td><td><div class="summary">
              Complexity (cost) parameter C. Increasing the value of C forces the creation
              of a more accurate model that may not generalize well. If this value is not
              set and <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseComplexityHeuristic.htm">UseComplexityHeuristic</a> is set to <span class="code">true</span>, the framework
              will automatically guess a value for <span class="code">C</span>. If this value is manually set to 
              something else, then <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseComplexityHeuristic.htm">UseComplexityHeuristic</a> will be automatically 
              disabled and the given value will be used instead.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_43?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_44?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_Epsilon.htm">Epsilon</a></td><td><div class="summary">
              Epsilon for round-off errors. Default value is 1e-6.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_45?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_46?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Inputs.htm">Inputs</a></td><td><div class="summary">
              Gets or sets the input vectors for training.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_47?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_48?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Kernel.htm">Kernel</a></td><td><div class="summary">
              Gets or sets the kernel function use to create a 
              kernel Support Vector Machine. If this property
              is set, <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseKernelEstimation.htm">UseKernelEstimation</a> will be
              set to false.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_49?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_50?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_Lagrange.htm">Lagrange</a></td><td><div class="summary">
              Gets the value for the Lagrange multipliers
              (alpha) for every observation vector.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_51?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_52?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Model.htm">Model</a></td><td><div class="summary">
              Gets or sets the classifier being learned.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTB28804C1_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_53?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTB28804C1_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_54?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_NegativeWeight.htm">NegativeWeight</a></td><td><div class="summary">
              Gets or sets the negative class weight. This should be a
              value higher than 0 indicating how much of the <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a>
              parameter C should be applied to instances carrying the negative label.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_55?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_56?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_NonBoundExamples.htm">NonBoundExamples</a></td><td><div class="summary">
              Gets the indices of the non-bounded examples (examples which
              have the corresponding Lagrange multipliers between 0 and C).
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_57?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_58?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protproperty.gif" alt="Protected property" title="Protected property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Outputs.htm">Outputs</a></td><td><div class="summary">
              Gets or sets the output labels for each training vector.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_59?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_60?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_PositiveWeight.htm">PositiveWeight</a></td><td><div class="summary">
              Gets or sets the positive class weight. This should be a
              value higher than 0 indicating how much of the <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a>
              parameter C should be applied to instances carrying the positive label.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_61?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_62?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_Shrinking.htm">Shrinking</a></td><td><div class="summary">
              Gets or sets a value indicating whether shrinking heuristics should be used. Default is false. Note: 
              this property can only be used when <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_Strategy.htm">Strategy</a> is set to <a href="T_Accord_MachineLearning_VectorMachines_Learning_SelectionStrategy.htm">SecondOrder</a>.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_63?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_64?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_Strategy.htm">Strategy</a></td><td><div class="summary">
              Gets or sets the <a href="T_Accord_MachineLearning_VectorMachines_Learning_SelectionStrategy.htm">pair selection 
              strategy</a> to be used during optimization.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_65?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_66?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Token.htm">Token</a></td><td><div class="summary">
              Gets or sets a cancellation token that can be used to
              stop the learning algorithm while it is running.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTB28804C1_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_67?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTB28804C1_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_68?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Convergence tolerance. Default value is 1e-2.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_69?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_70?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseClassProportions.htm">UseClassProportions</a></td><td><div class="summary">
              Gets or sets a value indicating whether the weight ratio to be used between
              <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a> values for negative and positive instances should
              be computed automatically from the data proportions. Default is false.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_71?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_72?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseComplexityHeuristic.htm">UseComplexityHeuristic</a></td><td><div class="summary">
              Gets or sets a value indicating whether the Complexity parameter C
              should be computed automatically by employing an heuristic rule.
              Default is true.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_73?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_74?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_UseKernelEstimation.htm">UseKernelEstimation</a></td><td><div class="summary">
              Gets or sets whether initial values for some kernel parameters
              should be estimated from the data, if possible. Default is true.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_75?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_76?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_WeightRatio.htm">WeightRatio</a></td><td><div class="summary">
              Gets or sets the weight ratio between positive and negative class
              weights. This ratio controls how much of the <a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Complexity.htm">Complexity</a>
              parameter C should be applied to the positive class. 
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_77?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_78?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_ComputeError.htm">ComputeError</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the error rate for a given set of input and outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_79?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_80?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1_Create.htm">Create</a></td><td><div class="summary">
            Creates an instance of the model to be learned. Inheritors
            of this abstract class must define this method so new models
            can be created from the training data.
            </div> (Overrides <a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Create.htm">BaseSupportVectorClassification<span id="LSTB28804C1_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_81?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_82?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTB28804C1_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_83?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Create(Int32, TKernel)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3_InnerRun.htm">InnerRun</a></td><td><div class="summary">
              Runs the learning algorithm.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSequentialMinimalOptimization_3.htm">BaseSequentialMinimalOptimization<span id="LSTB28804C1_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_84?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_85?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_1.htm">Learn(<span id="LSTB28804C1_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_86?cpp=array&lt;");</script>TInput<span id="LSTB28804C1_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_87?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_88?cpp=array&lt;");</script><span id="LSTB28804C1_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_89?cpp=array&lt;");</script>Boolean<span id="LSTB28804C1_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_90?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB28804C1_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_91?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_92?cpp=array&lt;");</script>Double<span id="LSTB28804C1_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_93?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTB28804C1_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_94?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTB28804C1_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_95?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_2.htm">Learn(<span id="LSTB28804C1_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_96?cpp=array&lt;");</script>TInput<span id="LSTB28804C1_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_97?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_98?cpp=array&lt;");</script>Double<span id="LSTB28804C1_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_99?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_100?cpp=array&lt;");</script>Double<span id="LSTB28804C1_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_101?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTB28804C1_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_102?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTB28804C1_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_103?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_3.htm">Learn(<span id="LSTB28804C1_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_104?cpp=array&lt;");</script>TInput<span id="LSTB28804C1_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_105?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_106?cpp=array&lt;");</script>Int32<span id="LSTB28804C1_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_107?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_108?cpp=array&lt;");</script>Double<span id="LSTB28804C1_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_109?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTB28804C1_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_110?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTB28804C1_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_111?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_4.htm">Learn(<span id="LSTB28804C1_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_112?cpp=array&lt;");</script>TInput<span id="LSTB28804C1_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_113?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_114?cpp=array&lt;");</script><span id="LSTB28804C1_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_115?cpp=array&lt;");</script>Int32<span id="LSTB28804C1_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_116?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB28804C1_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_117?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_118?cpp=array&lt;");</script>Double<span id="LSTB28804C1_119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_119?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTB28804C1_120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_120?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTB28804C1_121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_121?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Learn.htm">Learn(<span id="LSTB28804C1_122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_122?cpp=array&lt;");</script>TInput<span id="LSTB28804C1_123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_123?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_124?cpp=array&lt;");</script>Boolean<span id="LSTB28804C1_125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_125?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB28804C1_126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_126?cpp=array&lt;");</script>Double<span id="LSTB28804C1_127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_127?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_128?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_129?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Run.htm">Run<span id="LSTB28804C1_130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_130?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_131?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_132?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3_Run_1.htm">Run(Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseSupportVectorClassification_3.htm">BaseSupportVectorClassification<span id="LSTB28804C1_133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_133?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTB28804C1_134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_134?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTB28804C1_135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_135?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTB28804C1_136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_136?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
              The SMO algorithm is an algorithm for solving large quadratic programming (QP)
              optimization problems, widely used for the training of support vector machines.
              First developed by John C. Platt in 1998, SMO breaks up large QP problems into
              a series of smallest possible QP problems, which are then solved analytically.</p><p>
              This class follows the original algorithm by Platt with additional modifications
              by Keerthi et al.</p><p>
              This class can also be used in combination with <a href="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_1.htm">MulticlassSupportVectorLearning<span id="LSTB28804C1_137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_137?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_138?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              or <a href="T_Accord_MachineLearning_VectorMachines_Learning_MultilabelSupportVectorLearning_1.htm">MultilabelSupportVectorLearning<span id="LSTB28804C1_139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_139?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_140?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> to learn <a href="T_Accord_MachineLearning_VectorMachines_MulticlassSupportVectorMachine_1.htm">MulticlassSupportVectorMachine<span id="LSTB28804C1_141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_141?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_142?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>s
              using the <span class="code">one-vs-one</span> or <span class="code">one-vs-all</span> multi-class decision strategies, respectively.</p><p>
              References:
              <ul><li><a href="http://en.wikipedia.org/wiki/Sequential_Minimal_Optimization">
                  Wikipedia, The Free Encyclopedia. Sequential Minimal Optimization. Available on:
                  http://en.wikipedia.org/wiki/Sequential_Minimal_Optimization </a></li><li><a href="http://research.microsoft.com/en-us/um/people/jplatt/smoTR.pdf">
                  John C. Platt, Sequential Minimal Optimization: A Fast Algorithm for Training Support
                  Vector Machines. 1998. Available on: http://research.microsoft.com/en-us/um/people/jplatt/smoTR.pdf </a></li><li><a href="http://www.cs.iastate.edu/~honavar/keerthi-svm.pdf">
                  S. S. Keerthi et al. Improvements to Platt's SMO Algorithm for SVM Classifier Design.
                  Technical Report CD-99-14. Available on: http://www.cs.iastate.edu/~honavar/keerthi-svm.pdf </a></li><li><a href="http://www.idiom.com/~zilla/Work/Notes/svmtutorial.pdf">
                  J. P. Lewis. A Short SVM (Support Vector Machine) Tutorial. Available on:
                  http://www.idiom.com/~zilla/Work/Notes/svmtutorial.pdf </a></li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><p>The following example shows how to use a SVM to learn a simple XOR function.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAGDBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAGDBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAGDBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// As an example, we will try to learn a decision machine </span>
<span class="highlight-comment">// that can replicate the "exclusive-or" logical function:</span>

<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// the XOR function takes two booleans</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// and computes their exclusive or: the</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// output is true only if the two booleans</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }  <span class="highlight-comment">// are different</span>
};

<span class="highlight-keyword">int</span>[] xor = <span class="highlight-comment">// this is the output of the xor function</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-comment">// 0 xor 0 = 0 (inputs are equal)</span>
    <span class="highlight-number">1</span>, <span class="highlight-comment">// 0 xor 1 = 1 (inputs are different)</span>
    <span class="highlight-number">1</span>, <span class="highlight-comment">// 1 xor 0 = 1 (inputs are different)</span>
    <span class="highlight-number">0</span>, <span class="highlight-comment">// 1 xor 1 = 0 (inputs are equal)</span>
};

<span class="highlight-comment">// Now, we can create the sequential minimal optimization teacher</span>
<span class="highlight-keyword">var</span> learn = <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Gaussian&gt;()
{
    UseComplexityHeuristic = <span class="highlight-keyword">true</span>,
    UseKernelEstimation = <span class="highlight-keyword">true</span>
};

<span class="highlight-comment">// And then we can obtain a trained SVM by calling its Learn method</span>
SupportVectorMachine&lt;Gaussian&gt; svm = learn.Learn(inputs, xor);

<span class="highlight-comment">// Finally, we can obtain the decisions predicted by the machine:</span>
<span class="highlight-keyword">bool</span>[] prediction = svm.Decide(inputs);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAGDBA");</script><p>The next example shows how to solve a multi-class problem using a one-vs-one SVM 
              where the binary machines are learned using SMO.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEDBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEDBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEDBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Generate always same random numbers</span>
Accord.Math.Random.Generator.Seed = <span class="highlight-number">0</span>;

<span class="highlight-comment">// The following is a simple auto association function in which </span>
<span class="highlight-comment">// the last column of each input correspond to its own class. This</span>
<span class="highlight-comment">// problem should be easily solved using a Linear kernel.</span>

<span class="highlight-comment">// Sample input data</span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">6</span>, <span class="highlight-number">2</span>, <span class="highlight-number">3</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">7</span>, <span class="highlight-number">6</span>, <span class="highlight-number">2</span> },
};

<span class="highlight-comment">// Output for each of the inputs</span>
<span class="highlight-keyword">int</span>[] outputs = { <span class="highlight-number">0</span>, <span class="highlight-number">3</span>, <span class="highlight-number">1</span>, <span class="highlight-number">2</span> };


<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Linear&gt;()
{
    <span class="highlight-comment">// Configure the learning algorithm to use SMO to train the</span>
    <span class="highlight-comment">//  underlying SVMs in each of the binary class subproblems.</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Linear&gt;()
    {
        <span class="highlight-comment">// If you would like to use other kernels, simply replace</span>
        <span class="highlight-comment">// the generic parameter to the desired kernel class, such</span>
        <span class="highlight-comment">// as for example, Polynomial or Gaussian:</span>

        Kernel = <span class="highlight-keyword">new</span> Linear() <span class="highlight-comment">// use the Linear kernel</span>
    }
};

<span class="highlight-comment">// Estimate the multi-class support vector machine using one-vs-one method</span>
MulticlassSupportVectorMachine&lt;Linear&gt; ovo = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = ovo.Decide(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEDBA");</script><p>The same as before, but using a Gaussian kernel.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACDBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACDBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACDBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we have the following data to be classified</span>
<span class="highlight-comment">// into three possible classes. Those are the samples:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">//               input         output</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0 </span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
};

<span class="highlight-keyword">int</span>[] outputs = <span class="highlight-comment">// those are the class labels</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,
    <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,
    <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
};

<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Gaussian&gt;()
{
    <span class="highlight-comment">// Configure the learning algorithm to use SMO to train the</span>
    <span class="highlight-comment">//  underlying SVMs in each of the binary class subproblems.</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Gaussian&gt;()
    {
        <span class="highlight-comment">// Estimate a suitable guess for the Gaussian kernel's parameters.</span>
        <span class="highlight-comment">// This estimate can serve as a starting point for a grid search.</span>
        UseKernelEstimation = <span class="highlight-keyword">true</span>
    }
};

<span class="highlight-comment">// The following line is only needed to ensure reproducible results. Please remove it to enable full parallelization</span>
teacher.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>; <span class="highlight-comment">// (Remove, comment, or change this line to enable full parallelism)</span>

<span class="highlight-comment">// Learn a machine</span>
<span class="highlight-keyword">var</span> machine = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = machine.Decide(inputs);

<span class="highlight-comment">// Get class scores for each sample</span>
<span class="highlight-keyword">double</span>[] scores = machine.Score(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACDBA");</script><p>
              The following example shows how to learn a simple binary SVM using
               a precomputed kernel matrix obtained from a Gaussian kernel.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAADBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAADBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAADBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// As an example, we will try to learn a decision machine </span>
<span class="highlight-comment">// that can replicate the "exclusive-or" logical function:</span>

<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// the XOR function takes two booleans</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// and computes their exclusive or: the</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// output is true only if the two booleans</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }  <span class="highlight-comment">// are different</span>
};

<span class="highlight-keyword">int</span>[] xor = <span class="highlight-comment">// this is the output of the xor function</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-comment">// 0 xor 0 = 0 (inputs are equal)</span>
    <span class="highlight-number">1</span>, <span class="highlight-comment">// 0 xor 1 = 1 (inputs are different)</span>
    <span class="highlight-number">1</span>, <span class="highlight-comment">// 1 xor 0 = 1 (inputs are different)</span>
    <span class="highlight-number">0</span>, <span class="highlight-comment">// 1 xor 1 = 0 (inputs are equal)</span>
};

<span class="highlight-comment">// Let's use a Gaussian kernel</span>
<span class="highlight-keyword">var</span> kernel = <span class="highlight-keyword">new</span> Gaussian(<span class="highlight-number">0.1</span>);

<span class="highlight-comment">// Create a pre-computed Gaussian kernel matrix</span>
<span class="highlight-keyword">var</span> precomputed = <span class="highlight-keyword">new</span> Precomputed(kernel.ToJagged(inputs));

<span class="highlight-comment">// Now, we can create the sequential minimal optimization teacher</span>
<span class="highlight-keyword">var</span> learn = <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Precomputed, <span class="highlight-keyword">int</span>&gt;()
{
    Kernel = precomputed <span class="highlight-comment">// set the precomputed kernel we created</span>
};

<span class="highlight-comment">// And then we can obtain the SVM by using Learn</span>
<span class="highlight-keyword">var</span> svm = learn.Learn(precomputed.Indices, xor);

<span class="highlight-comment">// Finally, we can obtain the decisions predicted by the machine:</span>
<span class="highlight-keyword">bool</span>[] prediction = svm.Decide(precomputed.Indices);

<span class="highlight-comment">// We can also compute the machine prediction to new samples</span>
<span class="highlight-keyword">double</span>[][] sample =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }
};

<span class="highlight-comment">// Update the precomputed kernel with the new samples</span>
precomputed = <span class="highlight-keyword">new</span> Precomputed(kernel.ToJagged2(inputs, sample));

<span class="highlight-comment">// Update the SVM kernel</span>
svm.Kernel = precomputed;

<span class="highlight-comment">// Compute the predictions to the new samples</span>
<span class="highlight-keyword">bool</span>[] newPrediction = svm.Decide(precomputed.Indices);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAADBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">Accord.MachineLearning.VectorMachines<span id="LSTB28804C1_143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_143?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SupportVectorMachine</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTB28804C1_144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_144?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ProbabilisticOutputCalibration</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_1.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTB28804C1_145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_145?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MulticlassSupportVectorLearning<span id="LSTB28804C1_146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_146?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTB28804C1_147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB28804C1_147?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>