<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>ProbabilisticOutputCalibration(TKernel) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="ProbabilisticOutputCalibration%3CTKernel%3E class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.ProbabilisticOutputCalibration%3CTKernel%3E class" />
    <meta name="System.Keywords" content="ProbabilisticOutputCalibration%3CTKernel%3E class, about ProbabilisticOutputCalibration%3CTKernel%3E class" />
    <meta name="System.Keywords" content="ProbabilisticOutputCalibration(Of TKernel) class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.ProbabilisticOutputCalibration(Of TKernel) class" />
    <meta name="System.Keywords" content="ProbabilisticOutputCalibration(Of TKernel) class, about ProbabilisticOutputCalibration(Of TKernel) class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.VectorMachines.Learning.ProbabilisticOutputCalibration`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.VectorMachines.Learning.ProbabilisticOutputCalibration`1" />
    <meta name="Description" content="Probabilistic Output Calibration for Kernel machines." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning.VectorMachines.Learning" />
    <meta name="file" content="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1" />
    <meta name="guid" content="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning_VectorMachines_Learning.htm" title="Accord.MachineLearning.VectorMachines.Learning" tocid="N_Accord_MachineLearning_VectorMachines_Learning">Accord.MachineLearning.VectorMachines.Learning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1.htm" title="ProbabilisticOutputCalibration(TKernel) Class" tocid="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1">ProbabilisticOutputCalibration(TKernel) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1__ctor.htm" title="ProbabilisticOutputCalibration(TKernel) Constructor " tocid="Overload_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1__ctor">ProbabilisticOutputCalibration(TKernel) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Properties_T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1.htm" title="ProbabilisticOutputCalibration(TKernel) Properties" tocid="Properties_T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1">ProbabilisticOutputCalibration(TKernel) Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Methods_T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1.htm" title="ProbabilisticOutputCalibration(TKernel) Methods" tocid="Methods_T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1">ProbabilisticOutputCalibration(TKernel) Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>ProbabilisticOutputCalibration<span id="LSTC6CE8B11_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TKernel</span><span id="LSTC6CE8B11_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Probabilistic Output Calibration for Kernel machines.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTC6CE8B11_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">Accord.MachineLearning<span id="LSTC6CE8B11_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BinaryLearningBase</a><span id="LSTC6CE8B11_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">SupportVectorMachine</a><span id="LSTC6CE8B11_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TKernel</span></span><span id="LSTC6CE8B11_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LSTC6CE8B11_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_7?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTC6CE8B11_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_8?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTC6CE8B11_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />    <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTC6CE8B11_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_10?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ProbabilisticOutputCalibrationBase</a><span id="LSTC6CE8B11_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_11?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">SupportVectorMachine</a><span id="LSTC6CE8B11_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_12?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TKernel</span></span><span id="LSTC6CE8B11_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_13?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span class="selflink"><span class="typeparameter">TKernel</span></span>, <span id="LSTC6CE8B11_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_14?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTC6CE8B11_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_15?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTC6CE8B11_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />      <span class="selflink">Accord.MachineLearning.VectorMachines.Learning<span id="LSTC6CE8B11_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_17?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ProbabilisticOutputCalibration<span id="LSTC6CE8B11_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_18?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_19?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ProbabilisticOutputCalibration</span>&lt;TKernel&gt; : <span class="identifier">ProbabilisticOutputCalibrationBase</span>&lt;<span class="identifier">SupportVectorMachine</span>&lt;TKernel&gt;, TKernel, <span class="identifier">double</span>[]&gt;
<span class="keyword">where</span> TKernel : <span class="identifier">Object</span>, <span class="identifier">IKernel</span>&lt;<span class="identifier">double</span>[]&gt;
</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">ProbabilisticOutputCalibration</span>(<span class="keyword">Of</span> TKernel <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IKernel</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>())})
	<span class="keyword">Inherits</span> <span class="identifier">ProbabilisticOutputCalibrationBase</span>(<span class="keyword">Of</span> <span class="identifier">SupportVectorMachine</span>(<span class="keyword">Of</span> TKernel), TKernel, <span class="identifier">Double</span>())</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/VectorMachines/Learning/Probabilistic/ProbabilisticOutputCalibration.cs" title="View the source code">View Source</a><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TKernel</span></dt><dd /></dl></div><p>The <span class="selflink">ProbabilisticOutputCalibration<span id="LSTC6CE8B11_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_20?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_21?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1__ctor.htm">ProbabilisticOutputCalibration<span id="LSTC6CE8B11_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_22?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_23?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTC6CE8B11_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_24?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
              Initializes a new instance of Platt's Probabilistic Output Calibration algorithm.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration_1__ctor_1.htm">ProbabilisticOutputCalibration<span id="LSTC6CE8B11_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_25?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_26?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script>(SupportVectorMachine<span id="LSTC6CE8B11_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_27?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TKernel<span id="LSTC6CE8B11_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_28?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
              Initializes a new instance of Platt's Probabilistic Output Calibration algorithm.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3_Iterations.htm">Iterations</a></td><td><div class="summary">
              Gets or sets the maximum number of
              iterations. Default is 100. 
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">ProbabilisticOutputCalibrationBase<span id="LSTC6CE8B11_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_29?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTC6CE8B11_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_30?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Model.htm">Model</a></td><td><div class="summary">
              Gets or sets the classifier being learned.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC6CE8B11_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_31?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC6CE8B11_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_32?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3_StepSize.htm">StepSize</a></td><td><div class="summary">
              Gets or sets the minimum step size used 
              during line search. Default is 1e-10.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">ProbabilisticOutputCalibrationBase<span id="LSTC6CE8B11_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_33?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTC6CE8B11_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_34?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Token.htm">Token</a></td><td><div class="summary">
              Gets or sets a cancellation token that can be used to
              stop the learning algorithm while it is running.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC6CE8B11_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_35?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC6CE8B11_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_36?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Gets or sets the tolerance under which the
              answer must be found. Default is 1-e5.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">ProbabilisticOutputCalibrationBase<span id="LSTC6CE8B11_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_37?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTC6CE8B11_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_38?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_1.htm">Learn(<span id="LSTC6CE8B11_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_39?cpp=array&lt;");</script>TInput<span id="LSTC6CE8B11_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_40?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_41?cpp=array&lt;");</script><span id="LSTC6CE8B11_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_42?cpp=array&lt;");</script>Boolean<span id="LSTC6CE8B11_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_43?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC6CE8B11_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_44?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_45?cpp=array&lt;");</script>Double<span id="LSTC6CE8B11_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_46?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC6CE8B11_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_47?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC6CE8B11_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_48?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_2.htm">Learn(<span id="LSTC6CE8B11_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_49?cpp=array&lt;");</script>TInput<span id="LSTC6CE8B11_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_50?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_51?cpp=array&lt;");</script>Double<span id="LSTC6CE8B11_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_52?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_53?cpp=array&lt;");</script>Double<span id="LSTC6CE8B11_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_54?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC6CE8B11_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_55?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC6CE8B11_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_56?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_3.htm">Learn(<span id="LSTC6CE8B11_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_57?cpp=array&lt;");</script>TInput<span id="LSTC6CE8B11_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_58?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_59?cpp=array&lt;");</script>Int32<span id="LSTC6CE8B11_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_60?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_61?cpp=array&lt;");</script>Double<span id="LSTC6CE8B11_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_62?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC6CE8B11_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_63?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC6CE8B11_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_64?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_4.htm">Learn(<span id="LSTC6CE8B11_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_65?cpp=array&lt;");</script>TInput<span id="LSTC6CE8B11_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_66?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_67?cpp=array&lt;");</script><span id="LSTC6CE8B11_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_68?cpp=array&lt;");</script>Int32<span id="LSTC6CE8B11_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_69?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC6CE8B11_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_70?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_71?cpp=array&lt;");</script>Double<span id="LSTC6CE8B11_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC6CE8B11_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_73?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC6CE8B11_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_74?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3_Learn.htm">Learn(<span id="LSTC6CE8B11_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_75?cpp=array&lt;");</script>TInput<span id="LSTC6CE8B11_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_76?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_77?cpp=array&lt;");</script>Boolean<span id="LSTC6CE8B11_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_78?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC6CE8B11_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_79?cpp=array&lt;");</script>Double<span id="LSTC6CE8B11_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_80?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">ProbabilisticOutputCalibrationBase<span id="LSTC6CE8B11_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_81?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTC6CE8B11_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_82?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3_LogLikelihood.htm">LogLikelihood</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">ProbabilisticOutputCalibrationBase<span id="LSTC6CE8B11_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_83?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTC6CE8B11_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_84?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3_Run.htm">Run<span id="LSTC6CE8B11_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_85?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">ProbabilisticOutputCalibrationBase<span id="LSTC6CE8B11_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_86?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTC6CE8B11_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_87?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3_Run_1.htm">Run(Boolean)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibrationBase_3.htm">ProbabilisticOutputCalibrationBase<span id="LSTC6CE8B11_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_88?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput<span id="LSTC6CE8B11_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_89?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">
                Compares two objects for equality, performing an elementwise 
                comparison if the elements are vectors or matrices.
            </div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To.htm">To(Type)</a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTC6CE8B11_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_90?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTC6CE8B11_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_91?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTC6CE8B11_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_92?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>Instead of producing probabilistic outputs, Support Vector Machines
              express their decisions in the form of a distance from support vectors in
              feature space. In order to convert the SVM outputs into probabilities,
              Platt (1999) proposed the calibration of the SVM outputs using a sigmoid
              (Logit) link function. Later, Lin et al (2007) provided a corrected and
              improved version of Platt's probabilistic outputs. This class implements
              the later.</p><p>This class is not an actual learning algorithm, but a calibrator.
              Machines passed as input to this algorithm should already have been trained
              by a proper learning algorithm such as <a href="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1.htm">
              Sequential Minimal Optimization (SMO)</a>.</p><p>
              This class can also be used in combination with <a href="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_1.htm">MulticlassSupportVectorLearning<span id="LSTC6CE8B11_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_93?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_94?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>
              or <a href="T_Accord_MachineLearning_VectorMachines_Learning_MultilabelSupportVectorLearning_1.htm">MultilabelSupportVectorLearning<span id="LSTC6CE8B11_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_95?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_96?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a> to learn <a href="T_Accord_MachineLearning_VectorMachines_MulticlassSupportVectorMachine_1.htm">MulticlassSupportVectorMachine<span id="LSTC6CE8B11_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_97?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_98?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>s
              using the <span class="code">one-vs-one</span> or <span class="code">one-vs-all</span> multi-class decision strategies, respectively.</p><p>
              References:
              <ul><li>
                   John C. Platt. 1999. Probabilistic Outputs for Support Vector Machines and Comparisons to
                   Regularized Likelihood Methods. In ADVANCES IN LARGE MARGIN CLASSIFIERS (1999), pp. 61-74.</li><li>
                  Hsuan-Tien Lin, Chih-Jen Lin, and Ruby C. Weng. 2007. A note on Platt's probabilistic outputs
                  for support vector machines. Mach. Learn. 68, 3 (October 2007), 267-276. </li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><p>
              The following example shows how to calibrate a SVM that has
              been trained to perform a simple XOR function.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACEBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACEBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACEBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">double</span>[][] inputs = <span class="highlight-comment">// Example XOR problem</span>
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 0 xor 0: 1 (label +1)</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 0 xor 1: 0 (label -1)</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 1 xor 0: 0 (label -1)</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }  <span class="highlight-comment">// 1 xor 1: 1 (label +1)</span>
};

<span class="highlight-keyword">int</span>[] outputs = <span class="highlight-comment">// XOR outputs</span>
{
    <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>
};

<span class="highlight-comment">// Instantiate a new SMO learning algorithm for SVMs</span>
<span class="highlight-keyword">var</span> smo = <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Gaussian&gt;()
{
    Kernel = <span class="highlight-keyword">new</span> Gaussian(<span class="highlight-number">0.1</span>),
    Complexity = <span class="highlight-number">1.0</span>
};

<span class="highlight-comment">// Learn a SVM using the algorithm</span>
<span class="highlight-keyword">var</span> svm = smo.Learn(inputs, outputs);

<span class="highlight-comment">// Predict labels for each input sample</span>
<span class="highlight-keyword">bool</span>[] predicted = svm.Decide(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);

<span class="highlight-comment">// Instantiate the probabilistic calibration (using Platt's scaling)</span>
<span class="highlight-keyword">var</span> calibration = <span class="highlight-keyword">new</span> ProbabilisticOutputCalibration&lt;Gaussian&gt;(svm);

<span class="highlight-comment">// Run the calibration algorithm</span>
calibration.Learn(inputs, outputs); <span class="highlight-comment">// returns the same machine</span>

<span class="highlight-comment">// Predict probabilities of each input sample</span>
<span class="highlight-keyword">double</span>[] probabilities = svm.Probability(inputs);

<span class="highlight-comment">// Compute the error based on a hard decision</span>
<span class="highlight-keyword">double</span> loss = <span class="highlight-keyword">new</span> BinaryCrossEntropyLoss(outputs).Loss(probabilities);

<span class="highlight-comment">// Compute the decision output for one of the input vectors,</span>
<span class="highlight-comment">// while also retrieving the probability of the answer</span>

<span class="highlight-keyword">bool</span> decision;
<span class="highlight-keyword">double</span> probability = svm.Probability(inputs[<span class="highlight-number">0</span>], <span class="highlight-keyword">out</span> decision);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACEBA");</script><p>
              The next example shows how to solve a multi-class problem using a one-vs-one SVM 
              where the binary machines are learned using SMO and calibrated using Platt's scaling.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAEBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAEBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAEBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we have the following data to be classified</span>
<span class="highlight-comment">// into three possible classes. Those are the samples:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">//               input         output</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0 </span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
};

<span class="highlight-keyword">int</span>[] outputs = <span class="highlight-comment">// those are the class labels</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,
    <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,
    <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
};

<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Gaussian&gt;()
{
    <span class="highlight-comment">// Configure the learning algorithm to use SMO to train the</span>
    <span class="highlight-comment">//  underlying SVMs in each of the binary class subproblems.</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Gaussian&gt;()
    {
        <span class="highlight-comment">// Estimate a suitable guess for the Gaussian kernel's parameters.</span>
        <span class="highlight-comment">// This estimate can serve as a starting point for a grid search.</span>
        UseKernelEstimation = <span class="highlight-keyword">true</span>
    }
};

<span class="highlight-comment">// Learn a machine</span>
<span class="highlight-keyword">var</span> machine = teacher.Learn(inputs, outputs);


<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> calibration = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Gaussian&gt;()
{
    Model = machine, <span class="highlight-comment">// We will start with an existing machine</span>

    <span class="highlight-comment">// Configure the learning algorithm to use Platt's calibration</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> ProbabilisticOutputCalibration&lt;Gaussian&gt;()
    {
        Model = param.Model <span class="highlight-comment">// Start with an existing machine</span>
    }
};


<span class="highlight-comment">// Configure parallel execution options</span>
calibration.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>;

<span class="highlight-comment">// Learn a machine</span>
calibration.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = machine.Decide(inputs);

<span class="highlight-comment">// Get class scores for each sample</span>
<span class="highlight-keyword">double</span>[] scores = machine.Score(inputs);

<span class="highlight-comment">// Get log-likelihoods (should be same as scores)</span>
<span class="highlight-keyword">double</span>[][] logl = machine.LogLikelihoods(inputs);

<span class="highlight-comment">// Get probability for each sample</span>
<span class="highlight-keyword">double</span>[][] prob = machine.Probabilities(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);
<span class="highlight-keyword">double</span> loss = <span class="highlight-keyword">new</span> CategoryCrossEntropyLoss(outputs).Loss(prob);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAEBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">Accord.MachineLearning.VectorMachines<span id="LSTC6CE8B11_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_99?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SupportVectorMachine</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization_1.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTC6CE8B11_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_100?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SequentialMinimalOptimization<span id="LSTC6CE8B11_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_101?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_102?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_1.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTC6CE8B11_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_103?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MulticlassSupportVectorLearning<span id="LSTC6CE8B11_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_104?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_105?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_MultilabelSupportVectorLearning_1.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTC6CE8B11_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_106?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MultilabelSupportVectorLearning<span id="LSTC6CE8B11_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_107?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TKernel<span id="LSTC6CE8B11_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC6CE8B11_108?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>