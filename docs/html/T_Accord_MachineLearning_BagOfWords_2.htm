<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>BagOfWords(TInput, TClustering) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="BagOfWords%3CTInput%2C TClustering%3E class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.BagOfWords%3CTInput%2C TClustering%3E class" />
    <meta name="System.Keywords" content="BagOfWords%3CTInput%2C TClustering%3E class, about BagOfWords%3CTInput%2C TClustering%3E class" />
    <meta name="System.Keywords" content="BagOfWords(Of TInput%2C TClustering) class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.BagOfWords(Of TInput%2C TClustering) class" />
    <meta name="System.Keywords" content="BagOfWords(Of TInput%2C TClustering) class, about BagOfWords(Of TInput%2C TClustering) class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.BagOfWords`2" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.BagOfWords`2" />
    <meta name="Description" content="Bag of words." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning" />
    <meta name="file" content="T_Accord_MachineLearning_BagOfWords_2" />
    <meta name="guid" content="T_Accord_MachineLearning_BagOfWords_2" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning.htm" title="Accord.MachineLearning" tocid="N_Accord_MachineLearning">Accord.MachineLearning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_BagOfWords_2.htm" title="BagOfWords(TInput, TClustering) Class" tocid="T_Accord_MachineLearning_BagOfWords_2">BagOfWords(TInput, TClustering) Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_BagOfWords_2__ctor.htm" title="BagOfWords(TInput, TClustering) Constructor " tocid="M_Accord_MachineLearning_BagOfWords_2__ctor">BagOfWords(TInput, TClustering) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Properties_T_Accord_MachineLearning_BagOfWords_2.htm" title="BagOfWords(TInput, TClustering) Properties" tocid="Properties_T_Accord_MachineLearning_BagOfWords_2">BagOfWords(TInput, TClustering) Properties</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Methods_T_Accord_MachineLearning_BagOfWords_2.htm" title="BagOfWords(TInput, TClustering) Methods" tocid="Methods_T_Accord_MachineLearning_BagOfWords_2">BagOfWords(TInput, TClustering) Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>BagOfWords<span id="LSTF2B9C4F0_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TInput</span>, <span class="typeparameter">TClustering</span><span id="LSTF2B9C4F0_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Bag of words.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTF2B9C4F0_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">Accord.MachineLearning<span id="LSTF2B9C4F0_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ParallelLearningBase</a><br />    <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">Accord.MachineLearning<span id="LSTF2B9C4F0_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseBagOfWords</a><span id="LSTF2B9C4F0_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink">BagOfWords</span><span id="LSTF2B9C4F0_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="selflink"><span class="typeparameter">TInput</span></span>, <span class="selflink"><span class="typeparameter">TClustering</span></span><span id="LSTF2B9C4F0_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span class="selflink"><span class="typeparameter">TInput</span></span>, <span class="selflink"><span class="typeparameter">TClustering</span></span><span id="LSTF2B9C4F0_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_8?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />      <span class="selflink">Accord.MachineLearning<span id="LSTF2B9C4F0_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BagOfWords<span id="LSTF2B9C4F0_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_10?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TClustering<span id="LSTF2B9C4F0_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_11?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning.htm">Accord.MachineLearning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.7.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">BagOfWords</span>&lt;TInput, TClustering&gt; : <span class="identifier">BaseBagOfWords</span>&lt;<span class="identifier">BagOfWords</span>&lt;TInput, TClustering&gt;, TInput, TClustering&gt;
<span class="keyword">where</span> TClustering : <span class="identifier">Object</span>, <span class="identifier">IUnsupervisedLearning</span>&lt;<span class="identifier">IClassifier</span>&lt;TInput, <span class="identifier">int</span>&gt;, TInput, <span class="identifier">int</span>&gt;
</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">BagOfWords</span>(<span class="keyword">Of</span> TInput, TClustering <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IUnsupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">IClassifier</span>(<span class="keyword">Of</span> TInput, <span class="identifier">Integer</span>), TInput, <span class="identifier">Integer</span>)})
	<span class="keyword">Inherits</span> <span class="identifier">BaseBagOfWords</span>(<span class="keyword">Of</span> <span class="identifier">BagOfWords</span>(<span class="keyword">Of</span> TInput, TClustering), TInput, TClustering)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/Representations/BagOfWords%602.cs" title="View the source code">View Source</a><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TInput</span></dt><dd /><dt><span class="parameter">TClustering</span></dt><dd /></dl></div><p>The <span class="selflink">BagOfWords<span id="LSTF2B9C4F0_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_12?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TClustering<span id="LSTF2B9C4F0_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_13?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BagOfWords_2__ctor.htm">BagOfWords<span id="LSTF2B9C4F0_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_14?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TClustering<span id="LSTF2B9C4F0_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_15?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a></td><td><div class="summary">
              Constructs a new <a href="T_Accord_MachineLearning_BagOfWords.htm">BagOfWords</a>.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BaseBagOfWords_3_Clustering.htm">Clustering</a></td><td><div class="summary">
              Gets the clustering algorithm used to create this model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_16?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_17?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BaseBagOfWords_3_NumberOfInputs.htm">NumberOfInputs</a></td><td><div class="summary">
            Gets the number of inputs accepted by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_18?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_19?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BaseBagOfWords_3_NumberOfOutputs.htm">NumberOfOutputs</a></td><td><div class="summary">
            Gets the number of outputs generated by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_20?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_21?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BaseBagOfWords_3_NumberOfWords.htm">NumberOfWords</a></td><td><div class="summary">
              Gets the number of words in this codebook.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_22?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_23?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_ParallelLearningBase_ParallelOptions.htm">ParallelOptions</a></td><td><div class="summary">
              Gets or sets the parallelization options for this algorithm.
            </div> (Inherited from <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">ParallelLearningBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_ParallelLearningBase_Token.htm">Token</a></td><td><div class="summary">
            Gets or sets a cancellation token that can be used
            to cancel the algorithm while it is running.
            </div> (Inherited from <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">ParallelLearningBase</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Init.htm">Init</a></td><td><div class="summary">
              Initializes this instance.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_24?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_25?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Learn.htm">Learn</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the desired outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_26?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_27?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Transform_1.htm">Transform(<span id="LSTF2B9C4F0_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_28?cpp=array&lt;");</script>TInput<span id="LSTF2B9C4F0_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to an input, producing an associated output.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_30?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_31?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Transform_5.htm">Transform(<span id="LSTF2B9C4F0_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_32?cpp=array&lt;");</script><span id="LSTF2B9C4F0_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_33?cpp=array&lt;");</script>TInput<span id="LSTF2B9C4F0_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_34?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF2B9C4F0_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to a set of input vectors,
            producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_36?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_37?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Transform_2.htm">Transform(<span id="LSTF2B9C4F0_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_38?cpp=array&lt;");</script>TInput<span id="LSTF2B9C4F0_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_39?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTF2B9C4F0_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_40?cpp=array&lt;");</script>Sparse<span id="LSTF2B9C4F0_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_41?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTF2B9C4F0_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_42?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTF2B9C4F0_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_43?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to a set of input vectors,
            producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_44?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_45?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Transform_3.htm">Transform(<span id="LSTF2B9C4F0_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_46?cpp=array&lt;");</script>TInput<span id="LSTF2B9C4F0_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_47?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTF2B9C4F0_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_48?cpp=array&lt;");</script>Double<span id="LSTF2B9C4F0_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_49?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to a set of input vectors,
            producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_50?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_51?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Transform_4.htm">Transform(<span id="LSTF2B9C4F0_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_52?cpp=array&lt;");</script>TInput<span id="LSTF2B9C4F0_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_53?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTF2B9C4F0_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_54?cpp=array&lt;");</script>Int32<span id="LSTF2B9C4F0_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_55?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to a set of input vectors,
            producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_56?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_57?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Transform_6.htm">Transform(<span id="LSTF2B9C4F0_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_58?cpp=array&lt;");</script><span id="LSTF2B9C4F0_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_59?cpp=array&lt;");</script>TInput<span id="LSTF2B9C4F0_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_60?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF2B9C4F0_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_61?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTF2B9C4F0_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_62?cpp=array&lt;");</script><span id="LSTF2B9C4F0_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_63?cpp=array&lt;");</script>Double<span id="LSTF2B9C4F0_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_64?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF2B9C4F0_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_65?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to a set of input vectors,
            producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_66?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_67?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BaseBagOfWords_3_Transform_7.htm">Transform(<span id="LSTF2B9C4F0_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_68?cpp=array&lt;");</script><span id="LSTF2B9C4F0_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_69?cpp=array&lt;");</script>TInput<span id="LSTF2B9C4F0_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_70?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF2B9C4F0_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTF2B9C4F0_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_72?cpp=array&lt;");</script><span id="LSTF2B9C4F0_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_73?cpp=array&lt;");</script>Int32<span id="LSTF2B9C4F0_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_74?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTF2B9C4F0_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_75?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to a set of input vectors,
            producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BaseBagOfWords_3.htm">BaseBagOfWords<span id="LSTF2B9C4F0_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_76?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput, TClustering<span id="LSTF2B9C4F0_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_77?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTF2B9C4F0_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_78?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTF2B9C4F0_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTF2B9C4F0_79?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection">
              The bag-of-words (BoW) model can be used to extract finite
              length features from otherwise varying length representations.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// The Bag-Of-Words model can be used to extract finite-length feature </span>
<span class="highlight-comment">// vectors from sequences of arbitrary length, like for example, texts:</span>


<span class="highlight-keyword">string</span>[] texts =
{
    <span class="highlight-literal">@"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas molestie malesuada 
      nisi et placerat. Curabitur blandit porttitor suscipit. Nunc facilisis ultrices felis,
      vitae luctus arcu semper in. Fusce ut felis ipsum. Sed faucibus tortor ut felis placerat
      euismod. Vestibulum pharetra velit et dolor ornare quis malesuada leo aliquam. Aenean 
      lobortis, tortor iaculis vestibulum dictum, tellus nisi vestibulum libero, ultricies 
      pretium nisi ante in neque. Integer et massa lectus. Aenean ut sem quam. Mauris at nisl 
      augue, volutpat tempus nisl. Suspendisse luctus convallis metus, vitae pretium risus 
      pretium vitae. Duis tristique euismod aliquam"</span>,

    <span class="highlight-literal">@"Sed consectetur nisl et diam mattis varius. Aliquam ornare tincidunt arcu eget adipiscing. 
      Etiam quis augue lectus, vel sollicitudin lorem. Fusce lacinia, leo non porttitor adipiscing, 
      mauris purus lobortis ipsum, id scelerisque erat neque eget nunc. Suspendisse potenti. Etiam 
      non urna non libero pulvinar consequat ac vitae turpis. Nam urna eros, laoreet id sagittis eu,
      posuere in sapien. Phasellus semper convallis faucibus. Nulla fermentum faucibus tellus in 
      rutrum. Maecenas quis risus augue, eu gravida massa."</span>
};

<span class="highlight-keyword">string</span>[][] words = texts.Tokenize();

<span class="highlight-comment">// Create a new BoW with options:</span>
<span class="highlight-keyword">var</span> codebook = <span class="highlight-keyword">new</span> BagOfWords()
{
    MaximumOccurance = <span class="highlight-number">1</span> <span class="highlight-comment">// the resulting vector will have only 0's and 1's</span>
};

<span class="highlight-comment">// Compute the codebook (note: this would have to be done only for the training set)</span>
codebook.Learn(words);


<span class="highlight-comment">// Now, we can use the learned codebook to extract fixed-length</span>
<span class="highlight-comment">// representations of the different texts (paragraphs) above:</span>

<span class="highlight-comment">// Extract a feature vector from the text 1:</span>
<span class="highlight-keyword">double</span>[] bow1 = codebook.Transform(words[<span class="highlight-number">0</span>]);

<span class="highlight-comment">// Extract a feature vector from the text 2:</span>
<span class="highlight-keyword">double</span>[] bow2 = codebook.Transform(words[<span class="highlight-number">1</span>]);

<span class="highlight-comment">// we could also have transformed everything at once, i.e.</span>
<span class="highlight-comment">// double[][] bow = codebook.Transform(words);</span>


<span class="highlight-comment">// Now, since we have finite length representations (both bow1 and bow2 should</span>
<span class="highlight-comment">// have the same size), we can pass them to any classifier or machine learning</span>
<span class="highlight-comment">// method. For example, we can pass them to a Logistic Regression Classifier to</span>
<span class="highlight-comment">// discern between the first and second paragraphs</span>

<span class="highlight-comment">// Lets create a Logistic classifier to separate the two paragraphs:</span>
<span class="highlight-keyword">var</span> learner = <span class="highlight-keyword">new</span> IterativeReweightedLeastSquares&lt;LogisticRegression&gt;()
{
    Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-4</span>,  <span class="highlight-comment">// Let's set some convergence parameters</span>
    Iterations = <span class="highlight-number">100</span>,  <span class="highlight-comment">// maximum number of iterations to perform</span>
    Regularization = <span class="highlight-number">0</span>
};

<span class="highlight-comment">// Now, we use the learning algorithm to learn the distinction between the two:</span>
LogisticRegression reg = learner.Learn(<span class="highlight-keyword">new</span>[] { bow1, bow2 }, <span class="highlight-keyword">new</span>[] { <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span> });

<span class="highlight-comment">// Finally, we can predict using the classifier:</span>
<span class="highlight-keyword">bool</span> c1 = reg.Decide(bow1); <span class="highlight-comment">// Should be false</span>
<span class="highlight-keyword">bool</span> c2 = reg.Decide(bow2); <span class="highlight-comment">// Should be true</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACABA");</script><p>
              The following example shows how to use Bag-of-Words to convert other kinds of sequences
              into fixed-length representations. In particular, we apply Bag-of-Words to convert data
              from the PENDIGITS handwritten digit recognition dataset and afterwards convert their
              representations using a <a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a>.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// The Bag-Of-Words model can be used to extract finite-length feature </span>
<span class="highlight-comment">// vectors from sequences of arbitrary length, like handwritten digits</span>

<span class="highlight-comment">// Ensure we get reproducible results</span>
Accord.Math.Random.Generator.Seed = <span class="highlight-number">0</span>;

<span class="highlight-comment">// Download the PENDIGITS dataset from UCI ML repository</span>
<span class="highlight-keyword">var</span> pendigits = <span class="highlight-keyword">new</span> Pendigits(path: Path.GetTempPath());

<span class="highlight-comment">// Get and pre-process the training set</span>
<span class="highlight-keyword">double</span>[][][] trainInputs = pendigits.Training.Item1;
<span class="highlight-keyword">int</span>[] trainOutputs = pendigits.Training.Item2;

<span class="highlight-comment">// Pre-process the digits so each of them is centered and scaled</span>
trainInputs = trainInputs.Apply(Accord.Statistics.Tools.ZScores);

<span class="highlight-comment">// Create a Bag-of-Words learning algorithm</span>
<span class="highlight-keyword">var</span> bow = <span class="highlight-keyword">new</span> BagOfWords&lt;<span class="highlight-keyword">double</span>[], KMeans&gt;()
{
    Clustering = <span class="highlight-keyword">new</span> KMeans(<span class="highlight-number">5</span>),
};

<span class="highlight-comment">// Use the BoW to create a quantizer</span>
<span class="highlight-keyword">var</span> quantizer = bow.Learn(trainInputs);

<span class="highlight-comment">// Extract vector representations from the pen sequences</span>
<span class="highlight-keyword">double</span>[][] trainVectors = quantizer.Transform(trainInputs);

<span class="highlight-comment">// Create a new learning algorithm for support vector machines</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;ChiSquare, <span class="highlight-keyword">double</span>[]&gt;
{
    Learner = (p) =&gt; <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;ChiSquare, <span class="highlight-keyword">double</span>[]&gt;()
    {
        Complexity = <span class="highlight-number">1</span>
    }
};

<span class="highlight-comment">// Use the learning algorithm to create a classifier</span>
<span class="highlight-keyword">var</span> svm = teacher.Learn(trainVectors, trainOutputs);

<span class="highlight-comment">// Compute predictions for the training set</span>
<span class="highlight-keyword">int</span>[] trainPredicted = svm.Decide(trainVectors);

<span class="highlight-comment">// Check the performance of the classifier by comparing with the ground-truth:</span>
<span class="highlight-keyword">var</span> m1 = <span class="highlight-keyword">new</span> GeneralConfusionMatrix(predicted: trainPredicted, expected: trainOutputs);
<span class="highlight-keyword">double</span> trainAcc = m1.Accuracy; <span class="highlight-comment">// should be 0.690</span>


<span class="highlight-comment">// Prepare the testing set</span>
<span class="highlight-keyword">double</span>[][][] testInputs = pendigits.Testing.Item1;
<span class="highlight-keyword">int</span>[] testOutputs = pendigits.Testing.Item2;

<span class="highlight-comment">// Apply the same normalizations</span>
testInputs = testInputs.Apply(Accord.Statistics.Tools.ZScores);

<span class="highlight-keyword">double</span>[][] testVectors = quantizer.Transform(testInputs);

<span class="highlight-comment">// Compute predictions for the test set</span>
<span class="highlight-keyword">int</span>[] testPredicted = svm.Decide(testVectors);

<span class="highlight-comment">// Check the performance of the classifier by comparing with the ground-truth:</span>
<span class="highlight-keyword">var</span> m2 = <span class="highlight-keyword">new</span> GeneralConfusionMatrix(predicted: testPredicted, expected: testOutputs);
<span class="highlight-keyword">double</span> testAcc = m2.Accuracy; <span class="highlight-comment">// should be 0.600</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning.htm">Accord.MachineLearning Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>