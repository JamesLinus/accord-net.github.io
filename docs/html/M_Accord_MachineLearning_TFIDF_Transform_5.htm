<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>TFIDF.Transform Method (String[][], Sparse(Double)[])</title>
    <meta name="Language" content="en-us" />
    <meta name="Microsoft.Help.Id" content="M:Accord.MachineLearning.TFIDF.Transform(System.String[][],Accord.Math.Sparse{System.Double}[])" />
    <meta name="Description" content="Applies the transformation to a set of input vectors, producing an associated set of output vectors." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning" />
    <meta name="file" content="M_Accord_MachineLearning_TFIDF_Transform_5" />
    <meta name="guid" content="M_Accord_MachineLearning_TFIDF_Transform_5" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning.htm" title="Accord.MachineLearning" tocid="N_Accord_MachineLearning">Accord.MachineLearning</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_TFIDF.htm" title="TFIDF Class" tocid="T_Accord_MachineLearning_TFIDF">TFIDF Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_MachineLearning_TFIDF.htm" title="TFIDF Methods" tocid="Methods_T_Accord_MachineLearning_TFIDF">TFIDF Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_MachineLearning_TFIDF_Transform.htm" title="Transform Method " tocid="Overload_Accord_MachineLearning_TFIDF_Transform">Transform Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform.htm" title="Transform Method (String[])" tocid="M_Accord_MachineLearning_TFIDF_Transform">Transform Method (String[])</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform_4.htm" title="Transform Method (String[][])" tocid="M_Accord_MachineLearning_TFIDF_Transform_4">Transform Method (String[][])</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform_1.htm" title="Transform Method (String[], Sparse(Double))" tocid="M_Accord_MachineLearning_TFIDF_Transform_1">Transform Method (String[], Sparse(Double))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform_2.htm" title="Transform Method (String[], Sparse(Double))" tocid="M_Accord_MachineLearning_TFIDF_Transform_2">Transform Method (String[], Sparse(Double))</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform_3.htm" title="Transform Method (String[], Double[])" tocid="M_Accord_MachineLearning_TFIDF_Transform_3">Transform Method (String[], Double[])</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform_5.htm" title="Transform Method (String[][], Sparse(Double)[])" tocid="M_Accord_MachineLearning_TFIDF_Transform_5">Transform Method (String[][], Sparse(Double)[])</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform_6.htm" title="Transform Method (String[][], Sparse(Double)[])" tocid="M_Accord_MachineLearning_TFIDF_Transform_6">Transform Method (String[][], Sparse(Double)[])</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_TFIDF_Transform_7.htm" title="Transform Method (String[][], Double[][])" tocid="M_Accord_MachineLearning_TFIDF_Transform_7">Transform Method (String[][], Double[][])</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>TFIDF<span id="LSTBC908649_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_0?cpp=::|nu=.");</script>Transform Method (<span id="LSTBC908649_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_1?cpp=array&lt;");</script><span id="LSTBC908649_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_2?cpp=array&lt;");</script>String<span id="LSTBC908649_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_3?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTBC908649_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_4?cpp=&gt;|vb=()|nu=[]");</script>, <span id="LSTBC908649_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_5?cpp=array&lt;");</script>Sparse<span id="LSTBC908649_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>Double<span id="LSTBC908649_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTBC908649_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_8?cpp=&gt;|vb=()|nu=[]");</script>)</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
            Applies the transformation to a set of input vectors,
            producing an associated set of output vectors.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning.htm">Accord.MachineLearning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">Sparse</span>&lt;<span class="identifier">double</span>&gt;[] <span class="identifier">Transform</span>(
	<span class="identifier">string</span>[][] <span class="parameter">input</span>,
	<span class="identifier">Sparse</span>&lt;<span class="identifier">double</span>&gt;[] <span class="parameter">result</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Transform</span> ( 
	<span class="parameter">input</span> <span class="keyword">As</span> <span class="identifier">String</span>()(),
	<span class="parameter">result</span> <span class="keyword">As</span> <span class="identifier">Sparse</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>)()
) <span class="keyword">As</span> <span class="identifier">Sparse</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>)()</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/Representations/TFIDF.cs#L423" title="View the source code">View Source</a><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">input</span></dt><dd>Type: <span id="LSTBC908649_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_9?cpp=array&lt;");</script><span id="LSTBC908649_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_10?cpp=array&lt;");</script><span class="nolink">System<span id="LSTBC908649_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>String</span><span id="LSTBC908649_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_12?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTBC908649_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_13?cpp=&gt;|vb=()|nu=[]");</script><br />The input data to which
            the transformation should be applied.</dd><dt><span class="parameter">result</span></dt><dd>Type: <span id="LSTBC908649_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_14?cpp=array&lt;");</script><a href="T_Accord_Math_Sparse_1.htm">Accord.Math<span id="LSTBC908649_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_15?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Sparse</a><span id="LSTBC908649_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="nolink">Double</span><span id="LSTBC908649_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTBC908649_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_18?cpp=&gt;|vb=()|nu=[]");</script><br />The location to where to store the
            result of this transformation.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <span id="LSTBC908649_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_19?cpp=array&lt;");</script><a href="T_Accord_Math_Sparse_1.htm">Sparse</a><span id="LSTBC908649_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="nolink">Double</span><span id="LSTBC908649_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTBC908649_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_22?cpp=&gt;|vb=()|nu=[]");</script><br />The output generated by applying this
            transformation to the given input.<h4 class="subHeading">Implements</h4><a href="M_Accord_MachineLearning_ITransform_2_Transform.htm">ITransform<span id="LSTBC908649_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_23?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTBC908649_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_24?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTBC908649_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_25?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Transform(<span id="LSTBC908649_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_26?cpp=array&lt;");</script>TInput<span id="LSTBC908649_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTBC908649_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_28?cpp=array&lt;");</script>TOutput<span id="LSTBC908649_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBC908649_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a><br /></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Examples are available in the main documentation page for 
              <a href="T_Accord_MachineLearning_TFIDF.htm">TFIDF</a>. One of those examples is reproduced below:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// The Term-Frequency/Inverse-Document-Frequency model can be used to </span>
<span class="highlight-comment">// extract finite-length feature vectors from sequences of arbitrary </span>
<span class="highlight-comment">// length, like for example, texts:</span>

<span class="highlight-keyword">string</span>[] texts =
{
    <span class="highlight-literal">@"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas molestie malesuada 
      nisi et placerat. Curabitur blandit porttitor suscipit. Nunc facilisis ultrices felis,
      vitae luctus arcu semper in. Fusce ut felis ipsum. Sed faucibus tortor ut felis placerat
      euismod. Vestibulum pharetra velit et dolor ornare quis malesuada leo aliquam. Aenean 
      lobortis, tortor iaculis vestibulum dictum, tellus nisi vestibulum libero, ultricies 
      pretium nisi ante in neque. Integer et massa lectus. Aenean ut sem quam. Mauris at nisl 
      augue, volutpat tempus nisl. Suspendisse luctus convallis metus, vitae pretium risus 
      pretium vitae. Duis tristique euismod aliquam"</span>,

    <span class="highlight-literal">@"Sed consectetur nisl et diam mattis varius. Aliquam ornare tincidunt arcu eget adipiscing. 
      Etiam quis augue lectus, vel sollicitudin lorem. Fusce lacinia, leo non porttitor adipiscing, 
      mauris purus lobortis ipsum, id scelerisque erat neque eget nunc. Suspendisse potenti. Etiam 
      non urna non libero pulvinar consequat ac vitae turpis. Nam urna eros, laoreet id sagittis eu,
      posuere in sapien. Phasellus semper convallis faucibus. Nulla fermentum faucibus tellus in 
      rutrum. Maecenas quis risus augue, eu gravida massa."</span>
};

<span class="highlight-keyword">string</span>[][] words = texts.Tokenize();

<span class="highlight-comment">// Create a new TF-IDF with options:</span>
<span class="highlight-keyword">var</span> codebook = <span class="highlight-keyword">new</span> TFIDF()
{
    Tf = TermFrequency.Log,
    Idf = InverseDocumentFrequency.Default
};

<span class="highlight-comment">// Compute the codebook (note: this would have to be done only for the training set)</span>
codebook.Learn(words);


<span class="highlight-comment">// Now, we can use the learned codebook to extract fixed-length</span>
<span class="highlight-comment">// representations of the different texts (paragraphs) above:</span>

<span class="highlight-comment">// Extract a feature vector from the text 1:</span>
<span class="highlight-keyword">double</span>[] bow1 = codebook.Transform(words[<span class="highlight-number">0</span>]);

<span class="highlight-comment">// Extract a feature vector from the text 2:</span>
<span class="highlight-keyword">double</span>[] bow2 = codebook.Transform(words[<span class="highlight-number">1</span>]);

<span class="highlight-comment">// we could also have transformed everything at once, i.e.</span>
<span class="highlight-comment">// double[][] bow = codebook.Transform(words);</span>


<span class="highlight-comment">// Now, since we have finite length representations (both bow1 and bow2 should</span>
<span class="highlight-comment">// have the same size), we can pass them to any classifier or machine learning</span>
<span class="highlight-comment">// method. For example, we can pass them to a Logistic Regression Classifier to</span>
<span class="highlight-comment">// discern between the first and second paragraphs</span>

<span class="highlight-comment">// Lets create a Logistic classifier to separate the two paragraphs:</span>
<span class="highlight-keyword">var</span> learner = <span class="highlight-keyword">new</span> IterativeReweightedLeastSquares&lt;LogisticRegression&gt;()
{
    Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-4</span>,  <span class="highlight-comment">// Let's set some convergence parameters</span>
    Iterations = <span class="highlight-number">100</span>,  <span class="highlight-comment">// maximum number of iterations to perform</span>
    Regularization = <span class="highlight-number">0</span>
};

<span class="highlight-comment">// Now, we use the learning algorithm to learn the distinction between the two:</span>
LogisticRegression reg = learner.Learn(<span class="highlight-keyword">new</span>[] { bow1, bow2 }, <span class="highlight-keyword">new</span>[] { <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span> });

<span class="highlight-comment">// Finally, we can predict using the classifier:</span>
<span class="highlight-keyword">bool</span> c1 = reg.Decide(bow1); <span class="highlight-comment">// Should be false</span>
<span class="highlight-keyword">bool</span> c2 = reg.Decide(bow2); <span class="highlight-comment">// Should be true</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_TFIDF.htm">TFIDF Class</a></div><div class="seeAlsoStyle"><a href="Overload_Accord_MachineLearning_TFIDF_Transform.htm">Transform Overload</a></div><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning.htm">Accord.MachineLearning Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>