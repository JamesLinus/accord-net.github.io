<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>MultinomialLogisticRegressionAnalysis Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="MultinomialLogisticRegressionAnalysis class" />
    <meta name="System.Keywords" content="Accord.Statistics.Analysis.MultinomialLogisticRegressionAnalysis class" />
    <meta name="System.Keywords" content="MultinomialLogisticRegressionAnalysis class, about MultinomialLogisticRegressionAnalysis class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Analysis.MultinomialLogisticRegressionAnalysis" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Analysis.MultinomialLogisticRegressionAnalysis" />
    <meta name="Description" content="Multinomial Logistic Regression Analysis" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Statistics.Analysis" />
    <meta name="file" content="T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis" />
    <meta name="guid" content="T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_Statistics_Analysis.htm" title="Accord.Statistics.Analysis" tocid="N_Accord_Statistics_Analysis">Accord.Statistics.Analysis</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis.htm" title="MultinomialLogisticRegressionAnalysis Class" tocid="T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis">MultinomialLogisticRegressionAnalysis Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor.htm" title="MultinomialLogisticRegressionAnalysis Constructor " tocid="Overload_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor">MultinomialLogisticRegressionAnalysis Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis.htm" title="MultinomialLogisticRegressionAnalysis Properties" tocid="Properties_T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis">MultinomialLogisticRegressionAnalysis Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis.htm" title="MultinomialLogisticRegressionAnalysis Methods" tocid="Methods_T_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis">MultinomialLogisticRegressionAnalysis Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>MultinomialLogisticRegressionAnalysis Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Multinomial Logistic Regression Analysis
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST8E98A49E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_TransformBase_2.htm">Accord.MachineLearning<span id="LST8E98A49E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TransformBase</a><span id="LST8E98A49E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LST8E98A49E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_3?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LST8E98A49E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_4?cpp=&gt;|vb=()|nu=[]");</script>, <span class="nolink">Int32</span><span id="LST8E98A49E_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />    <span class="selflink">Accord.Statistics.Analysis<span id="LST8E98A49E_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MultinomialLogisticRegressionAnalysis</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_Statistics_Analysis.htm">Accord.Statistics.Analysis</a><br />
    <strong>Assembly:</strong>
   Accord.Statistics (in Accord.Statistics.dll) Version: 3.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">MultinomialLogisticRegressionAnalysis</span> : <span class="identifier">TransformBase</span>&lt;<span class="identifier">double</span>[], <span class="identifier">int</span>&gt;, 
	<span class="identifier">IMultivariateRegressionAnalysis</span>, <span class="identifier">IMultivariateAnalysis</span>, <span class="identifier">IAnalysis</span>, <span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">MultinomialLogisticRegression</span>, <span class="identifier">double</span>[], <span class="identifier">double</span>[]&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">MultinomialLogisticRegression</span>, <span class="identifier">double</span>[], <span class="identifier">int</span>&gt;</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">MultinomialLogisticRegressionAnalysis</span>
	<span class="keyword">Inherits</span> <span class="identifier">TransformBase</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>(), <span class="identifier">Integer</span>)
	<span class="keyword">Implements</span> <span class="identifier">IMultivariateRegressionAnalysis</span>, <span class="identifier">IMultivariateAnalysis</span>, <span class="identifier">IAnalysis</span>, <span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">MultinomialLogisticRegression</span>, <span class="identifier">Double</span>(), <span class="identifier">Double</span>()), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">MultinomialLogisticRegression</span>, <span class="identifier">Double</span>(), <span class="identifier">Integer</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.Statistics/Analysis/MultinomialLogisticRegressionAnalysis.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">MultinomialLogisticRegressionAnalysis</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor.htm">MultinomialLogisticRegressionAnalysis<span id="LST8E98A49E_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_7?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
              Constructs a Multiple Linear Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor_1.htm">MultinomialLogisticRegressionAnalysis(<span id="LST8E98A49E_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_8?cpp=array&lt;");</script><span id="LST8E98A49E_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_9?cpp=array&lt;");</script>Double<span id="LST8E98A49E_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_10?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_11?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_12?cpp=array&lt;");</script><span id="LST8E98A49E_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_13?cpp=array&lt;");</script>Double<span id="LST8E98A49E_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_14?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_15?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Multinomial Logistic Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor_3.htm">MultinomialLogisticRegressionAnalysis(<span id="LST8E98A49E_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_16?cpp=array&lt;");</script><span id="LST8E98A49E_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_17?cpp=array&lt;");</script>Double<span id="LST8E98A49E_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_18?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_19?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_20?cpp=array&lt;");</script>Int32<span id="LST8E98A49E_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_21?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Multinomial Logistic Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor_5.htm">MultinomialLogisticRegressionAnalysis(<span id="LST8E98A49E_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_22?cpp=array&lt;");</script>String<span id="LST8E98A49E_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_23?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_24?cpp=array&lt;");</script>String<span id="LST8E98A49E_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_25?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Constructs a Multiple Linear Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor_2.htm">MultinomialLogisticRegressionAnalysis(<span id="LST8E98A49E_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_26?cpp=array&lt;");</script><span id="LST8E98A49E_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_27?cpp=array&lt;");</script>Double<span id="LST8E98A49E_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_28?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_30?cpp=array&lt;");</script><span id="LST8E98A49E_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_31?cpp=array&lt;");</script>Double<span id="LST8E98A49E_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_32?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_33?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_34?cpp=array&lt;");</script>String<span id="LST8E98A49E_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_36?cpp=array&lt;");</script>String<span id="LST8E98A49E_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_37?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Multiple Linear Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis__ctor_4.htm">MultinomialLogisticRegressionAnalysis(<span id="LST8E98A49E_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_38?cpp=array&lt;");</script><span id="LST8E98A49E_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_39?cpp=array&lt;");</script>Double<span id="LST8E98A49E_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_40?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_41?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_42?cpp=array&lt;");</script>Int32<span id="LST8E98A49E_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_43?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_44?cpp=array&lt;");</script>String<span id="LST8E98A49E_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_45?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_46?cpp=array&lt;");</script>String<span id="LST8E98A49E_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_47?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Multiple Linear Regression Analysis.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Array.htm">Array</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Source data used in the analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_ChiSquare.htm">ChiSquare</a></td><td><div class="summary">
              Gets the Chi-Square (Likelihood Ratio) Test for the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Coefficients.htm">Coefficients</a></td><td><div class="summary">
              Gets the collection of coefficients of the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_CoefficientValues.htm">CoefficientValues</a></td><td><div class="summary">
              Gets the value of each coefficient.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Confidences.htm">Confidences</a></td><td><div class="summary">
              Gets the Confidence Intervals (C.I.)
              for each coefficient found in the regression.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Deviance.htm">Deviance</a></td><td><div class="summary">
              Gets the Deviance of the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_InputNames.htm">InputNames</a></td><td><div class="summary">
              Gets or sets the name of the input variables for the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Inputs.htm">Inputs</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete. Please use <a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_InputNames.htm">InputNames</a> instead.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Iterations.htm">Iterations</a></td><td><div class="summary">
              Gets or sets the maximum number of iterations to be
              performed by the regression algorithm. Default is 50.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_LogLikelihood.htm">LogLikelihood</a></td><td><div class="summary">
              Gets the Log-Likelihood for the model.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_TransformBase_2_NumberOfInputs.htm">NumberOfInputs</a></td><td><div class="summary">
              Gets the number of inputs accepted by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LST8E98A49E_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_48?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LST8E98A49E_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_49?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_TransformBase_2_NumberOfOutputs.htm">NumberOfOutputs</a></td><td><div class="summary">
              Gets the number of outputs generated by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LST8E98A49E_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_50?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LST8E98A49E_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_51?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Output.htm">Output</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the dependent variable value
              for each of the source input points.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_OutputCount.htm">OutputCount</a></td><td><div class="summary">
             Gets the number of outputs in the regression problem.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_OutputNames.htm">OutputNames</a></td><td><div class="summary">
              Gets or sets the name of the output variable for the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Outputs.htm">Outputs</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the dependent variable value
              for each of the source input points.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Regression.htm">Regression</a></td><td><div class="summary">
              Gets the Regression model created
              and evaluated by this analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Results.htm">Results</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the resulting values obtained by the regression model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Source.htm">Source</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Source data used in the analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_StandardErrors.htm">StandardErrors</a></td><td><div class="summary">
              Gets the Standard Error for each coefficient
              found during the logistic regression.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Token.htm">Token</a></td><td><div class="summary">
            Gets or sets a cancellation token that can be used to
            stop the learning algorithm while it is running.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Gets or sets the difference between two iterations of the regression 
              algorithm when the algorithm should stop. The difference is calculated
              based on the largest absolute parameter change of the regression. Default
              is 1e-5.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_WaldTests.htm">WaldTests</a></td><td><div class="summary">
              Gets the Wald Tests for each coefficient.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Compute.htm">Compute</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the Multinomial Logistic Regression Analysis.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Learn.htm">Learn(<span id="LST8E98A49E_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_52?cpp=array&lt;");</script><span id="LST8E98A49E_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_53?cpp=array&lt;");</script>Double<span id="LST8E98A49E_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_54?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_55?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_56?cpp=array&lt;");</script><span id="LST8E98A49E_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_57?cpp=array&lt;");</script>Double<span id="LST8E98A49E_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_58?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_59?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_60?cpp=array&lt;");</script>Double<span id="LST8E98A49E_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_61?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Learn_1.htm">Learn(<span id="LST8E98A49E_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_62?cpp=array&lt;");</script><span id="LST8E98A49E_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_63?cpp=array&lt;");</script>Double<span id="LST8E98A49E_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_64?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_65?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_66?cpp=array&lt;");</script>Int32<span id="LST8E98A49E_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_67?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_68?cpp=array&lt;");</script>Double<span id="LST8E98A49E_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_69?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Learn_2.htm">Learn(<span id="LST8E98A49E_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_70?cpp=array&lt;");</script><span id="LST8E98A49E_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_71?cpp=array&lt;");</script>Int32<span id="LST8E98A49E_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_73?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_74?cpp=array&lt;");</script><span id="LST8E98A49E_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_75?cpp=array&lt;");</script>Int32<span id="LST8E98A49E_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_76?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST8E98A49E_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_77?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_78?cpp=array&lt;");</script>Double<span id="LST8E98A49E_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_79?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_TransformBase_2_Transform_1.htm">Transform(<span id="LST8E98A49E_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_80?cpp=array&lt;");</script>TInput<span id="LST8E98A49E_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_81?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Applies the transformation to a set of input vectors,
              producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LST8E98A49E_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_82?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LST8E98A49E_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_83?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_MultinomialLogisticRegressionAnalysis_Transform.htm">Transform(<span id="LST8E98A49E_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_84?cpp=array&lt;");</script>Double<span id="LST8E98A49E_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_85?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to an input, producing an associated output.
            </div> (Overrides <a href="M_Accord_MachineLearning_TransformBase_2_Transform.htm">TransformBase<span id="LST8E98A49E_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_86?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LST8E98A49E_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_87?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LST8E98A49E_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_88?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Transform(TInput)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_TransformBase_2_Transform_2.htm">Transform(<span id="LST8E98A49E_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_89?cpp=array&lt;");</script>TInput<span id="LST8E98A49E_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_90?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST8E98A49E_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_91?cpp=array&lt;");</script>TOutput<span id="LST8E98A49E_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_92?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Applies the transformation to an input, producing an associated output.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LST8E98A49E_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_93?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LST8E98A49E_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_94?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">
                Compares two objects for equality, performing an elementwise 
                comparison if the elements are vectors or matrices.
            </div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To.htm">To(Type)</a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LST8E98A49E_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_95?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST8E98A49E_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_96?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST8E98A49E_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8E98A49E_97?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
              In statistics, multinomial logistic regression is a classification method that 
              generalizes logistic regression to multiclass problems, i.e. with more than two 
              possible discrete outcomes.[1] That is, it is a model that is used to predict the
              probabilities of the different possible outcomes of a categorically distributed 
              dependent variable, given a set of independent variables (which may be real-valued,
              binary-valued, categorical-valued, etc.).</p><p>
              Multinomial logistic regression is known by a variety of other names, including
              multiclass LR, multinomial regression,[2] softmax regression, multinomial logit,
              maximum entropy (MaxEnt) classifier, conditional maximum entropy model.</p>para&gt;
              
            <p>
              References:
              <ul><li>
                  Wikipedia contributors. "Multinomial logistic regression." Wikipedia, The Free Encyclopedia, 1st April, 2015.
                  Available at: https://en.wikipedia.org/wiki/Multinomial_logistic_regression </li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><p>
              The first example shows how to reproduce a textbook example using categorical and categorical-with-baseline
              variables. Those variables can be transformed/factored to their respective representations using the 
              <a href="T_Accord_Statistics_Filters_Codification.htm">Codification</a> class. However, please note that while this example uses features from the 
              <a href="T_Accord_Statistics_Filters_Codification.htm">Codification</a> class, the use of this class is not required when learning a <a href="T_Accord_Statistics_Models_Regression_MultinomialLogisticRegression.htm">MultinomialLogisticRegression</a>
              modoel.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// This example downloads an example dataset from the web and learns a multinomial logistic </span>
<span class="highlight-comment">// regression on it. However, please keep in mind that the Multinomial Logistic Regression </span>
<span class="highlight-comment">// can also work without many of the elements that will be shown below, like the codebook, </span>
<span class="highlight-comment">// DataTables, and a CsvReader. </span>

<span class="highlight-comment">// Let's download an example dataset from the web to learn a multinomial logistic regression:</span>
CsvReader reader = CsvReader.FromUrl(<span class="highlight-literal">"https://raw.githubusercontent.com/rlowrance/re/master/hsbdemo.csv"</span>, hasHeaders: <span class="highlight-keyword">true</span>);

<span class="highlight-comment">// Let's read the CSV into a DataTable. As mentioned above, this step</span>
<span class="highlight-comment">// can help, but is not necessarily required for learning a the model:</span>
DataTable table = reader.ToTable();

<span class="highlight-comment">// We will learn a MLR regression between the following input and output fields of this table:</span>
<span class="highlight-keyword">string</span>[] inputNames = <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"write"</span>, <span class="highlight-literal">"ses"</span> };
<span class="highlight-keyword">string</span>[] outputNames = <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"prog"</span> };

<span class="highlight-comment">// Now let's create a codification codebook to convert the string fields in the data </span>
<span class="highlight-comment">// into integer symbols. This is required because the MLR model can only learn from </span>
<span class="highlight-comment">// numeric data, so strings have to be transformed first. We can force a particular</span>
<span class="highlight-comment">// interpretation for those columns if needed, as shown in the initializer below:</span>
<span class="highlight-keyword">var</span> codification = <span class="highlight-keyword">new</span> Codification()
{
    { <span class="highlight-literal">"write"</span>, CodificationVariable.Continuous },
    { <span class="highlight-literal">"ses"</span>, CodificationVariable.CategoricalWithBaseline, <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"low"</span>, <span class="highlight-literal">"middle"</span>, <span class="highlight-literal">"high"</span> } },
    { <span class="highlight-literal">"prog"</span>, CodificationVariable.Categorical, <span class="highlight-keyword">new</span>[] { <span class="highlight-literal">"academic"</span>, <span class="highlight-literal">"general"</span> } },
};

<span class="highlight-comment">// Learn the codification</span>
codification.Learn(table);

<span class="highlight-comment">// Now, transform symbols into a vector representation, growing the number of inputs:</span>
<span class="highlight-keyword">double</span>[][] x = codification.Transform(table, inputNames, <span class="highlight-keyword">out</span> inputNames).ToDouble();
<span class="highlight-keyword">double</span>[][] y = codification.Transform(table, outputNames, <span class="highlight-keyword">out</span> outputNames).ToDouble();

<span class="highlight-comment">// Create a new Multinomial Logistic Regression Analysis:</span>
<span class="highlight-keyword">var</span> analysis = <span class="highlight-keyword">new</span> MultinomialLogisticRegressionAnalysis()
{
    InputNames = inputNames,
    OutputNames = outputNames,
};

<span class="highlight-comment">// Learn the regression from the input and output pairs:</span>
MultinomialLogisticRegression regression = analysis.Learn(x, y);

<span class="highlight-comment">// Let's retrieve some information about what we just learned:</span>
<span class="highlight-keyword">int</span> coefficients = analysis.Coefficients.Count; <span class="highlight-comment">// should be 9</span>
<span class="highlight-keyword">int</span> numberOfInputs = analysis.NumberOfInputs;   <span class="highlight-comment">// should be 3</span>
<span class="highlight-keyword">int</span> numberOfOutputs = analysis.NumberOfOutputs; <span class="highlight-comment">// should be 3</span>

inputNames = analysis.InputNames; <span class="highlight-comment">// should be "write", "ses: middle", "ses: high"</span>
outputNames = analysis.OutputNames; <span class="highlight-comment">// should be "prog: academic", "prog: general", "prog: vocation"</span>

<span class="highlight-comment">// The regression is best visualized when it is data-bound to a </span>
<span class="highlight-comment">// Windows.Forms DataGridView or WPF DataGrid. You can get the</span>
<span class="highlight-comment">// values for all different coefficients and discrete values:</span>

<span class="highlight-comment">// DataGridBox.Show(regression.Coefficients); // uncomment this line</span>

<span class="highlight-comment">// You can get the matrix of coefficients:</span>
<span class="highlight-keyword">double</span>[][] coef = analysis.CoefficientValues;

<span class="highlight-comment">// Should be equal to:</span>
<span class="highlight-keyword">double</span>[][] expectedCoef = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][]
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2.85217775752471</span>, <span class="highlight-number">-0.0579282723520426</span>, <span class="highlight-number">-0.533293368378012</span>, <span class="highlight-number">-1.16283850605289</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">5.21813357698422</span>, <span class="highlight-number">-0.113601186660817</span>, <span class="highlight-number">0.291387041358367</span>, <span class="highlight-number">-0.9826369387481</span> }
};

<span class="highlight-comment">// And their associated standard errors:</span>
<span class="highlight-keyword">double</span>[][] stdErr = analysis.StandardErrors;

<span class="highlight-comment">// Should be equal to:</span>
<span class="highlight-keyword">double</span>[][] expectedErr = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][]
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-2.02458003380033</span>, <span class="highlight-number">-0.339533576505471</span>, <span class="highlight-number">-1.164084923948</span>, <span class="highlight-number">-0.520961533343425</span>, <span class="highlight-number">0.0556314901718</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-3.73971589217449</span>, <span class="highlight-number">-1.47672790071382</span>, <span class="highlight-number">-1.76795568348094</span>, <span class="highlight-number">-0.495032307980058</span>, <span class="highlight-number">0.113563519656386</span> }
};

<span class="highlight-comment">// We can also get statistics and hypothesis tests:</span>
WaldTest[][] wald = analysis.WaldTests;        <span class="highlight-comment">// should all have p &lt; 0.05</span>
ChiSquareTest chiSquare = analysis.ChiSquare;  <span class="highlight-comment">// should be p=1.06300120956871E-08</span>
<span class="highlight-keyword">double</span> logLikelihood = analysis.LogLikelihood; <span class="highlight-comment">// should be -179.98173272217591</span>

<span class="highlight-comment">// You can use the regression to predict the values:</span>
<span class="highlight-keyword">int</span>[] pred = regression.Transform(x);

<span class="highlight-comment">// And get the accuracy of the prediction if needed:</span>
<span class="highlight-keyword">var</span> cm = GeneralConfusionMatrix.Estimate(regression, x, y.ArgMax(dimension: <span class="highlight-number">1</span>));

<span class="highlight-keyword">double</span> acc = cm.Accuracy; <span class="highlight-comment">// should be 0.61</span>
<span class="highlight-keyword">double</span> kappa = cm.Kappa;  <span class="highlight-comment">// should be 0.2993487536492252</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACABA");</script><p>
              The second example shows how to learn a <span class="selflink">MultinomialLogisticRegressionAnalysis</span> from the 
              famous Fisher's Iris dataset. This example should demonstrate that <a href="T_Accord_Statistics_Filters_Codification.htm">Codification</a> filters
              are not required to successfully learn multinomial logistic regression analyses.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// This example shows how to learn a multinomial logistic regression</span>
<span class="highlight-comment">// analysis in the famous Fisher's Iris dataset. It should serve to</span>
<span class="highlight-comment">// demonstrate that this class does not really need to be used with</span>
<span class="highlight-comment">// DataTables, Codification codebooks and other supplementary features.</span>

Iris iris = <span class="highlight-keyword">new</span> Iris();

<span class="highlight-comment">// Load Fisher's Iris dataset:</span>
<span class="highlight-keyword">double</span>[][] x = iris.Instances;
<span class="highlight-keyword">int</span>[] y = iris.ClassLabels;

<span class="highlight-comment">// Create a new Multinomial Logistic Regression Analysis:</span>
<span class="highlight-keyword">var</span> analysis = <span class="highlight-keyword">new</span> MultinomialLogisticRegressionAnalysis();

<span class="highlight-comment">// Note: we could have passed the class names from iris.ClassNames and </span>
<span class="highlight-comment">// variable names from iris.VariableNames during MLR instantiation as:</span>
<span class="highlight-comment">// </span>
<span class="highlight-comment">// var analysis = new MultinomialLogisticRegressionAnalysis()</span>
<span class="highlight-comment">// {</span>
<span class="highlight-comment">//     InputNames = iris.VariableNames,</span>
<span class="highlight-comment">//     OutputNames = iris.ClassNames</span>
<span class="highlight-comment">// };</span>

<span class="highlight-comment">// However, this example is also intended to demonstrate that </span>
<span class="highlight-comment">// those are not required when learning a regression analysis.</span>

<span class="highlight-comment">// Learn the regression from the input and output pairs:</span>
MultinomialLogisticRegression regression = analysis.Learn(x, y);

<span class="highlight-comment">// Let's retrieve some information about what we just learned:</span>
<span class="highlight-keyword">int</span> coefficients = analysis.Coefficients.Count; <span class="highlight-comment">// should be 11</span>
<span class="highlight-keyword">int</span> numberOfInputs = analysis.NumberOfInputs;   <span class="highlight-comment">// should be 4</span>
<span class="highlight-keyword">int</span> numberOfOutputs = analysis.NumberOfOutputs; <span class="highlight-comment">// should be 3</span>

<span class="highlight-keyword">string</span>[] inputNames = analysis.InputNames; <span class="highlight-comment">// should be "Input 1", "Input 2", "Input 3", "Input 4"</span>
<span class="highlight-keyword">string</span>[] outputNames = analysis.OutputNames; <span class="highlight-comment">// should be "Class 0", "class 1", "class 2"</span>

<span class="highlight-comment">// The regression is best visualized when it is data-bound to a </span>
<span class="highlight-comment">// Windows.Forms DataGridView or WPF DataGrid. You can get the</span>
<span class="highlight-comment">// values for all different coefficients and discrete values:</span>

<span class="highlight-comment">// DataGridBox.Show(regression.Coefficients); // uncomment this line</span>

<span class="highlight-comment">// You can get the matrix of coefficients:</span>
<span class="highlight-keyword">double</span>[][] coef = analysis.CoefficientValues;

<span class="highlight-comment">// Should be equal to:</span>
<span class="highlight-keyword">double</span>[][] expectedCoef = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][]
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2.85217775752471</span>, <span class="highlight-number">-0.0579282723520426</span>, <span class="highlight-number">-0.533293368378012</span>, <span class="highlight-number">-1.16283850605289</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">5.21813357698422</span>, <span class="highlight-number">-0.113601186660817</span>, <span class="highlight-number">0.291387041358367</span>, <span class="highlight-number">-0.9826369387481</span> }
};

<span class="highlight-comment">// And their associated standard errors:</span>
<span class="highlight-keyword">double</span>[][] stdErr = analysis.StandardErrors;

<span class="highlight-comment">// Should be equal to:</span>
<span class="highlight-keyword">double</span>[][] expectedErr = <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][]
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-2.02458003380033</span>, <span class="highlight-number">-0.339533576505471</span>, <span class="highlight-number">-1.164084923948</span>, <span class="highlight-number">-0.520961533343425</span>, <span class="highlight-number">0.0556314901718</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">-3.73971589217449</span>, <span class="highlight-number">-1.47672790071382</span>, <span class="highlight-number">-1.76795568348094</span>, <span class="highlight-number">-0.495032307980058</span>, <span class="highlight-number">0.113563519656386</span> }
};

<span class="highlight-comment">// We can also get statistics and hypothesis tests:</span>
WaldTest[][] wald = analysis.WaldTests;        <span class="highlight-comment">// should all have p &lt; 0.05</span>
ChiSquareTest chiSquare = analysis.ChiSquare;  <span class="highlight-comment">// should be p=0</span>
<span class="highlight-keyword">double</span> logLikelihood = analysis.LogLikelihood; <span class="highlight-comment">// should be -29.558338705646587</span>

<span class="highlight-comment">// You can use the regression to predict the values:</span>
<span class="highlight-keyword">int</span>[] pred = regression.Transform(x);

<span class="highlight-comment">// And get the accuracy of the prediction if needed:</span>
<span class="highlight-keyword">var</span> cm = GeneralConfusionMatrix.Estimate(regression, x, y);

<span class="highlight-keyword">double</span> acc = cm.Accuracy; <span class="highlight-comment">// should be 0.94666666666666666</span>
<span class="highlight-keyword">double</span> kappa = cm.Kappa;  <span class="highlight-comment">// should be 0.91999999999999982</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Analysis.htm">Accord.Statistics.Analysis Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>