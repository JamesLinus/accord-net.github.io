<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>DynamicTimeWarping(TDistance, TInput) Structure</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="DynamicTimeWarping%3CTDistance%2C TInput%3E structure" />
    <meta name="System.Keywords" content="Accord.Statistics.Kernels.DynamicTimeWarping%3CTDistance%2C TInput%3E structure" />
    <meta name="System.Keywords" content="DynamicTimeWarping%3CTDistance%2C TInput%3E structure, about DynamicTimeWarping%3CTDistance%2C TInput%3E structure" />
    <meta name="System.Keywords" content="DynamicTimeWarping(Of TDistance%2C TInput) structure" />
    <meta name="System.Keywords" content="Accord.Statistics.Kernels.DynamicTimeWarping(Of TDistance%2C TInput) structure" />
    <meta name="System.Keywords" content="DynamicTimeWarping(Of TDistance%2C TInput) structure, about DynamicTimeWarping(Of TDistance%2C TInput) structure" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Kernels.DynamicTimeWarping`2" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Kernels.DynamicTimeWarping`2" />
    <meta name="Description" content="Radial Basis Function Dynamic Time Warping Sequence Kernel." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Statistics.Kernels" />
    <meta name="file" content="T_Accord_Statistics_Kernels_DynamicTimeWarping_2" />
    <meta name="guid" content="T_Accord_Statistics_Kernels_DynamicTimeWarping_2" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_Statistics_Kernels.htm" title="Accord.Statistics.Kernels" tocid="N_Accord_Statistics_Kernels">Accord.Statistics.Kernels</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_Statistics_Kernels_DynamicTimeWarping_2.htm" title="DynamicTimeWarping(TDistance, TInput) Structure" tocid="T_Accord_Statistics_Kernels_DynamicTimeWarping_2">DynamicTimeWarping(TDistance, TInput) Structure</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Statistics_Kernels_DynamicTimeWarping_2__ctor.htm" title="DynamicTimeWarping(TDistance, TInput) Constructor " tocid="Overload_Accord_Statistics_Kernels_DynamicTimeWarping_2__ctor">DynamicTimeWarping(TDistance, TInput) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_Statistics_Kernels_DynamicTimeWarping_2.htm" title="DynamicTimeWarping(TDistance, TInput) Properties" tocid="Properties_T_Accord_Statistics_Kernels_DynamicTimeWarping_2">DynamicTimeWarping(TDistance, TInput) Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_Statistics_Kernels_DynamicTimeWarping_2.htm" title="DynamicTimeWarping(TDistance, TInput) Methods" tocid="Methods_T_Accord_Statistics_Kernels_DynamicTimeWarping_2">DynamicTimeWarping(TDistance, TInput) Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>DynamicTimeWarping<span id="LSTBE432F8E_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TDistance</span>, <span class="typeparameter">TInput</span><span id="LSTBE432F8E_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Structure</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
               Radial Basis Function Dynamic Time Warping Sequence Kernel.
             </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_Statistics_Kernels.htm">Accord.Statistics.Kernels</a><br />
    <strong>Assembly:</strong>
   Accord.Statistics (in Accord.Statistics.dll) Version: 3.7.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">struct</span> <span class="identifier">DynamicTimeWarping</span>&lt;TDistance, TInput&gt; : <span class="identifier">IKernel</span>&lt;TInput[]&gt;, 
	<span class="identifier">ICloneable</span>, <span class="identifier">IDistance</span>&lt;TInput[]&gt;, <span class="identifier">IDistance</span>&lt;TInput[], TInput[]&gt;
<span class="keyword">where</span> TDistance : <span class="keyword">struct</span>, <span class="keyword">new</span>(), <span class="identifier">IDistance</span>&lt;TInput&gt;
</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Structure</span> <span class="identifier">DynamicTimeWarping</span>(<span class="keyword">Of</span> TDistance <span class="keyword">As</span> {<span class="keyword">Structure</span>, <span class="keyword">New</span>, <span class="identifier">IDistance</span>(<span class="keyword">Of</span> TInput)}, TInput)
	<span class="keyword">Implements</span> <span class="identifier">IKernel</span>(<span class="keyword">Of</span> TInput()), <span class="identifier">ICloneable</span>, 
	<span class="identifier">IDistance</span>(<span class="keyword">Of</span> TInput()), <span class="identifier">IDistance</span>(<span class="keyword">Of</span> TInput(), TInput())</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.Statistics/Kernels/DynamicTimeWarping%601.cs" title="View the source code">View Source</a><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TDistance</span></dt><dd /><dt><span class="parameter">TInput</span></dt><dd /></dl></div><p>The <span class="selflink">DynamicTimeWarping<span id="LSTBE432F8E_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_2?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TDistance, TInput<span id="LSTBE432F8E_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_3?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Kernels_DynamicTimeWarping_2__ctor.htm">DynamicTimeWarping<span id="LSTBE432F8E_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TDistance, TInput<span id="LSTBE432F8E_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script>(Double)</a></td><td><div class="summary">
              Constructs a new Dynamic Time Warping kernel.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Kernels_DynamicTimeWarping_2__ctor_1.htm">DynamicTimeWarping<span id="LSTBE432F8E_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TDistance, TInput<span id="LSTBE432F8E_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script>(TDistance)</a></td><td><div class="summary">
              Constructs a new Dynamic Time Warping kernel.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Kernels_DynamicTimeWarping_2__ctor_2.htm">DynamicTimeWarping<span id="LSTBE432F8E_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TDistance, TInput<span id="LSTBE432F8E_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script>(TDistance, Double)</a></td><td><div class="summary">
              Constructs a new Dynamic Time Warping kernel.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Kernels_DynamicTimeWarping_2_Gamma.htm">Gamma</a></td><td><div class="summary">
              Gets or sets the gamma value for the kernel. When setting
              gamma, sigma gets updated accordingly (gamma = 0.5/sigma^2).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Kernels_DynamicTimeWarping_2_Sigma.htm">Sigma</a></td><td><div class="summary">
              Gets or sets the sigma value for the kernel. When setting
              sigma, gamma gets updated accordingly (gamma = 0.5/sigma^2).
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Kernels_DynamicTimeWarping_2_SigmaSquared.htm">SigmaSquared</a></td><td><div class="summary">
              Gets or sets the sigma² value for the kernel. When setting
              sigma², gamma gets updated accordingly (gamma = 0.5/sigma²).
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Kernels_DynamicTimeWarping_2_Clone.htm">Clone</a></td><td><div class="summary">
              Creates a new object that is a copy of the current instance.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Kernels_DynamicTimeWarping_2_Distance.htm">Distance</a></td><td><div class="summary">
              Computes the squared distance in feature space
              between two points given in input space.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Indicates whether this instance and a specified object are equal.</div> (Inherited from <span class="nolink">ValueType</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Kernels_DynamicTimeWarping_2_Function.htm">Function</a></td><td><div class="summary">
              Dynamic Time Warping kernel function.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Returns the hash code for this instance.</div> (Inherited from <span class="nolink">ValueType</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns the fully qualified type name of this instance.</div> (Inherited from <span class="nolink">ValueType</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTBE432F8E_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTBE432F8E_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTBE432F8E_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID6RBSection" class="collapsibleSection"><p>
               The Dynamic Time Warping Sequence Kernel is a sequence kernel, accepting
               vector sequences of variable size as input. Despite the sequences being
               variable in size, the vectors contained in such sequences should have its
               size fixed and should be informed at the construction of this kernel.</p><p>
               The conversion of the DTW global distance to a dot product uses a combination
               of a technique known as spherical normalization and the polynomial kernel. The
               degree of the polynomial kernel and the alpha for the spherical normalization
               should be given at the construction of the kernel. For more information,
               please see the referenced papers shown below.</p><p>
               The use of a <a href="T_Accord_Statistics_Kernels_KernelFunctionCache.htm">cache</a> is highly advisable
               when using this kernel.</p><p><ul><li>
                 V. Wan, J. Carmichael; Polynomial Dynamic Time Warping Kernel Support
                 Vector Machines for Dysarthric Speech Recognition with Sparse Training
                 Data. Interspeech'2005 - Eurospeech - 9th European Conference on Speech
                 Communication and Technology. Lisboa, 2005.</li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
               The following example demonstrates how to create and learn a Support Vector
               Machine (SVM) to recognize sequences of univariate observations using the 
               Dynamic Time Warping kernel.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose you have sequences of univariate observations, </span>
<span class="highlight-comment">// and that those sequences could be of arbitrary length.</span>
<span class="highlight-comment">// In this example, we have sequences binary numbers:</span>

<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">// Class -1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span> },    

    <span class="highlight-comment">// Class +1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>,<span class="highlight-number">0</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>,<span class="highlight-number">1</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>,<span class="highlight-number">0</span>,<span class="highlight-number">0</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>,<span class="highlight-number">0</span>,<span class="highlight-number">0</span>,<span class="highlight-number">0</span>,<span class="highlight-number">1</span>,<span class="highlight-number">1</span> }
};

<span class="highlight-keyword">int</span>[] outputs =
{
        <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,  <span class="highlight-comment">// First four sequences are of class 0</span>
        <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> <span class="highlight-comment">// Last five sequences are of class 1</span>
};

<span class="highlight-comment">// Create the Sequential Minimal Optimization learning algorithm</span>
<span class="highlight-keyword">var</span> smo = <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;DynamicTimeWarping&gt;()
{
    Complexity = <span class="highlight-number">1.5</span>,

    <span class="highlight-comment">// Set the parameters of the kernel</span>
    Kernel = <span class="highlight-keyword">new</span> DynamicTimeWarping(alpha: <span class="highlight-number">1</span>, degree: <span class="highlight-number">1</span>)
};

<span class="highlight-comment">// And use it to learn a machine!</span>
<span class="highlight-keyword">var</span> svm = smo.Learn(inputs, outputs);

<span class="highlight-comment">// Now we can compute predicted values</span>
<span class="highlight-keyword">bool</span>[] predicted = svm.Decide(inputs);

<span class="highlight-comment">// And check how far we are from the expected values</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted); <span class="highlight-comment">// error will be 0.0</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACABA");</script><p>
               Now, instead of having univariate observations, the following example 
               demonstrates how to create and learn a sequences of multivariate (or
               n-dimensional) observations.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose you have sequences of multivariate observations, and that</span>
<span class="highlight-comment">// those sequences could be of arbitrary length. On the other hand, </span>
<span class="highlight-comment">// each observation have a fixed, delimited number of dimensions.</span>

<span class="highlight-comment">// In this example, we have sequences of 3-dimensional observations. </span>
<span class="highlight-comment">// Each sequence can have an arbitrary length, but each observation</span>
<span class="highlight-comment">// will always have length 3:</span>

<span class="highlight-keyword">double</span>[][][] sequences =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][] <span class="highlight-comment">// first sequence</span>
    {
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// first observation of the first sequence</span>
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">2</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// second observation of the first sequence</span>
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">4</span>, <span class="highlight-number">2</span> }, <span class="highlight-comment">// third observation of the first sequence</span>
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span> }, <span class="highlight-comment">// fourth observation of the first sequence</span>
    },

    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][] <span class="highlight-comment">// second sequence (note that this sequence has a different length)</span>
    {
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// first observation of the second sequence</span>
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">5</span>, <span class="highlight-number">6</span> }, <span class="highlight-comment">// second observation of the second sequence</span>
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">7</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// third observation of the second sequence</span>
    },

    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][] <span class="highlight-comment">// third sequence </span>
    {
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">8</span>, <span class="highlight-number">2</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// first observation of the third sequence</span>
    },

    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[][] <span class="highlight-comment">// fourth sequence </span>
    {
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">8</span>, <span class="highlight-number">2</span>, <span class="highlight-number">5</span> }, <span class="highlight-comment">// first observation of the fourth sequence</span>
        <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">5</span>, <span class="highlight-number">4</span> }, <span class="highlight-comment">// second observation of the fourth sequence</span>
    }
};

<span class="highlight-comment">// Now, we will also have different class labels associated which each </span>
<span class="highlight-comment">// sequence. We will assign -1 to sequences whose observations start </span>
<span class="highlight-comment">// with { 1, 1, 1 } and +1 to those that do not:</span>

<span class="highlight-keyword">int</span>[] outputs =
{
        <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,  <span class="highlight-comment">// First two sequences are of class 0 (those start with {1,1,1})</span>
        <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,  <span class="highlight-comment">// Last two sequences are of class  1 (don't start with {1,1,1})</span>
};

<span class="highlight-comment">// Now we can create the Sequential Minimal Optimization learning algorithm</span>
<span class="highlight-keyword">var</span> smo = <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;DynamicTimeWarping, <span class="highlight-keyword">double</span>[][]&gt;()
{
    Complexity = <span class="highlight-number">1.5</span>,

    <span class="highlight-comment">// Set the parameters of the kernel</span>
    Kernel = <span class="highlight-keyword">new</span> DynamicTimeWarping(alpha: <span class="highlight-number">1</span>, degree: <span class="highlight-number">1</span>)
};

<span class="highlight-comment">// And use it to learn a machine!</span>
<span class="highlight-keyword">var</span> svm = smo.Learn(sequences, outputs);

<span class="highlight-comment">// Now we can compute predicted values</span>
<span class="highlight-keyword">bool</span>[] predicted = svm.Decide(sequences);

<span class="highlight-comment">// And check how far we are from the expected values</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted); <span class="highlight-comment">// error will be 0.0</span>


<span class="highlight-comment">// At this point, we should have obtained an useful machine. Let's</span>
<span class="highlight-comment">// see if it can understand a few examples it hasn't seem before:</span>

<span class="highlight-keyword">double</span>[][] a =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">7</span>, <span class="highlight-number">2</span>, <span class="highlight-number">5</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">2</span>, <span class="highlight-number">5</span>, <span class="highlight-number">1</span> },
};

<span class="highlight-keyword">double</span>[][] b =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">8</span>, <span class="highlight-number">5</span>, <span class="highlight-number">2</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span>, <span class="highlight-number">2</span>, <span class="highlight-number">5</span> },
};

<span class="highlight-comment">// Following the aforementioned logic, sequence (a) should be</span>
<span class="highlight-comment">// classified as -1, and sequence (b) should be classified as +1.</span>

<span class="highlight-keyword">bool</span> resultA = svm.Decide(a); <span class="highlight-comment">// false</span>
<span class="highlight-keyword">bool</span> resultB = svm.Decide(b); <span class="highlight-comment">// true</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Kernels.htm">Accord.Statistics.Kernels Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>