<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>StochasticGradientDescent Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="StochasticGradientDescent class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.StochasticGradientDescent class" />
    <meta name="System.Keywords" content="StochasticGradientDescent class, about StochasticGradientDescent class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.VectorMachines.Learning.StochasticGradientDescent" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.VectorMachines.Learning.StochasticGradientDescent" />
    <meta name="Description" content="Stochastic Gradient Descent (SGD) for training linear support vector machines." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning.VectorMachines.Learning" />
    <meta name="file" content="T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent" />
    <meta name="guid" content="T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning_VectorMachines_Learning.htm" title="Accord.MachineLearning.VectorMachines.Learning" tocid="N_Accord_MachineLearning_VectorMachines_Learning">Accord.MachineLearning.VectorMachines.Learning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent.htm" title="StochasticGradientDescent Class" tocid="T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent">StochasticGradientDescent Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent__ctor.htm" title="StochasticGradientDescent Constructor " tocid="M_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent__ctor">StochasticGradientDescent Constructor </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Properties_T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent.htm" title="StochasticGradientDescent Properties" tocid="Properties_T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent">StochasticGradientDescent Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent.htm" title="StochasticGradientDescent Methods" tocid="Methods_T_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent">StochasticGradientDescent Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>StochasticGradientDescent Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Stochastic Gradient Descent (SGD) for training linear support vector machines.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTC9D6EF60_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">Accord.MachineLearning<span id="LSTC9D6EF60_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BinaryLearningBase</a><span id="LSTC9D6EF60_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a>, <span id="LSTC9D6EF60_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_3?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTC9D6EF60_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_4?cpp=&gt;|vb=()|nu=[]");</script><span id="LSTC9D6EF60_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />    <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LSTC9D6EF60_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseStochasticGradientDescent</a><span id="LSTC9D6EF60_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">SupportVectorMachine</a>, <a href="T_Accord_Statistics_Kernels_Linear.htm">Linear</a>, <span id="LSTC9D6EF60_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_8?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTC9D6EF60_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_9?cpp=&gt;|vb=()|nu=[]");</script>, <a href="T_Accord_Math_Optimization_Losses_LogisticLoss.htm">LogisticLoss</a><span id="LSTC9D6EF60_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />      <span class="selflink">Accord.MachineLearning.VectorMachines.Learning<span id="LSTC9D6EF60_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_11?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>StochasticGradientDescent</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.7.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">StochasticGradientDescent</span> : <span class="identifier">BaseStochasticGradientDescent</span>&lt;<span class="identifier">SupportVectorMachine</span>, <span class="identifier">Linear</span>, <span class="identifier">double</span>[], <span class="identifier">LogisticLoss</span>&gt;</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">StochasticGradientDescent</span>
	<span class="keyword">Inherits</span> <span class="identifier">BaseStochasticGradientDescent</span>(<span class="keyword">Of</span> <span class="identifier">SupportVectorMachine</span>, <span class="identifier">Linear</span>, <span class="identifier">Double</span>(), <span class="identifier">LogisticLoss</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/VectorMachines/Learning/StochasticGradientDescent.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">StochasticGradientDescent</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent__ctor.htm">StochasticGradientDescent</a></td><td><div class="summary">Initializes a new instance of the <span class="selflink">StochasticGradientDescent</span> class</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Iterations.htm">Iterations</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Please use MaxIterations instead.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_12?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_13?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Kernel.htm">Kernel</a></td><td><div class="summary">
              Gets or sets the kernel function use to create a 
              kernel Support Vector Machine.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_14?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_15?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Lambda.htm">Lambda</a></td><td><div class="summary">
              Gets or sets the lambda regularization term. Default is 0.5.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_16?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_17?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_LearningRate.htm">LearningRate</a></td><td><div class="summary">
              Gets or sets the learning rate for the SGD algorithm.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_18?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_19?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Loss.htm">Loss</a></td><td><div class="summary">
              Gets or sets the loss function to be used. 
              Default is to use the <a href="T_Accord_Math_Optimization_Losses_LogisticLoss.htm">LogisticLoss</a>.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_20?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_21?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_MaxIterations.htm">MaxIterations</a></td><td><div class="summary">
              Gets or sets the number of iterations that should be
              performed by the algorithm when calling <a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Learn.htm">Learn(<span id="LSTC9D6EF60_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_22?cpp=array&lt;");</script>TInput<span id="LSTC9D6EF60_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_23?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_24?cpp=array&lt;");</script>Boolean<span id="LSTC9D6EF60_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_25?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_26?cpp=array&lt;");</script>Double<span id="LSTC9D6EF60_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.
              Default is 0 (iterate until convergence).
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_28?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_29?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Model.htm">Model</a></td><td><div class="summary">
              Gets or sets the classifier being learned.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC9D6EF60_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_30?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC9D6EF60_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_31?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_BinaryLearningBase_2_Token.htm">Token</a></td><td><div class="summary">
              Gets or sets a cancellation token that can be used to
              stop the learning algorithm while it is running.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC9D6EF60_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_32?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC9D6EF60_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_33?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Gets or sets the maximum relative change in the watched value
              after an iteration of the algorithm used to detect convergence.
              Default is 1e-5.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_34?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_35?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Clone.htm">Clone</a></td><td><div class="summary">
            Creates a new object that is a copy of the current instance.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_36?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_37?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent_Create.htm">Create</a></td><td><div class="summary">
            Creates an instance of the model to be learned. Inheritors
            of this abstract class must define this method so new models
            can be created from the training data.
            </div> (Overrides <a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Create.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_38?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_39?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTC9D6EF60_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_40?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Create(Int32, TKernel)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_StochasticGradientDescent_InnerClone.htm">InnerClone</a></td><td><div class="summary">
            Inheritors should implement this function to produce a new instance
            with the same characteristics of the current object.
            </div> (Overrides <a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_InnerClone.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_41?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_42?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTC9D6EF60_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_43?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>InnerClone<span id="LSTC9D6EF60_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_44?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_1.htm">Learn(<span id="LSTC9D6EF60_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_45?cpp=array&lt;");</script>TInput<span id="LSTC9D6EF60_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_46?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_47?cpp=array&lt;");</script><span id="LSTC9D6EF60_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_48?cpp=array&lt;");</script>Boolean<span id="LSTC9D6EF60_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_49?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC9D6EF60_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_50?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_51?cpp=array&lt;");</script>Double<span id="LSTC9D6EF60_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_52?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC9D6EF60_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_53?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC9D6EF60_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_54?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_2.htm">Learn(<span id="LSTC9D6EF60_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_55?cpp=array&lt;");</script>TInput<span id="LSTC9D6EF60_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_56?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_57?cpp=array&lt;");</script>Double<span id="LSTC9D6EF60_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_58?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_59?cpp=array&lt;");</script>Double<span id="LSTC9D6EF60_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_60?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC9D6EF60_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_61?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC9D6EF60_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_62?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_3.htm">Learn(<span id="LSTC9D6EF60_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_63?cpp=array&lt;");</script>TInput<span id="LSTC9D6EF60_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_64?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_65?cpp=array&lt;");</script>Int32<span id="LSTC9D6EF60_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_66?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_67?cpp=array&lt;");</script>Double<span id="LSTC9D6EF60_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_68?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC9D6EF60_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_69?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC9D6EF60_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_70?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_BinaryLearningBase_2_Learn_4.htm">Learn(<span id="LSTC9D6EF60_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_71?cpp=array&lt;");</script>TInput<span id="LSTC9D6EF60_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_73?cpp=array&lt;");</script><span id="LSTC9D6EF60_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_74?cpp=array&lt;");</script>Int32<span id="LSTC9D6EF60_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_75?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC9D6EF60_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_76?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_77?cpp=array&lt;");</script>Double<span id="LSTC9D6EF60_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_78?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_BinaryLearningBase_2.htm">BinaryLearningBase<span id="LSTC9D6EF60_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_79?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TInput<span id="LSTC9D6EF60_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_80?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4_Learn.htm">Learn(<span id="LSTC9D6EF60_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_81?cpp=array&lt;");</script>TInput<span id="LSTC9D6EF60_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_82?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_83?cpp=array&lt;");</script>Boolean<span id="LSTC9D6EF60_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_84?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC9D6EF60_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_85?cpp=array&lt;");</script>Double<span id="LSTC9D6EF60_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_86?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseStochasticGradientDescent_4.htm">BaseStochasticGradientDescent<span id="LSTC9D6EF60_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_87?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel, TKernel, TInput, TLoss<span id="LSTC9D6EF60_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_88?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTC9D6EF60_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_89?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTC9D6EF60_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC9D6EF60_90?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// In this example, we will learn a multi-class SVM using the one-vs-one (OvO)</span>
<span class="highlight-comment">// approach. The OvO approacbh can decompose decision problems involving multiple </span>
<span class="highlight-comment">// classes into a series of binary ones, which can then be solved using SVMs.</span>

<span class="highlight-comment">// Ensure we have reproducible results</span>
Accord.Math.Random.Generator.Seed = <span class="highlight-number">0</span>;

<span class="highlight-comment">// We will try to learn a classifier</span>
<span class="highlight-comment">// for the Fisher Iris Flower dataset</span>
<span class="highlight-keyword">var</span> iris = <span class="highlight-keyword">new</span> Iris();
<span class="highlight-keyword">double</span>[][] inputs = iris.Instances; <span class="highlight-comment">// get the flower characteristics</span>
<span class="highlight-keyword">int</span>[] outputs = iris.ClassLabels;   <span class="highlight-comment">// get the expected flower classes</span>

<span class="highlight-comment">// We will use mini-batches of size 32 to learn a SVM using SGD</span>
<span class="highlight-keyword">var</span> batches = MiniBatches.Create(batchSize: <span class="highlight-number">32</span>, maxIterations: <span class="highlight-number">1000</span>,
   shuffle: ShuffleMethod.EveryEpoch, input: inputs, output: outputs);

<span class="highlight-comment">// Now, we can create a multi-class teaching algorithm for the SVMs</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Linear, <span class="highlight-keyword">double</span>[]&gt;
{
    <span class="highlight-comment">// We will use SGD to learn each of the binary problems in the multi-class problem</span>
    Learner = (p) =&gt; <span class="highlight-keyword">new</span> StochasticGradientDescent&lt;Linear, <span class="highlight-keyword">double</span>[], LogisticLoss&gt;()
    {
        LearningRate = <span class="highlight-number">1</span>e<span class="highlight-number">-3</span>, 
        MaxIterations = <span class="highlight-number">1</span> <span class="highlight-comment">// so the gradient is only updated once after each mini-batch</span>
    }
};

<span class="highlight-comment">// The following line is only needed to ensure reproducible results. Please remove it to enable full parallelization</span>
teacher.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>; <span class="highlight-comment">// (Remove, comment, or change this line to enable full parallelism)</span>

<span class="highlight-comment">// Now, we can start training the model on mini-batches:</span>
<span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> batch <span class="highlight-keyword">in</span> batches)
{
    teacher.Learn(batch.Inputs, batch.Outputs);
}

<span class="highlight-comment">// Get the final model:</span>
<span class="highlight-keyword">var</span> svm = teacher.Model;

<span class="highlight-comment">// Now, we should be able to use the model to predict </span>
<span class="highlight-comment">// the classes of all flowers in Fisher's Iris dataset:</span>
<span class="highlight-keyword">int</span>[] prediction = svm.Decide(inputs);

<span class="highlight-comment">// And from those predictions, we can compute the model accuracy:</span>
<span class="highlight-keyword">var</span> cm = <span class="highlight-keyword">new</span> GeneralConfusionMatrix(expected: outputs, predicted: prediction);
<span class="highlight-keyword">double</span> accuracy = cm.Accuracy; <span class="highlight-comment">// should be approximately 0.973</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// In this example, we will learn a multi-class SVM using the one-vs-rest (OvR)</span>
<span class="highlight-comment">// approach. The OvR approacbh can decompose decision problems involving multiple </span>
<span class="highlight-comment">// classes into a series of binary ones, which can then be solved using SVMs.</span>

<span class="highlight-comment">// Ensure we have reproducible results</span>
Accord.Math.Random.Generator.Seed = <span class="highlight-number">0</span>;

<span class="highlight-comment">// We will try to learn a classifier</span>
<span class="highlight-comment">// for the Fisher Iris Flower dataset</span>
<span class="highlight-keyword">var</span> iris = <span class="highlight-keyword">new</span> Iris();
<span class="highlight-keyword">double</span>[][] inputs = iris.Instances; <span class="highlight-comment">// get the flower characteristics</span>
<span class="highlight-keyword">int</span>[] outputs = iris.ClassLabels;   <span class="highlight-comment">// get the expected flower classes</span>

<span class="highlight-comment">// We will use mini-batches of size 32 to learn a SVM using SGD</span>
<span class="highlight-keyword">var</span> batches = MiniBatches.Create(batchSize: <span class="highlight-number">32</span>, maxIterations: <span class="highlight-number">1000</span>,
   shuffle: ShuffleMethod.EveryEpoch, input: inputs, output: outputs);

<span class="highlight-comment">// Now, we can create a multi-label teaching algorithm for the SVMs</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MultilabelSupportVectorLearning&lt;Linear, <span class="highlight-keyword">double</span>[]&gt;
{
    <span class="highlight-comment">// We will use SGD to learn each of the binary problems in the multi-class problem</span>
    Learner = (p) =&gt; <span class="highlight-keyword">new</span> StochasticGradientDescent&lt;Linear, <span class="highlight-keyword">double</span>[], LogisticLoss&gt;()
    {
        LearningRate = <span class="highlight-number">1</span>e<span class="highlight-number">-3</span>,
        MaxIterations = <span class="highlight-number">1</span> <span class="highlight-comment">// so the gradient is only updated once after each mini-batch</span>
    }
};

<span class="highlight-comment">// The following line is only needed to ensure reproducible results. Please remove it to enable full parallelization</span>
teacher.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>; <span class="highlight-comment">// (Remove, comment, or change this line to enable full parallelism)</span>

<span class="highlight-comment">// Now, we can start training the model on mini-batches:</span>
<span class="highlight-keyword">foreach</span> (<span class="highlight-keyword">var</span> batch <span class="highlight-keyword">in</span> batches)
{
    teacher.Learn(batch.Inputs, batch.Outputs);
}

<span class="highlight-comment">// Get the final model:</span>
<span class="highlight-keyword">var</span> svm = teacher.Model;

<span class="highlight-comment">// Now, we should be able to use the model to predict </span>
<span class="highlight-comment">// the classes of all flowers in Fisher's Iris dataset:</span>
<span class="highlight-keyword">int</span>[] prediction = svm.ToMulticlass().Decide(inputs);

<span class="highlight-comment">// And from those predictions, we can compute the model accuracy:</span>
<span class="highlight-keyword">var</span> cm = <span class="highlight-keyword">new</span> GeneralConfusionMatrix(expected: outputs, predicted: prediction);
<span class="highlight-keyword">double</span> accuracy = cm.Accuracy; <span class="highlight-comment">// should be approximately 0.913</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>