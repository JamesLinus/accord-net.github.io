<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>LogisticRegressionAnalysis Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="LogisticRegressionAnalysis class" />
    <meta name="System.Keywords" content="Accord.Statistics.Analysis.LogisticRegressionAnalysis class" />
    <meta name="System.Keywords" content="LogisticRegressionAnalysis class, about LogisticRegressionAnalysis class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Analysis.LogisticRegressionAnalysis" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Analysis.LogisticRegressionAnalysis" />
    <meta name="Description" content="Logistic Regression Analysis." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Statistics.Analysis" />
    <meta name="file" content="T_Accord_Statistics_Analysis_LogisticRegressionAnalysis" />
    <meta name="guid" content="T_Accord_Statistics_Analysis_LogisticRegressionAnalysis" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_Statistics_Analysis.htm" title="Accord.Statistics.Analysis" tocid="N_Accord_Statistics_Analysis">Accord.Statistics.Analysis</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_Statistics_Analysis_LogisticRegressionAnalysis.htm" title="LogisticRegressionAnalysis Class" tocid="T_Accord_Statistics_Analysis_LogisticRegressionAnalysis">LogisticRegressionAnalysis Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Statistics_Analysis_LogisticRegressionAnalysis__ctor.htm" title="LogisticRegressionAnalysis Constructor " tocid="Overload_Accord_Statistics_Analysis_LogisticRegressionAnalysis__ctor">LogisticRegressionAnalysis Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_Statistics_Analysis_LogisticRegressionAnalysis.htm" title="LogisticRegressionAnalysis Properties" tocid="Properties_T_Accord_Statistics_Analysis_LogisticRegressionAnalysis">LogisticRegressionAnalysis Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_Statistics_Analysis_LogisticRegressionAnalysis.htm" title="LogisticRegressionAnalysis Methods" tocid="Methods_T_Accord_Statistics_Analysis_LogisticRegressionAnalysis">LogisticRegressionAnalysis Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>LogisticRegressionAnalysis Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
               Logistic Regression Analysis.
             </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTB0BC03C9_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_TransformBase_2.htm">Accord.MachineLearning<span id="LSTB0BC03C9_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TransformBase</a><span id="LSTB0BC03C9_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LSTB0BC03C9_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_3?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTB0BC03C9_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_4?cpp=&gt;|vb=()|nu=[]");</script>, <span class="nolink">Double</span><span id="LSTB0BC03C9_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />    <span class="selflink">Accord.Statistics.Analysis<span id="LSTB0BC03C9_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LogisticRegressionAnalysis</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_Statistics_Analysis.htm">Accord.Statistics.Analysis</a><br />
    <strong>Assembly:</strong>
   Accord.Statistics (in Accord.Statistics.dll) Version: 3.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">LogisticRegressionAnalysis</span> : <span class="identifier">TransformBase</span>&lt;<span class="identifier">double</span>[], <span class="identifier">double</span>&gt;, 
	<span class="identifier">IRegressionAnalysis</span>, <span class="identifier">IMultivariateAnalysis</span>, <span class="identifier">IAnalysis</span>, <span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">LogisticRegression</span>, <span class="identifier">double</span>[], <span class="identifier">int</span>&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">LogisticRegression</span>, <span class="identifier">double</span>[], <span class="identifier">double</span>&gt;</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">LogisticRegressionAnalysis</span>
	<span class="keyword">Inherits</span> <span class="identifier">TransformBase</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>(), <span class="identifier">Double</span>)
	<span class="keyword">Implements</span> <span class="identifier">IRegressionAnalysis</span>, <span class="identifier">IMultivariateAnalysis</span>, <span class="identifier">IAnalysis</span>, <span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">LogisticRegression</span>, <span class="identifier">Double</span>(), <span class="identifier">Integer</span>), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">LogisticRegression</span>, <span class="identifier">Double</span>(), <span class="identifier">Double</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.Statistics/Analysis/LogisticRegressionAnalysis.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">LogisticRegressionAnalysis</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis__ctor.htm">LogisticRegressionAnalysis<span id="LSTB0BC03C9_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_7?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
              Constructs a Logistic Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis__ctor_1.htm">LogisticRegressionAnalysis(<span id="LSTB0BC03C9_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_8?cpp=array&lt;");</script><span id="LSTB0BC03C9_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_9?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_10?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB0BC03C9_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_11?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_12?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Logistic Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis__ctor_2.htm">LogisticRegressionAnalysis(<span id="LSTB0BC03C9_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_14?cpp=array&lt;");</script><span id="LSTB0BC03C9_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_15?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_16?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB0BC03C9_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_17?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_18?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_19?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_20?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_21?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Logistic Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis__ctor_4.htm">LogisticRegressionAnalysis(<span id="LSTB0BC03C9_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_22?cpp=array&lt;");</script><span id="LSTB0BC03C9_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_23?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_24?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB0BC03C9_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_25?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_26?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_27?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_28?cpp=array&lt;");</script>String<span id="LSTB0BC03C9_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, String)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Logistic Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis__ctor_3.htm">LogisticRegressionAnalysis(<span id="LSTB0BC03C9_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_30?cpp=array&lt;");</script><span id="LSTB0BC03C9_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_31?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_32?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB0BC03C9_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_33?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_34?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_36?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_37?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_38?cpp=array&lt;");</script>String<span id="LSTB0BC03C9_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_39?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, String)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Constructs a Logistic Regression Analysis.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Array.htm">Array</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the source matrix from which the analysis was run.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_ChiSquare.htm">ChiSquare</a></td><td><div class="summary">
              Gets the Chi-Square (Likelihood Ratio) Test for the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Coefficients.htm">Coefficients</a></td><td><div class="summary">
              Gets the collection of coefficients of the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_CoefficientValues.htm">CoefficientValues</a></td><td><div class="summary">
              Gets the value of each coefficient.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_ComputeInnerModels.htm">ComputeInnerModels</a></td><td><div class="summary">
              Gets or sets whether nested models should be computed in
              order to calculate the likelihood-ratio test of each of
              the coefficients. Default is false.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Confidences.htm">Confidences</a></td><td><div class="summary">
              Gets the 95% Confidence Intervals (C.I.)
              for each coefficient found in the regression.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Deviance.htm">Deviance</a></td><td><div class="summary">
              Gets the Deviance of the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_InformationMatrix.htm">InformationMatrix</a></td><td><div class="summary">
            Gets the information matrix obtained during learning.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Inputs.htm">Inputs</a></td><td><div class="summary">
              Gets or sets the name of the input variables for the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Iterations.htm">Iterations</a></td><td><div class="summary">
              Gets or sets the maximum number of iterations to be
              performed by the regression algorithm. Default is 50.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_LikelihoodRatioTests.htm">LikelihoodRatioTests</a></td><td><div class="summary">
              Gets the Likelihood-Ratio Tests for each coefficient.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_LogLikelihood.htm">LogLikelihood</a></td><td><div class="summary">
              Gets the Log-Likelihood for the model.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_TransformBase_2_NumberOfInputs.htm">NumberOfInputs</a></td><td><div class="summary">
              Gets the number of inputs accepted by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTB0BC03C9_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_40?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTB0BC03C9_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_41?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_TransformBase_2_NumberOfOutputs.htm">NumberOfOutputs</a></td><td><div class="summary">
              Gets the number of outputs generated by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTB0BC03C9_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_42?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTB0BC03C9_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_43?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_NumberOfSamples.htm">NumberOfSamples</a></td><td><div class="summary">
            Gets the number of samples used to compute the analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_OddsRatios.htm">OddsRatios</a></td><td><div class="summary">
              Gets the Odds Ratio for each coefficient
              found during the logistic regression.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Output.htm">Output</a></td><td><div class="summary">
              Gets or sets the name of the output variable for the model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Outputs.htm">Outputs</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the dependent variable value
              for each of the source input points.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Regression.htm">Regression</a></td><td><div class="summary">
              Gets the Logistic Regression model created
              and evaluated by this analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Regularization.htm">Regularization</a></td><td><div class="summary">
              Gets or sets the regularization value to be
              added in the objective function. Default is
              1e-10.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Result.htm">Result</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the resulting probabilities obtained
              by the logistic regression model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Source.htm">Source</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the source matrix from which the analysis was run.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_StandardErrors.htm">StandardErrors</a></td><td><div class="summary">
              Gets the Standard Error for each coefficient
              found during the logistic regression.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Token.htm">Token</a></td><td><div class="summary">
            Gets or sets a cancellation token that can be used to
            stop the learning algorithm while it is running.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Gets or sets the difference between two iterations of the regression 
              algorithm when the algorithm should stop. The difference is calculated
              based on the largest absolute parameter change of the regression. Default
              is 1e-5.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_WaldTests.htm">WaldTests</a></td><td><div class="summary">
              Gets the Wald Tests for each coefficient.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Weights.htm">Weights</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the sample weight associated with each input vector.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Compute.htm">Compute<span id="LSTB0BC03C9_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_44?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the Logistic Regression Analysis.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Compute_1.htm">Compute(LogisticRegression)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the Logistic Regression Analysis for an already computed regression.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Compute_2.htm">Compute(Double, Int32)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the Logistic Regression Analysis.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_FromSummary.htm">FromSummary</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Creates a new <span class="selflink">LogisticRegressionAnalysis</span> from summarized data.
              In summary data, instead of having a set of inputs and their associated outputs,
              we have the number of times an input vector had a positive label in the data set
              and how many times it had a negative label.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_GetConfidenceInterval.htm">GetConfidenceInterval</a></td><td><div class="summary">
            Gets the confidence interval for a given input.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_GetLikelihoodRatio.htm">GetLikelihoodRatio</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets the Log-Likelihood Ratio between this model and another model.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_GetPredictionInterval.htm">GetPredictionInterval</a></td><td><div class="summary">
            Gets the prediction interval for a given input.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Learn.htm">Learn(<span id="LSTB0BC03C9_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_45?cpp=array&lt;");</script><span id="LSTB0BC03C9_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_46?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_47?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB0BC03C9_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_48?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_49?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_50?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_51?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_52?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Learn_1.htm">Learn(<span id="LSTB0BC03C9_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_53?cpp=array&lt;");</script><span id="LSTB0BC03C9_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_54?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_55?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB0BC03C9_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_56?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_57?cpp=array&lt;");</script>Int32<span id="LSTB0BC03C9_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_58?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_59?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_60?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Learn_2.htm">Learn(<span id="LSTB0BC03C9_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_61?cpp=array&lt;");</script><span id="LSTB0BC03C9_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_62?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_63?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTB0BC03C9_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_64?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_65?cpp=array&lt;");</script>Int32<span id="LSTB0BC03C9_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_66?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_67?cpp=array&lt;");</script>Int32<span id="LSTB0BC03C9_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_68?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_TransformBase_2_Transform_1.htm">Transform(<span id="LSTB0BC03C9_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_69?cpp=array&lt;");</script>TInput<span id="LSTB0BC03C9_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_70?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Applies the transformation to a set of input vectors,
              producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTB0BC03C9_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_71?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTB0BC03C9_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_72?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Transform.htm">Transform(<span id="LSTB0BC03C9_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_73?cpp=array&lt;");</script>Double<span id="LSTB0BC03C9_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_74?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to an input, producing an associated output.
            </div> (Overrides <a href="M_Accord_MachineLearning_TransformBase_2_Transform.htm">TransformBase<span id="LSTB0BC03C9_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_75?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTB0BC03C9_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_76?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTB0BC03C9_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_77?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Transform(TInput)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_TransformBase_2_Transform_2.htm">Transform(<span id="LSTB0BC03C9_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_78?cpp=array&lt;");</script>TInput<span id="LSTB0BC03C9_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_79?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTB0BC03C9_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_80?cpp=array&lt;");</script>TOutput<span id="LSTB0BC03C9_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_81?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Applies the transformation to an input, producing an associated output.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTB0BC03C9_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_82?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTB0BC03C9_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_83?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">
                Compares two objects for equality, performing an elementwise 
                comparison if the elements are vectors or matrices.
            </div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To.htm">To(Type)</a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTB0BC03C9_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_84?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTB0BC03C9_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_85?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTB0BC03C9_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_86?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
               The Logistic Regression Analysis tries to extract useful
               information about a logistic regression model. </p><p>
               This class can also be bound to standard controls such as the 
               <a href="http://msdn.microsoft.com/en-us/library/system.windows.forms.datagridview.aspx">DataGridView</a>
               by setting their DataSource property to the analysis' <a href="P_Accord_Statistics_Analysis_LogisticRegressionAnalysis_Coefficients.htm">Coefficients</a> property.</p><p>
               References:
               <ul><li>
                   E. F. Connor. Logistic Regression. Available on:
                   http://userwww.sfsu.edu/~efc/classes/biol710/logistic/logisticreg.htm </li><li>
                   C. Shalizi. Logistic Regression and Newton's Method. Lecture notes. Available on:
                   http://www.stat.cmu.edu/~cshalizi/350/lectures/26/lecture-26.pdf </li><li>
                   A. Storkey. Learning from Data: Learning Logistic Regressors. Available on:
                   http://www.inf.ed.ac.uk/teaching/courses/lfd/lectures/logisticlearn-print.pdf </li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><p>
               The following example shows to create a Logistic regresion analysis using a full
               dataset composed of input vectors and a binary output vector. Each input vector
               has an associated label (1 or 0) in the output vector, where 1 represents a positive
               label (yes, or true) and 0 represents a negative label (no, or false).</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAHBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAHBBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAHBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// We can also investigate all parameters individually. For</span>
<span class="highlight-comment">// example the coefficients values will be available at the</span>
<span class="highlight-comment">// vector</span>

<span class="highlight-keyword">double</span>[] coef = lra.CoefficientValues;

<span class="highlight-comment">// The first value refers to the model's intercept term. We</span>
<span class="highlight-comment">// can also retrieve the odds ratios and standard errors:</span>

<span class="highlight-keyword">double</span>[] odds = lra.OddsRatios;
<span class="highlight-keyword">double</span>[] stde = lra.StandardErrors;

<span class="highlight-comment">// We can use the analysis to predict a probability for a new patient:</span>
<span class="highlight-keyword">double</span> y = lra.Regression.Probability(<span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">87</span>, <span class="highlight-number">1</span> }); <span class="highlight-comment">// 0.75</span>

<span class="highlight-comment">// For those inputs, the answer probability is approximately 75%.</span>

<span class="highlight-comment">// We can also obtain confidence intervals for the probability:</span>
DoubleRange ci = lra.GetConfidenceInterval(<span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">87</span>, <span class="highlight-number">1</span> });</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAHBBA");</script><p>
               The resulting table is shown below.</p><img src="..\images\logistic-regression.png" /><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEBBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose we have the following data about some patients.</span>
<span class="highlight-comment">// The first variable is continuous and represent patient</span>
<span class="highlight-comment">// age. The second variable is dichotomic and give whether</span>
<span class="highlight-comment">// they smoke or not (this is completely fictional data).</span>

<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">//            Age  Smoking</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">55</span>,    <span class="highlight-number">0</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">28</span>,    <span class="highlight-number">0</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">65</span>,    <span class="highlight-number">1</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">46</span>,    <span class="highlight-number">0</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">86</span>,    <span class="highlight-number">1</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">56</span>,    <span class="highlight-number">1</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">85</span>,    <span class="highlight-number">0</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">33</span>,    <span class="highlight-number">0</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">21</span>,    <span class="highlight-number">1</span>   },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">42</span>,    <span class="highlight-number">1</span>   },
};

<span class="highlight-comment">// Additionally, we also have information about whether</span>
<span class="highlight-comment">// or not they those patients had lung cancer. The array</span>
<span class="highlight-comment">// below gives 0 for those who did not, and 1 for those</span>
<span class="highlight-comment">// who did.</span>

<span class="highlight-keyword">double</span>[] output =
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>
};

<span class="highlight-comment">// Create a Logistic Regression analysis</span>
<span class="highlight-keyword">var</span> lra = <span class="highlight-keyword">new</span> LogisticRegressionAnalysis()
{
    Regularization = <span class="highlight-number">0</span>
};

<span class="highlight-comment">// compute the analysis</span>
LogisticRegression regression = lra.Learn(inputs, output);

<span class="highlight-comment">// Now we can show a summary of the analysis</span>
<span class="highlight-comment">// Accord.Controls.DataGridBox.Show(regression.Coefficients);</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEBBA");</script><p>
               The analysis can also be created from data given in a summary form. Instead of having
               one input vector associated with one positive or negative label, each input vector is
               associated with the proportion of positive to negative labels in the original dataset.
             </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACBBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose we have a (fictitious) data set about patients who </span>
<span class="highlight-comment">// underwent cardiac surgery. The first column gives the number</span>
<span class="highlight-comment">// of arterial bypasses performed during the surgery. The second</span>
<span class="highlight-comment">// column gives the number of patients whose surgery went well,</span>
<span class="highlight-comment">// while the third column gives the number of patients who had</span>
<span class="highlight-comment">// at least one complication during the surgery.</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">int</span>[,] data =
{
    <span class="highlight-comment">// # of stents       success     complications</span>
    {       <span class="highlight-number">1</span>,             <span class="highlight-number">140</span>,           <span class="highlight-number">45</span>       },
    {       <span class="highlight-number">2</span>,             <span class="highlight-number">130</span>,           <span class="highlight-number">60</span>       },
    {       <span class="highlight-number">3</span>,             <span class="highlight-number">150</span>,           <span class="highlight-number">31</span>       },
    {       <span class="highlight-number">4</span>,              <span class="highlight-number">96</span>,           <span class="highlight-number">65</span>       }
};

<span class="highlight-comment">// Get input variable and number of positives and negatives</span>
<span class="highlight-keyword">double</span>[][] inputs = data.GetColumn(<span class="highlight-number">0</span>).ToDouble().ToJagged();
<span class="highlight-keyword">int</span>[] positive = data.GetColumn(<span class="highlight-number">1</span>);
<span class="highlight-keyword">int</span>[] negative = data.GetColumn(<span class="highlight-number">2</span>);

<span class="highlight-comment">// Create a new Logistic Regression Analysis from the summary data</span>
<span class="highlight-keyword">var</span> lra = <span class="highlight-keyword">new</span> LogisticRegressionAnalysis();

<span class="highlight-comment">// compute the analysis</span>
LogisticRegression regression = lra.Learn(inputs, positive, negative);

<span class="highlight-comment">// Now we can show a summary of the analysis</span>
<span class="highlight-comment">// Accord.Controls.DataGridBox.Show(regression.Coefficients);</span>


<span class="highlight-comment">// We can also investigate all parameters individually. For</span>
<span class="highlight-comment">// example the coefficients values will be available at the</span>
<span class="highlight-comment">// vector</span>

<span class="highlight-keyword">double</span>[] coef = lra.CoefficientValues;

<span class="highlight-comment">// The first value refers to the model's intercept term. We</span>
<span class="highlight-comment">// can also retrieve the odds ratios and standard errors:</span>

<span class="highlight-keyword">double</span>[] odds = lra.OddsRatios;
<span class="highlight-keyword">double</span>[] stde = lra.StandardErrors;


<span class="highlight-comment">// Finally, we can use it to estimate risk for a new patient</span>
<span class="highlight-keyword">double</span> y = lra.Regression.Probability(<span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">4</span> }); <span class="highlight-comment">// 67.0</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACBBA");</script><p>
               The last example shows how to learn a logistic regression analysis using data 
               given in the form of a System.Data.DataTable. This data is also heterogeneous, mixing 
               both discrete (symbol) variables and continuous variables. This example is also available
               for <a href="T_Accord_Statistics_Analysis_MultipleLinearRegressionAnalysis.htm">MultipleLinearRegressionAnalysis</a>.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Note: this example uses a System.Data.DataTable to represent input data,</span>
<span class="highlight-comment">// but note that this is not required. The data could have been represented</span>
<span class="highlight-comment">// as jagged double matrices (double[][]) directly.</span>

<span class="highlight-comment">// If you have to handle heterogeneus data in your application, such as user records</span>
<span class="highlight-comment">// in a database, this data is best represented within the framework using a .NET's </span>
<span class="highlight-comment">// DataTable object. In order to try to learn a classification or regression model</span>
<span class="highlight-comment">// using this datatable, first we will need to convert the table into a representation</span>
<span class="highlight-comment">// that the machine learning model can understand. Such representation is quite often,</span>
<span class="highlight-comment">// a matrix of doubles (double[][]).</span>
<span class="highlight-keyword">var</span> data = <span class="highlight-keyword">new</span> DataTable(<span class="highlight-literal">"Customer Revenue Example"</span>);

data.Columns.Add(<span class="highlight-literal">"Day"</span>, <span class="highlight-literal">"CustomerId"</span>, <span class="highlight-literal">"Time (hour)"</span>, <span class="highlight-literal">"Weather"</span>, <span class="highlight-literal">"Buy"</span>);
data.Rows.Add(<span class="highlight-literal">"D1"</span>, <span class="highlight-number">0</span>, <span class="highlight-number">8</span>, <span class="highlight-literal">"Sunny"</span>, <span class="highlight-keyword">true</span>);
data.Rows.Add(<span class="highlight-literal">"D2"</span>, <span class="highlight-number">1</span>, <span class="highlight-number">10</span>, <span class="highlight-literal">"Sunny"</span>, <span class="highlight-keyword">true</span>);
data.Rows.Add(<span class="highlight-literal">"D3"</span>, <span class="highlight-number">2</span>, <span class="highlight-number">10</span>, <span class="highlight-literal">"Rain"</span>, <span class="highlight-keyword">false</span>);
data.Rows.Add(<span class="highlight-literal">"D4"</span>, <span class="highlight-number">3</span>, <span class="highlight-number">16</span>, <span class="highlight-literal">"Rain"</span>, <span class="highlight-keyword">true</span>);
data.Rows.Add(<span class="highlight-literal">"D5"</span>, <span class="highlight-number">4</span>, <span class="highlight-number">15</span>, <span class="highlight-literal">"Rain"</span>, <span class="highlight-keyword">true</span>);
data.Rows.Add(<span class="highlight-literal">"D6"</span>, <span class="highlight-number">5</span>, <span class="highlight-number">20</span>, <span class="highlight-literal">"Rain"</span>, <span class="highlight-keyword">false</span>);
data.Rows.Add(<span class="highlight-literal">"D7"</span>, <span class="highlight-number">6</span>, <span class="highlight-number">12</span>, <span class="highlight-literal">"Cloudy"</span>, <span class="highlight-keyword">true</span>);
data.Rows.Add(<span class="highlight-literal">"D8"</span>, <span class="highlight-number">7</span>, <span class="highlight-number">12</span>, <span class="highlight-literal">"Sunny"</span>, <span class="highlight-keyword">false</span>);

<span class="highlight-comment">// One way to perform this conversion is by using a Codification filter. The Codification</span>
<span class="highlight-comment">// filter can take care of converting variables that actually denote symbols (i.e. the </span>
<span class="highlight-comment">// weather in the example above) into representations that make more sense given the assumption</span>
<span class="highlight-comment">// of a real vector-based classifier.</span>

<span class="highlight-comment">// Create a codification codebook</span>
<span class="highlight-keyword">var</span> codebook = <span class="highlight-keyword">new</span> Codification()
{
    { <span class="highlight-literal">"Weather"</span>, CodificationVariable.Categorical },
    { <span class="highlight-literal">"Time (hour)"</span>, CodificationVariable.Continuous },
    { <span class="highlight-literal">"Revenue"</span>, CodificationVariable.Continuous },
};

<span class="highlight-comment">// Learn from the data</span>
codebook.Learn(data);

<span class="highlight-comment">// Now, we will use the codebook to transform the DataTable into double[][] vectors. Due</span>
<span class="highlight-comment">// the way the conversion works, we can end up with more columns in your output vectors</span>
<span class="highlight-comment">// than the ones started with. If you would like more details about what those columns</span>
<span class="highlight-comment">// represent, you can pass then as 'out' parameters in the methods that follow below.</span>
<span class="highlight-keyword">string</span>[] inputNames;  <span class="highlight-comment">// (note: if you do not want to run this example yourself, you </span>
<span class="highlight-keyword">string</span> outputName;    <span class="highlight-comment">// can see below the new variable names that will be generated)</span>

<span class="highlight-comment">// Now, we can translate our training data into integer symbols using our codebook:</span>
<span class="highlight-keyword">double</span>[][] inputs = codebook.Apply(data, <span class="highlight-literal">"Weather"</span>, <span class="highlight-literal">"Time (hour)"</span>).ToJagged(<span class="highlight-keyword">out</span> inputNames);
<span class="highlight-keyword">double</span>[] outputs = codebook.Apply(data, <span class="highlight-literal">"Buy"</span>).ToVector(<span class="highlight-keyword">out</span> outputName);
<span class="highlight-comment">// (note: the Apply method transform a DataTable into another DataTable containing the codified </span>
<span class="highlight-comment">//  variables. The ToJagged and ToVector methods are then used to transform those tables into</span>
<span class="highlight-comment">//  double[][] matrices and double[] vectors, respectively.</span>

<span class="highlight-comment">// If we would like to learn a logistic regression model for this data, there are two possible</span>
<span class="highlight-comment">// ways depending on which aspect of the logistic regression we are interested the most. If we</span>
<span class="highlight-comment">// are interested in interpreting the logistic regression, performing hypothesis tests with the</span>
<span class="highlight-comment">// coefficients and performing an actual _logistic regression analysis_, then we can use the</span>
<span class="highlight-comment">// LogisticRegressionAnalysis class for this. If however we are only interested in using</span>
<span class="highlight-comment">// the learned model directly to predict new values for the dataset, then we could be using the</span>
<span class="highlight-comment">// LogisticRegression and IterativeReweightedLeastSquares classes directly instead. </span>

<span class="highlight-comment">// This example deals with the former case. For the later, please see the documentation page</span>
<span class="highlight-comment">// for the LogisticRegression class.</span>

<span class="highlight-comment">// We can create a new multiple linear analysis for the variables</span>
<span class="highlight-keyword">var</span> lra = <span class="highlight-keyword">new</span> LogisticRegressionAnalysis()
{
    <span class="highlight-comment">// We can also inform the names of the new variables that have been created by the</span>
    <span class="highlight-comment">// codification filter. Those can help in the visualizing the analysis once it is </span>
    <span class="highlight-comment">// data-bound to a visual control such a Windows.Forms.DataGridView or WPF DataGrid:</span>

    Inputs = inputNames, <span class="highlight-comment">// will be { "Weather: Sunny", "Weather: Rain, "Weather: Cloudy", "Time (hours)" }</span>
    Output = outputName  <span class="highlight-comment">// will be "Revenue"</span>
};

<span class="highlight-comment">// Compute the analysis and obtain the estimated regression</span>
LogisticRegression regression = lra.Learn(inputs, outputs);

<span class="highlight-comment">// And then predict the label using</span>
<span class="highlight-keyword">double</span> predicted = lra.Transform(inputs[<span class="highlight-number">0</span>]); <span class="highlight-comment">// result will be ~0.287</span>

<span class="highlight-comment">// Because we opted for doing a MultipleLinearRegressionAnalysis instead of a simple</span>
<span class="highlight-comment">// linear regression, we will have further information about the regression available:</span>
<span class="highlight-keyword">int</span> inputCount = lra.NumberOfInputs;   <span class="highlight-comment">// should be 4</span>
<span class="highlight-keyword">int</span> outputCount = lra.NumberOfOutputs; <span class="highlight-comment">// should be 1</span>
<span class="highlight-keyword">double</span> logl = lra.LogLikelihood;       <span class="highlight-comment">// should be -4.6035570737785525</span>
ChiSquareTest x2 = lra.ChiSquare;      <span class="highlight-comment">// should be 1.37789 (p=0.8480, non-significant)</span>
<span class="highlight-keyword">double</span>[] stdErr = lra.StandardErrors;  <span class="highlight-comment">// should be high except for the last value of 0.27122079214927985 (due small data)</span>
<span class="highlight-keyword">double</span>[] or = lra.OddsRatios;          <span class="highlight-comment">// should be 1.1116659950687609 for the last coefficient (related to time of day)</span>
LogisticCoefficientCollection c = lra.Coefficients; <span class="highlight-comment">// coefficient table (bind to a visual control for quick inspection)</span>
<span class="highlight-keyword">double</span>[][] h = lra.InformationMatrix;  <span class="highlight-comment">// should contain Fisher's information matrix for the problem</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Analysis.htm">Accord.Statistics.Analysis Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_Statistics_Analysis_MultipleLinearRegressionAnalysis.htm">Accord.Statistics.Analysis<span id="LSTB0BC03C9_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTB0BC03C9_87?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MultipleLinearRegressionAnalysis</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>