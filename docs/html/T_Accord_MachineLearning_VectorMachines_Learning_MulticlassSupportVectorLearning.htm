<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>MulticlassSupportVectorLearning Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="MulticlassSupportVectorLearning class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.VectorMachines.Learning.MulticlassSupportVectorLearning class" />
    <meta name="System.Keywords" content="MulticlassSupportVectorLearning class, about MulticlassSupportVectorLearning class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.VectorMachines.Learning.MulticlassSupportVectorLearning" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.VectorMachines.Learning.MulticlassSupportVectorLearning" />
    <meta name="Description" content="One-against-one Multi-class Support Vector Machine Learning Algorithm" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning.VectorMachines.Learning" />
    <meta name="file" content="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning" />
    <meta name="guid" content="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning_VectorMachines_Learning.htm" title="Accord.MachineLearning.VectorMachines.Learning" tocid="N_Accord_MachineLearning_VectorMachines_Learning">Accord.MachineLearning.VectorMachines.Learning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning.htm" title="MulticlassSupportVectorLearning Class" tocid="T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning">MulticlassSupportVectorLearning Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning__ctor.htm" title="MulticlassSupportVectorLearning Constructor " tocid="Overload_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning__ctor">MulticlassSupportVectorLearning Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning.htm" title="MulticlassSupportVectorLearning Properties" tocid="Properties_T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning">MulticlassSupportVectorLearning Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning.htm" title="MulticlassSupportVectorLearning Methods" tocid="Methods_T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning">MulticlassSupportVectorLearning Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="Events_T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning.htm" title="MulticlassSupportVectorLearning Events" tocid="Events_T_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning">MulticlassSupportVectorLearning Events</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>MulticlassSupportVectorLearning Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <p><strong>Note: This API is now obsolete.</strong></p><div class="summary">
              One-against-one Multi-class Support Vector Machine Learning Algorithm
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST5E0F42C5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">Accord.MachineLearning<span id="LST5E0F42C5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ParallelLearningBase</a><br />    <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">Accord.MachineLearning<span id="LST5E0F42C5_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>OneVsOneLearning</a><span id="LST5E0F42C5_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_3?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LST5E0F42C5_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_4?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LST5E0F42C5_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_5?cpp=&gt;|vb=()|nu=[]");</script>, <a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">SupportVectorMachine</a><span id="LST5E0F42C5_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_Statistics_Kernels_IKernel_1.htm">IKernel</a><span id="LST5E0F42C5_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_7?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LST5E0F42C5_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_8?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LST5E0F42C5_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_9?cpp=&gt;|vb=()|nu=[]");</script><span id="LST5E0F42C5_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_10?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST5E0F42C5_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <a href="T_Accord_MachineLearning_VectorMachines_MulticlassSupportVectorMachine.htm">MulticlassSupportVectorMachine</a><span id="LST5E0F42C5_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_12?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />      <a href="T_Accord_MachineLearning_VectorMachines_Learning_BaseMulticlassSupportVectorLearning_4.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LST5E0F42C5_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_13?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>BaseMulticlassSupportVectorLearning</a><span id="LST5E0F42C5_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LST5E0F42C5_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_15?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LST5E0F42C5_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_16?cpp=&gt;|vb=()|nu=[]");</script>, <a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">SupportVectorMachine</a><span id="LST5E0F42C5_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_17?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_Accord_Statistics_Kernels_IKernel_1.htm">IKernel</a><span id="LST5E0F42C5_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_18?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LST5E0F42C5_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_19?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LST5E0F42C5_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_20?cpp=&gt;|vb=()|nu=[]");</script><span id="LST5E0F42C5_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST5E0F42C5_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <a href="T_Accord_Statistics_Kernels_IKernel_1.htm">IKernel</a><span id="LST5E0F42C5_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LST5E0F42C5_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_24?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LST5E0F42C5_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_25?cpp=&gt;|vb=()|nu=[]");</script><span id="LST5E0F42C5_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_26?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <a href="T_Accord_MachineLearning_VectorMachines_MulticlassSupportVectorMachine.htm">MulticlassSupportVectorMachine</a><span id="LST5E0F42C5_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />        <span class="selflink">Accord.MachineLearning.VectorMachines.Learning<span id="LST5E0F42C5_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_28?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MulticlassSupportVectorLearning</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.6.4-alpha<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">ObsoleteAttribute</span>("Please specify the desired kernel function as a template parameter.")]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">MulticlassSupportVectorLearning</span> : <span class="identifier">BaseMulticlassSupportVectorLearning</span>&lt;<span class="identifier">double</span>[], <span class="identifier">SupportVectorMachine</span>&lt;<span class="identifier">IKernel</span>&lt;<span class="identifier">double</span>[]&gt;&gt;, <span class="identifier">IKernel</span>&lt;<span class="identifier">double</span>[]&gt;, <span class="identifier">MulticlassSupportVectorMachine</span>&gt;</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">ObsoleteAttribute</span>("Please specify the desired kernel function as a template parameter.")&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">MulticlassSupportVectorLearning</span>
	<span class="keyword">Inherits</span> <span class="identifier">BaseMulticlassSupportVectorLearning</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>(), <span class="identifier">SupportVectorMachine</span>(<span class="keyword">Of</span> <span class="identifier">IKernel</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>())), <span class="identifier">IKernel</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>()), <span class="identifier">MulticlassSupportVectorMachine</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/VectorMachines/Learning/MulticlassSupportVectorLearning.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">MulticlassSupportVectorLearning</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning__ctor.htm">MulticlassSupportVectorLearning<span id="LST5E0F42C5_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_29?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
            Initializes a new instance of the <span class="selflink">MulticlassSupportVectorLearning</span> class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning__ctor_1.htm">MulticlassSupportVectorLearning(MulticlassSupportVectorMachine, <span id="LST5E0F42C5_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_30?cpp=array&lt;");</script><span id="LST5E0F42C5_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_31?cpp=array&lt;");</script>Double<span id="LST5E0F42C5_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_32?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST5E0F42C5_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_33?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST5E0F42C5_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_34?cpp=array&lt;");</script>Int32<span id="LST5E0F42C5_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_OneVsOneLearning_3_AggregateExceptions.htm">AggregateExceptions</a></td><td><div class="summary">
              Gets or sets a value indicating whether the entire training algorithm should stop
              in case an exception has been detected at just one of the inner binary learning
              problems. Default is true (execution will not be stopped).
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_36?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_37?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_Algorithm.htm">Algorithm</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_Kernel.htm">Kernel</a></td><td><div class="summary">
              Gets or sets the kernel function to be used to learn the
              <a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine_1.htm">kernel support 
              vector machines</a>.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_OneVsOneLearning_3_Learner.htm">Learner</a></td><td><div class="summary">
              Gets or sets a function that takes a set of parameters and creates
              a learning algorithm for learning each of the binary inner classifiers
              needed by the one-vs-one classification strategy.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_38?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_39?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_OneVsOneLearning_3_Model.htm">Model</a></td><td><div class="summary">
              Gets or sets the model being learned.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_40?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_41?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_ParallelLearningBase_ParallelOptions.htm">ParallelOptions</a></td><td><div class="summary">
              Gets or sets the parallelization options for this algorithm.
            </div> (Inherited from <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">ParallelLearningBase</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_ParallelLearningBase_Token.htm">Token</a></td><td><div class="summary">
            Gets or sets a cancellation token that can be used
            to cancel the algorithm while it is running.
            </div> (Inherited from <a href="T_Accord_MachineLearning_ParallelLearningBase.htm">ParallelLearningBase</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_ComputeError.htm">ComputeError</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the error ratio, the number of
              misclassifications divided by the total
              number of samples in a dataset.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_OneVsOneLearning_3_Configure__1.htm">Configure<span id="LST5E0F42C5_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_42?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST5E0F42C5_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_43?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LST5E0F42C5_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_44?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TResult<span id="LST5E0F42C5_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_45?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
              Sets a callback function that takes a set of parameters and creates
              a learning algorithm for learning each of the binary inner classifiers
              needed by the one-vs-rest classification strategy. Calling this method
              sets the <a href="P_Accord_MachineLearning_OneVsOneLearning_3_Learner.htm">Learner</a> property.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_46?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_47?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_OneVsOneLearning_3_Configure__2.htm">Configure<span id="LST5E0F42C5_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_48?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T, TResult<span id="LST5E0F42C5_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_49?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Func<span id="LST5E0F42C5_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_50?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T, TResult<span id="LST5E0F42C5_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_51?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
              Sets a callback function that takes a set of parameters and creates
              a learning algorithm for learning each of the binary inner classifiers
              needed by the one-vs-rest classification strategy. Calling this method
              sets the <a href="P_Accord_MachineLearning_OneVsOneLearning_3_Learner.htm">Learner</a> property.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_52?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_53?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_Convert.htm">Convert</a></td><td><div class="summary">
              Converts <a href="T_Accord_MachineLearning_VectorMachines_Learning_SupportVectorMachineLearningConfigurationFunction.htm">SupportVectorMachineLearningConfigurationFunction</a>
              into a lambda function that can be passed to the <a href="P_Accord_MachineLearning_OneVsOneLearning_3_Learner.htm">Learner</a>
              property of a <span class="selflink">MulticlassSupportVectorLearning</span> learning algorithm.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_Create.htm">Create</a></td><td><div class="summary">
            Creates an instance of the model to be learned. Inheritors
            of this abstract class must define this method so new models
            can be created from the training data.
            </div> (Overrides <a href="M_Accord_MachineLearning_OneVsOneLearning_3_Create.htm">OneVsOneLearning<span id="LST5E0F42C5_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_54?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_55?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LST5E0F42C5_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_56?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Create(Int32, Int32)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_OneVsOneLearning_3_Learn.htm">Learn</a></td><td><div class="summary">
            Learns a model that can map the given inputs to the given outputs.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_57?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_58?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_OneVsOneLearning_3_OnSubproblemFinished.htm">OnSubproblemFinished</a></td><td><div class="summary">
              Raises the <span class="nolink">[E:SubproblemFinished]</span> event.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_59?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_60?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_MachineLearning_OneVsOneLearning_3_OnSubproblemStarted.htm">OnSubproblemStarted</a></td><td><div class="summary">
              Raises the <span class="nolink">[E:SubproblemStarted]</span> event.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_61?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_62?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_Run.htm">Run</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Obsolete.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Events</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="eventList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Accord_MachineLearning_OneVsOneLearning_3_SubproblemFinished.htm">SubproblemFinished</a></td><td><div class="summary">
              Occurs when the learning of a subproblem has finished.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_63?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_64?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubevent.gif" alt="Public event" title="Public event" /></td><td><a href="E_Accord_MachineLearning_OneVsOneLearning_3_SubproblemStarted.htm">SubproblemStarted</a></td><td><div class="summary">
              Occurs when the learning of a subproblem has started.
            </div> (Inherited from <a href="T_Accord_MachineLearning_OneVsOneLearning_3.htm">OneVsOneLearning<span id="LST5E0F42C5_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_65?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TBinary, TModel<span id="LST5E0F42C5_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_66?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID7RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LST5E0F42C5_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_67?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST5E0F42C5_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_68?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID8RBSection" class="collapsibleSection"><p>
              This class can be used to train Kernel Support Vector Machines with
              any algorithm using a <span class="code">one-against-one</span> strategy. The underlying 
              training algorithm can be configured by defining the <a href="P_Accord_MachineLearning_VectorMachines_Learning_MulticlassSupportVectorLearning_Algorithm.htm">Algorithm</a>
              property.</p><p>
              One example of learning algorithm that can be used with this class is the
              <a href="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization.htm">Sequential Minimal Optimization
              </a> (SMO) algorithm.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID9RBSection" class="collapsibleSection"><p>
              The following example shows how to learn a linear, multi-class support vector 
              machine using the <a href="T_Accord_MachineLearning_VectorMachines_Learning_LinearDualCoordinateDescent.htm">LinearDualCoordinateDescent</a> algorithm. </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we have the following data to be classified</span>
<span class="highlight-comment">// into three possible classes. Those are the samples:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">//               input         output</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0 </span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
};

<span class="highlight-keyword">int</span>[] outputs = <span class="highlight-comment">// those are the class labels</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,
    <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,
    <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
};

<span class="highlight-comment">// Create a one-vs-one multi-class SVM learning algorithm </span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Linear&gt;()
{
    <span class="highlight-comment">// using LIBLINEAR's L2-loss SVC dual for each SVM</span>
    Learner = (p) =&gt; <span class="highlight-keyword">new</span> LinearDualCoordinateDescent()
    {
        Loss = Loss.L2
    }
};

<span class="highlight-comment">// The following line is only needed to ensure reproducible results. Please remove it to enable full parallelization</span>
teacher.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>; <span class="highlight-comment">// (Remove, comment, or change this line to enable full parallelism)</span>

<span class="highlight-comment">// Learn a machine</span>
<span class="highlight-keyword">var</span> machine = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = machine.Decide(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEFBA");</script><p>
              The following example shows how to learn a non-linear, multi-class support 
              vector machine using the <a href="T_Accord_Statistics_Kernels_Gaussian.htm">Gaussian</a> kernel and the 
              <a href="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization.htm">SequentialMinimalOptimization</a> algorithm. </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we have the following data to be classified</span>
<span class="highlight-comment">// into three possible classes. Those are the samples:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">//               input         output</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0 </span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
};

<span class="highlight-keyword">int</span>[] outputs = <span class="highlight-comment">// those are the class labels</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,
    <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,
    <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
};

<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Gaussian&gt;()
{
    <span class="highlight-comment">// Configure the learning algorithm to use SMO to train the</span>
    <span class="highlight-comment">//  underlying SVMs in each of the binary class subproblems.</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Gaussian&gt;()
    {
        <span class="highlight-comment">// Estimate a suitable guess for the Gaussian kernel's parameters.</span>
        <span class="highlight-comment">// This estimate can serve as a starting point for a grid search.</span>
        UseKernelEstimation = <span class="highlight-keyword">true</span>
    }
};

<span class="highlight-comment">// The following line is only needed to ensure reproducible results. Please remove it to enable full parallelization</span>
teacher.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>; <span class="highlight-comment">// (Remove, comment, or change this line to enable full parallelism)</span>

<span class="highlight-comment">// Learn a machine</span>
<span class="highlight-keyword">var</span> machine = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = machine.Decide(inputs);

<span class="highlight-comment">// Get class scores for each sample</span>
<span class="highlight-keyword">double</span>[] scores = machine.Score(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACFBA");</script><p>
              Support vector machines can have their weights calibrated in order to produce 
              probability estimates (instead of simple class separation distances). The
              following example shows how to use <a href="T_Accord_MachineLearning_VectorMachines_Learning_ProbabilisticOutputCalibration.htm">ProbabilisticOutputCalibration</a>
              within <span class="selflink">MulticlassSupportVectorLearning</span> to generate a probabilistic
              SVM:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAFBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we have the following data to be classified</span>
<span class="highlight-comment">// into three possible classes. Those are the samples:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-comment">//               input         output</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0 </span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">//  0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">//  2</span>
};

<span class="highlight-keyword">int</span>[] outputs = <span class="highlight-comment">// those are the class labels</span>
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,
    <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,
    <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
};

<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Gaussian&gt;()
{
    <span class="highlight-comment">// Configure the learning algorithm to use SMO to train the</span>
    <span class="highlight-comment">//  underlying SVMs in each of the binary class subproblems.</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> SequentialMinimalOptimization&lt;Gaussian&gt;()
    {
        <span class="highlight-comment">// Estimate a suitable guess for the Gaussian kernel's parameters.</span>
        <span class="highlight-comment">// This estimate can serve as a starting point for a grid search.</span>
        UseKernelEstimation = <span class="highlight-keyword">true</span>
    }
};

<span class="highlight-comment">// Learn a machine</span>
<span class="highlight-keyword">var</span> machine = teacher.Learn(inputs, outputs);


<span class="highlight-comment">// Create the multi-class learning algorithm for the machine</span>
<span class="highlight-keyword">var</span> calibration = <span class="highlight-keyword">new</span> MulticlassSupportVectorLearning&lt;Gaussian&gt;()
{
    Model = machine, <span class="highlight-comment">// We will start with an existing machine</span>

    <span class="highlight-comment">// Configure the learning algorithm to use Platt's calibration</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> ProbabilisticOutputCalibration&lt;Gaussian&gt;()
    {
        Model = param.Model <span class="highlight-comment">// Start with an existing machine</span>
    }
};


<span class="highlight-comment">// Configure parallel execution options</span>
calibration.ParallelOptions.MaxDegreeOfParallelism = <span class="highlight-number">1</span>;

<span class="highlight-comment">// Learn a machine</span>
calibration.Learn(inputs, outputs);

<span class="highlight-comment">// Obtain class predictions for each sample</span>
<span class="highlight-keyword">int</span>[] predicted = machine.Decide(inputs);

<span class="highlight-comment">// Get class scores for each sample</span>
<span class="highlight-keyword">double</span>[] scores = machine.Score(inputs);

<span class="highlight-comment">// Get log-likelihoods (should be same as scores)</span>
<span class="highlight-keyword">double</span>[][] logl = machine.LogLikelihoods(inputs);

<span class="highlight-comment">// Get probability for each sample</span>
<span class="highlight-keyword">double</span>[][] prob = machine.Probabilities(inputs);

<span class="highlight-comment">// Compute classification error</span>
<span class="highlight-keyword">double</span> error = <span class="highlight-keyword">new</span> ZeroOneLoss(outputs).Loss(predicted);
<span class="highlight-keyword">double</span> loss = <span class="highlight-keyword">new</span> CategoryCrossEntropyLoss(outputs).Loss(prob);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAFBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID10RB')" onkeypress="SectionExpandCollapse_CheckKey('ID10RB', event)" tabindex="0"><img id="ID10RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID10RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_VectorMachines_Learning.htm">Accord.MachineLearning.VectorMachines.Learning Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_SequentialMinimalOptimization.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LST5E0F42C5_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_69?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SequentialMinimalOptimization</a></div><div class="seeAlsoStyle"><span class="selflink">Accord.MachineLearning.VectorMachines.Learning<span id="LST5E0F42C5_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_70?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MulticlassSupportVectorLearning</span></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_Learning_MultilabelSupportVectorLearning.htm">Accord.MachineLearning.VectorMachines.Learning<span id="LST5E0F42C5_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_71?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>MultilabelSupportVectorLearning</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_SupportVectorMachine.htm">Accord.MachineLearning.VectorMachines<span id="LST5E0F42C5_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_72?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>SupportVectorMachine</a></div><div class="seeAlsoStyle"><a href="T_Accord_MachineLearning_VectorMachines_KernelSupportVectorMachine.htm">Accord.MachineLearning.VectorMachines<span id="LST5E0F42C5_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST5E0F42C5_73?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>KernelSupportVectorMachine</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>