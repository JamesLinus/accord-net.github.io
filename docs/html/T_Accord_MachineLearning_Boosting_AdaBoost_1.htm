<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>AdaBoost(TModel) Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="AdaBoost%3CTModel%3E class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.Boosting.AdaBoost%3CTModel%3E class" />
    <meta name="System.Keywords" content="AdaBoost%3CTModel%3E class, about AdaBoost%3CTModel%3E class" />
    <meta name="System.Keywords" content="AdaBoost(Of TModel) class" />
    <meta name="System.Keywords" content="Accord.MachineLearning.Boosting.AdaBoost(Of TModel) class" />
    <meta name="System.Keywords" content="AdaBoost(Of TModel) class, about AdaBoost(Of TModel) class" />
    <meta name="Microsoft.Help.F1" content="Accord.MachineLearning.Boosting.AdaBoost`1" />
    <meta name="Microsoft.Help.Id" content="T:Accord.MachineLearning.Boosting.AdaBoost`1" />
    <meta name="Description" content="AdaBoost learning algorithm." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.MachineLearning.Boosting" />
    <meta name="file" content="T_Accord_MachineLearning_Boosting_AdaBoost_1" />
    <meta name="guid" content="T_Accord_MachineLearning_Boosting_AdaBoost_1" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_MachineLearning_Boosting.htm" title="Accord.MachineLearning.Boosting" tocid="N_Accord_MachineLearning_Boosting">Accord.MachineLearning.Boosting</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_MachineLearning_Boosting_AdaBoost_1.htm" title="AdaBoost(TModel) Class" tocid="T_Accord_MachineLearning_Boosting_AdaBoost_1">AdaBoost(TModel) Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_MachineLearning_Boosting_AdaBoost_1__ctor.htm" title="AdaBoost(TModel) Constructor " tocid="Overload_Accord_MachineLearning_Boosting_AdaBoost_1__ctor">AdaBoost(TModel) Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_MachineLearning_Boosting_AdaBoost_1.htm" title="AdaBoost(TModel) Properties" tocid="Properties_T_Accord_MachineLearning_Boosting_AdaBoost_1">AdaBoost(TModel) Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_MachineLearning_Boosting_AdaBoost_1.htm" title="AdaBoost(TModel) Methods" tocid="Methods_T_Accord_MachineLearning_Boosting_AdaBoost_1">AdaBoost(TModel) Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>AdaBoost<span id="LSTC57DE4D8_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span class="typeparameter">TModel</span><span id="LSTC57DE4D8_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script> Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              AdaBoost learning algorithm.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTC57DE4D8_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_2?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">Accord.MachineLearning.Boosting<span id="LSTC57DE4D8_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>AdaBoost<span id="LSTC57DE4D8_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_4?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_5?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_MachineLearning_Boosting.htm">Accord.MachineLearning.Boosting</a><br />
    <strong>Assembly:</strong>
   Accord.MachineLearning (in Accord.MachineLearning.dll) Version: 3.8.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">AdaBoost</span>&lt;TModel&gt; : <span class="identifier">ISupervisedBinaryLearning</span>&lt;<span class="identifier">Boost</span>&lt;TModel&gt;, <span class="identifier">double</span>[]&gt;, 
	<span class="identifier">ISupervisedMulticlassLearning</span>&lt;<span class="identifier">Boost</span>&lt;TModel&gt;, <span class="identifier">double</span>[]&gt;, <span class="identifier">ISupervisedMultilabelLearning</span>&lt;<span class="identifier">Boost</span>&lt;TModel&gt;, <span class="identifier">double</span>[]&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">Boost</span>&lt;TModel&gt;, <span class="identifier">double</span>[], <span class="identifier">int</span>[]&gt;, <span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">Boost</span>&lt;TModel&gt;, <span class="identifier">double</span>[], <span class="identifier">bool</span>[]&gt;, 
	<span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">Boost</span>&lt;TModel&gt;, <span class="identifier">double</span>[], <span class="identifier">int</span>&gt;, <span class="identifier">ISupervisedLearning</span>&lt;<span class="identifier">Boost</span>&lt;TModel&gt;, <span class="identifier">double</span>[], <span class="identifier">bool</span>&gt;
<span class="keyword">where</span> TModel : <span class="identifier">Object</span>, <span class="identifier">IClassifier</span>&lt;<span class="identifier">double</span>[], <span class="identifier">int</span>&gt;
</pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">AdaBoost</span>(<span class="keyword">Of</span> TModel <span class="keyword">As</span> {<span class="identifier">Object</span>, <span class="identifier">IClassifier</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>(), <span class="identifier">Integer</span>)})
	<span class="keyword">Implements</span> <span class="identifier">ISupervisedBinaryLearning</span>(<span class="keyword">Of</span> <span class="identifier">Boost</span>(<span class="keyword">Of</span> TModel), <span class="identifier">Double</span>()), 
	<span class="identifier">ISupervisedMulticlassLearning</span>(<span class="keyword">Of</span> <span class="identifier">Boost</span>(<span class="keyword">Of</span> TModel), <span class="identifier">Double</span>()), <span class="identifier">ISupervisedMultilabelLearning</span>(<span class="keyword">Of</span> <span class="identifier">Boost</span>(<span class="keyword">Of</span> TModel), <span class="identifier">Double</span>()), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">Boost</span>(<span class="keyword">Of</span> TModel), <span class="identifier">Double</span>(), <span class="identifier">Integer</span>()), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">Boost</span>(<span class="keyword">Of</span> TModel), <span class="identifier">Double</span>(), <span class="identifier">Boolean</span>()), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">Boost</span>(<span class="keyword">Of</span> TModel), <span class="identifier">Double</span>(), <span class="identifier">Integer</span>), 
	<span class="identifier">ISupervisedLearning</span>(<span class="keyword">Of</span> <span class="identifier">Boost</span>(<span class="keyword">Of</span> TModel), <span class="identifier">Double</span>(), <span class="identifier">Boolean</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.MachineLearning/Boosting/AdaBoost.cs" title="View the source code">View Source</a><h4 class="subHeading">Type Parameters</h4><dl><dt><span class="parameter">TModel</span></dt><dd>The type of the model to be trained.</dd></dl></div><p>The <span class="selflink">AdaBoost<span id="LSTC57DE4D8_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_6?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_7?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1__ctor.htm">AdaBoost<span id="LSTC57DE4D8_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_8?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_9?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTC57DE4D8_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_10?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
              Initializes a new instance of the <span class="selflink">AdaBoost<span id="LSTC57DE4D8_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_11?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_12?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1__ctor_1.htm">AdaBoost<span id="LSTC57DE4D8_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_13?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_14?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script>(Boost<span id="LSTC57DE4D8_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_15?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TModel<span id="LSTC57DE4D8_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_16?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td><div class="summary">
              Initializes a new instance of the <span class="selflink">AdaBoost<span id="LSTC57DE4D8_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_17?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_18?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1__ctor_2.htm">AdaBoost<span id="LSTC57DE4D8_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_19?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_20?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script>(Boost<span id="LSTC57DE4D8_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_21?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TModel<span id="LSTC57DE4D8_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_22?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, ModelConstructor<span id="LSTC57DE4D8_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_23?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TModel<span id="LSTC57DE4D8_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_24?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Initializes a new instance of the <span class="selflink">AdaBoost<span id="LSTC57DE4D8_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_25?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TModel<span id="LSTC57DE4D8_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_26?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></span> class.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_Creation.htm">Creation</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Gets or sets the fitting function which creates
              and trains a model given a weighted data set.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_Iterations.htm">Iterations</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Please use MaxIterations instead.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_Learner.htm">Learner</a></td><td><div class="summary">
              Gets or sets a function that takes a set of parameters and creates
              a learning algorithm for learning each stage of the boosted classsifier.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_MaxIterations.htm">MaxIterations</a></td><td><div class="summary">
              Gets or sets the maximum number of iterations
              performed by the learning algorithm.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_Model.htm">Model</a></td><td><div class="summary">
              Gets or sets the model being trained.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_Threshold.htm">Threshold</a></td><td><div class="summary">
              Gets or sets the error limit before learning stops. Default is 0.5.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_Token.htm">Token</a></td><td><div class="summary">
              Gets or sets a cancellation token that can be used to 
              stop the learning algorithm while it is running.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_Boosting_AdaBoost_1_Tolerance.htm">Tolerance</a></td><td><div class="summary">
              Gets or sets the relative tolerance used to 
              detect convergence of the learning algorithm.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1_ComputeError.htm">ComputeError</a></td><td><div class="summary">
              Computes the error ratio, the number of
              misclassifications divided by the total
              number of samples in a dataset.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1_Learn.htm">Learn(<span id="LSTC57DE4D8_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_27?cpp=array&lt;");</script><span id="LSTC57DE4D8_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_28?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_29?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_30?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_31?cpp=array&lt;");</script>Boolean<span id="LSTC57DE4D8_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_32?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_33?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_34?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1_Learn_1.htm">Learn(<span id="LSTC57DE4D8_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_35?cpp=array&lt;");</script><span id="LSTC57DE4D8_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_36?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_37?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_38?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_39?cpp=array&lt;");</script><span id="LSTC57DE4D8_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_40?cpp=array&lt;");</script>Boolean<span id="LSTC57DE4D8_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_41?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_42?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_43?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_44?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1_Learn_2.htm">Learn(<span id="LSTC57DE4D8_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_45?cpp=array&lt;");</script><span id="LSTC57DE4D8_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_46?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_47?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_48?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_49?cpp=array&lt;");</script>Int32<span id="LSTC57DE4D8_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_50?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_51?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_52?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1_Learn_3.htm">Learn(<span id="LSTC57DE4D8_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_53?cpp=array&lt;");</script><span id="LSTC57DE4D8_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_54?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_55?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_56?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_57?cpp=array&lt;");</script><span id="LSTC57DE4D8_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_58?cpp=array&lt;");</script>Int32<span id="LSTC57DE4D8_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_59?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_60?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_61?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_62?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Learns a model that can map the given inputs to the given outputs.
            </div></td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1_Run.htm">Run(<span id="LSTC57DE4D8_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_63?cpp=array&lt;");</script><span id="LSTC57DE4D8_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_64?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_65?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_66?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_67?cpp=array&lt;");</script>Int32<span id="LSTC57DE4D8_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_68?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Runs the learning algorithm.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_Boosting_AdaBoost_1_Run_1.htm">Run(<span id="LSTC57DE4D8_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_69?cpp=array&lt;");</script><span id="LSTC57DE4D8_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_70?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LSTC57DE4D8_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_72?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_73?cpp=array&lt;");</script>Int32<span id="LSTC57DE4D8_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_74?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTC57DE4D8_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_75?cpp=array&lt;");</script>Double<span id="LSTC57DE4D8_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_76?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Runs the learning algorithm.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">
                Compares two objects for equality, performing an elementwise 
                comparison if the elements are vectors or matrices.
            </div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To.htm">To(Type)</a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTC57DE4D8_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_77?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTC57DE4D8_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_78?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LSTC57DE4D8_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTC57DE4D8_79?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td>Overloaded.  <div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
              AdaBoost, short for "Adaptive Boosting", is a machine learning meta-algorithm
              formulated by Yoav Freund and Robert Schapire who won the Gödel Prize in 2003
              for their work. It can be used in conjunction with many other types of learning
              algorithms to improve their performance. The output of the other learning algorithms 
              ('weak learners') is combined into a weighted sum that represents the final output of
              the boosted classifier. AdaBoost is adaptive in the sense that subsequent weak learners
              are tweaked in favor of those instances misclassified by previous classifiers. AdaBoost
              is sensitive to noisy data and outliers. In some problems it can be less susceptible to
              the overfitting problem than other learning algorithms. The individual learners can be 
              weak, but as long as the performance of each one is slightly better than random guessing 
              (e.g., their error rate is smaller than 0.5 for binary classification), the final model
              can be proven to converge to a strong learner.</p><p>
              Every learning algorithm will tend to suit some problem types better than others, and will 
              typically have many different parameters and configurations to be adjusted before achieving
              optimal performance on a dataset, AdaBoost(with decision trees as the weak learners) is often
              referred to as the best out-of-the-box classifier. When used with decision tree learning,
              information gathered at each stage of the AdaBoost algorithm about the relative 'hardness' 
              of each training sample is fed into the tree growing algorithm such that later trees tend 
              to focus on harder-to-classify examples.</p><p>
              References:
              <ul><li><a href="https://en.wikipedia.org/wiki/AdaBoost">
                   Wikipedia contributors. "AdaBoost." Wikipedia, The Free Encyclopedia. Wikipedia, The 
                   Free Encyclopedia, 10 Aug. 2017. Web. 7 Sep. 2017 </a></li></ul></p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Let's say we want to classify the following 2-dimensional </span>
<span class="highlight-comment">// data samples into 2 possible classes, either true or false:</span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">10</span>, <span class="highlight-number">42</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">162</span>, <span class="highlight-number">96</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">125</span>, <span class="highlight-number">20</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">96</span>,  <span class="highlight-number">6</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {   <span class="highlight-number">2</span>, <span class="highlight-number">73</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">52</span>, <span class="highlight-number">51</span> },
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {  <span class="highlight-number">71</span>, <span class="highlight-number">49</span> },
};

<span class="highlight-comment">// And those are their associated class labels</span>
<span class="highlight-keyword">bool</span>[] outputs =
{
    <span class="highlight-keyword">false</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">true</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">false</span>, <span class="highlight-keyword">true</span>
};

<span class="highlight-comment">// We can create an AdaBoost algorithm as:</span>
<span class="highlight-keyword">var</span> learner = <span class="highlight-keyword">new</span> AdaBoost&lt;DecisionStump&gt;()
{
    Learner = (p) =&gt; <span class="highlight-keyword">new</span> ThresholdLearning(),

    <span class="highlight-comment">// Train until:</span>
    MaxIterations = <span class="highlight-number">5</span>,
    Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-3</span>
};

<span class="highlight-comment">// Now, we can use the Learn method to learn a boosted classifier</span>
Boost&lt;DecisionStump&gt; classifier = learner.Learn(inputs, outputs);

<span class="highlight-comment">// And we can test its performance using (error should be 0):</span>
ConfusionMatrix cm = ConfusionMatrix.Estimate(classifier, inputs, outputs);

<span class="highlight-keyword">double</span> error = cm.Error;  <span class="highlight-comment">// should be 0.0</span>
<span class="highlight-keyword">double</span> acc = cm.Accuracy; <span class="highlight-comment">// should be 1.0</span>
<span class="highlight-keyword">double</span> kappa = cm.Kappa;  <span class="highlight-comment">// should be 1.0</span>

<span class="highlight-comment">// And compute a decision for a single data point using:</span>
<span class="highlight-keyword">bool</span> y = classifier.Decide(inputs[<span class="highlight-number">0</span>]); <span class="highlight-comment">// result should false</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// This example shows how to use AdaBoost to train more complex</span>
<span class="highlight-comment">// models than a simple DecisionStump. For example, we will use</span>
<span class="highlight-comment">// it to train a boosted Logistic Regression classifier.</span>

<span class="highlight-comment">// Let's use some synthetic data for that: The Yin-Yang dataset is </span>
<span class="highlight-comment">// a simple 2D binary non-linear decision problem where the points </span>
<span class="highlight-comment">// belong to each of the classes interwine in a Yin-Yang shape:</span>
<span class="highlight-keyword">var</span> dataset = <span class="highlight-keyword">new</span> YinYang();
<span class="highlight-keyword">double</span>[][] inputs = dataset.Instances;
<span class="highlight-keyword">int</span>[] outputs = Classes.ToZeroOne(dataset.ClassLabels);

<span class="highlight-comment">// Create an AdaBoost for Logistic Regression as:</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> AdaBoost&lt;LogisticRegression&gt;()
{
    <span class="highlight-comment">// Here we can specify how each regression should be learned:</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> IterativeReweightedLeastSquares&lt;LogisticRegression&gt;()
    {
        ComputeStandardErrors = <span class="highlight-keyword">false</span>,
        MaxIterations = <span class="highlight-number">50</span>,
        Tolerance = <span class="highlight-number">0</span>
    },

    <span class="highlight-comment">// Train until:</span>
    MaxIterations = <span class="highlight-number">50</span>,
    Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-5</span>,
};

<span class="highlight-comment">// Now, we can use the Learn method to learn a boosted classifier</span>
Boost&lt;LogisticRegression&gt; classifier = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// And we can test its performance using (error should be 0.11):</span>
ConfusionMatrix cm = ConfusionMatrix.Estimate(classifier, inputs, outputs);

<span class="highlight-keyword">double</span> error = cm.Error;  <span class="highlight-comment">// should be 0.11</span>
<span class="highlight-keyword">double</span> acc = cm.Accuracy; <span class="highlight-comment">// should be 0.89</span>
<span class="highlight-keyword">double</span> kappa = cm.Kappa;  <span class="highlight-comment">// should be 0.78</span>

<span class="highlight-comment">// And compute a decision for a single data point using:</span>
<span class="highlight-keyword">bool</span> y = classifier.Decide(inputs[<span class="highlight-number">0</span>]); <span class="highlight-comment">// result should false</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABABA");</script><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// This example shows how to use AdaBoost to train more complex</span>
<span class="highlight-comment">// models than a simple DecisionStump. For example, we will use</span>
<span class="highlight-comment">// it to train a boosted Decision Trees.</span>

<span class="highlight-comment">// Let's use some synthetic data for that: The Yin-Yang dataset is </span>
<span class="highlight-comment">// a simple 2D binary non-linear decision problem where the points </span>
<span class="highlight-comment">// belong to each of the classes interwine in a Yin-Yang shape:</span>
<span class="highlight-keyword">var</span> dataset = <span class="highlight-keyword">new</span> YinYang();
<span class="highlight-keyword">double</span>[][] inputs = dataset.Instances;
<span class="highlight-keyword">int</span>[] outputs = Classes.ToZeroOne(dataset.ClassLabels);

<span class="highlight-comment">// Create an AdaBoost for Logistic Regression as:</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> AdaBoost&lt;DecisionTree&gt;()
{
    <span class="highlight-comment">// Here we can specify how each regression should be learned:</span>
    Learner = (param) =&gt; <span class="highlight-keyword">new</span> C45Learning()
    {
        <span class="highlight-comment">// i.e.</span>
        <span class="highlight-comment">// MaxHeight = </span>
        <span class="highlight-comment">// MaxVariables = </span>
    },

    <span class="highlight-comment">// Train until:</span>
    MaxIterations = <span class="highlight-number">50</span>,
    Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-5</span>,
};

<span class="highlight-comment">// Now, we can use the Learn method to learn a boosted classifier</span>
Boost&lt;DecisionTree&gt; classifier = teacher.Learn(inputs, outputs);

<span class="highlight-comment">// And we can test its performance using (error should be 0.11):</span>
<span class="highlight-keyword">double</span> error = ConfusionMatrix.Estimate(classifier, inputs, outputs).Error;

<span class="highlight-comment">// And compute a decision for a single data point using:</span>
<span class="highlight-keyword">bool</span> y = classifier.Decide(inputs[<span class="highlight-number">0</span>]); <span class="highlight-comment">// result should false</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_MachineLearning_Boosting.htm">Accord.MachineLearning.Boosting Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>