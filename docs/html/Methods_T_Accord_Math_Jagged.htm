<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Jagged Methods</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="Jagged class, methods" />
    <meta name="Microsoft.Help.Id" content="Methods.T:Accord.Math.Jagged" />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Math" />
    <meta name="file" content="Methods_T_Accord_Math_Jagged" />
    <meta name="guid" content="Methods_T_Accord_Math_Jagged" />
    
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_Math.htm" title="Accord.Math" tocid="N_Accord_Math">Accord.Math</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_Math_Jagged.htm" title="Jagged Class" tocid="T_Accord_Math_Jagged">Jagged Class</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_Math_Jagged.htm" title="Jagged Methods" tocid="Methods_T_Accord_Math_Jagged">Jagged Methods</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Math_Jagged_ColumnVector__1.htm" title="ColumnVector(T) Method " tocid="M_Accord_Math_Jagged_ColumnVector__1">ColumnVector(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Create.htm" title="Create Method " tocid="Overload_Accord_Math_Jagged_Create">Create Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_CreateAs.htm" title="CreateAs Method " tocid="Overload_Accord_Math_Jagged_CreateAs">CreateAs Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Diagonal.htm" title="Diagonal Method " tocid="Overload_Accord_Math_Jagged_Diagonal">Diagonal Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Enumerate.htm" title="Enumerate Method " tocid="Overload_Accord_Math_Jagged_Enumerate">Enumerate Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Identity.htm" title="Identity Method " tocid="Overload_Accord_Math_Jagged_Identity">Identity Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_KHot.htm" title="KHot Method " tocid="Overload_Accord_Math_Jagged_KHot">KHot Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Math_Jagged_Magic.htm" title="Magic Method " tocid="M_Accord_Math_Jagged_Magic">Magic Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_OneHot.htm" title="OneHot Method " tocid="Overload_Accord_Math_Jagged_OneHot">OneHot Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Ones.htm" title="Ones Method " tocid="Overload_Accord_Math_Jagged_Ones">Ones Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Outer.htm" title="Outer Method " tocid="Overload_Accord_Math_Jagged_Outer">Outer Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Parse.htm" title="Parse Method " tocid="Overload_Accord_Math_Jagged_Parse">Parse Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Random.htm" title="Random Method " tocid="Overload_Accord_Math_Jagged_Random">Random Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Reshape.htm" title="Reshape Method " tocid="Overload_Accord_Math_Jagged_Reshape">Reshape Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Math_Jagged_RowVector__1.htm" title="RowVector(T) Method " tocid="M_Accord_Math_Jagged_RowVector__1">RowVector(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Math_Jagged_Square__1.htm" title="Square(T) Method " tocid="M_Accord_Math_Jagged_Square__1">Square(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Math_Jagged_Transpose__1.htm" title="Transpose(T) Method " tocid="M_Accord_Math_Jagged_Transpose__1">Transpose(T) Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Math_Jagged_TryParse.htm" title="TryParse Method " tocid="M_Accord_Math_Jagged_TryParse">TryParse Method </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Math_Jagged_Zeros.htm" title="Zeros Method " tocid="Overload_Accord_Math_Jagged_Zeros">Zeros Method </a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>Jagged Methods</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <p>The <a href="T_Accord_Math_Jagged.htm">Jagged</a> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID0RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_ColumnVector__1.htm">ColumnVector<span id="LST25C64FF5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_0?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Creates a Nx1 matrix with a single column vector of size N.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Create.htm">Create(Type, <span id="LST25C64FF5_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_2?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a jagged matrix with all values set to a given value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Create__1_3.htm">Create<span id="LST25C64FF5_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_4?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_6?cpp=array&lt;");</script>T<span id="LST25C64FF5_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_7?cpp=,2&gt;|cs=[,]|vb=(,)|nu=[,]|fs=[,]");</script>)</a></td><td><div class="summary">
              Creates a matrix with the given values.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Create__1_4.htm">Create<span id="LST25C64FF5_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_8?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_9?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_10?cpp=array&lt;");</script><span id="LST25C64FF5_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_11?cpp=array&lt;");</script>T<span id="LST25C64FF5_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_12?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with the given rows.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Create__1.htm">Create<span id="LST25C64FF5_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_14?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_15?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, T)</a></td><td><div class="summary">
              Creates a jagged matrix with all values set to a given value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Create__1_1.htm">Create<span id="LST25C64FF5_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_16?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_17?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, <span id="LST25C64FF5_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_18?cpp=array&lt;");</script>T<span id="LST25C64FF5_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_19?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with all values set to a given value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Create__1_2.htm">Create<span id="LST25C64FF5_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_20?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_21?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, <span id="LST25C64FF5_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_22?cpp=array&lt;");</script><span id="LST25C64FF5_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_23?cpp=array&lt;");</script>T<span id="LST25C64FF5_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_24?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_25?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Boolean)</a></td><td><div class="summary">
              Creates a matrix with all values set to a given value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_CreateAs__1.htm">CreateAs<span id="LST25C64FF5_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_26?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_28?cpp=array&lt;");</script>T<span id="LST25C64FF5_29"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_29?cpp=,2&gt;|cs=[,]|vb=(,)|nu=[,]|fs=[,]");</script>)</a></td><td><div class="summary">
              Creates a new multidimensional matrix with the same shape as another matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_CreateAs__1_1.htm">CreateAs<span id="LST25C64FF5_30"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_30?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_31"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_31?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_32"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_32?cpp=array&lt;");</script><span id="LST25C64FF5_33"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_33?cpp=array&lt;");</script>T<span id="LST25C64FF5_34"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_34?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_35"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_35?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a new multidimensional matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_CreateAs__2.htm">CreateAs<span id="LST25C64FF5_36"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_36?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TInput, TOutput<span id="LST25C64FF5_37"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_37?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_38"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_38?cpp=array&lt;");</script>TInput<span id="LST25C64FF5_39"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_39?cpp=,2&gt;|cs=[,]|vb=(,)|nu=[,]|fs=[,]");</script>)</a></td><td><div class="summary">
              Returns a new multidimensional matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_CreateAs__2_1.htm">CreateAs<span id="LST25C64FF5_40"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_40?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TInput, TOutput<span id="LST25C64FF5_41"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_41?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_42"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_42?cpp=array&lt;");</script><span id="LST25C64FF5_43"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_43?cpp=array&lt;");</script>TInput<span id="LST25C64FF5_44"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_44?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_45"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_45?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a new multidimensional matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_CreateAs__2_2.htm">CreateAs<span id="LST25C64FF5_46"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_46?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>TInput, TOutput<span id="LST25C64FF5_47"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_47?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_48"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_48?cpp=array&lt;");</script><span id="LST25C64FF5_49"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_49?cpp=array&lt;");</script><span id="LST25C64FF5_50"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_50?cpp=array&lt;");</script>TInput<span id="LST25C64FF5_51"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_51?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_52"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_52?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_53"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_53?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a new multidimensional matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_8.htm">Diagonal<span id="LST25C64FF5_54"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_54?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_55"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_55?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_56"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_56?cpp=array&lt;");</script>T<span id="LST25C64FF5_57"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_57?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Return a square matrix with a vector of values on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_10.htm">Diagonal<span id="LST25C64FF5_58"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_58?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_59"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_59?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_60"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_60?cpp=array&lt;");</script><span id="LST25C64FF5_61"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_61?cpp=array&lt;");</script><span id="LST25C64FF5_62"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_62?cpp=array&lt;");</script>T<span id="LST25C64FF5_63"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_63?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_64"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_64?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_65"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_65?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a block-diagonal matrix with the given matrices on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_4.htm">Diagonal<span id="LST25C64FF5_66"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_66?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_67"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_67?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, T)</a></td><td><div class="summary">
              Returns a square diagonal matrix of the given size.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_6.htm">Diagonal<span id="LST25C64FF5_68"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_68?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_69"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_69?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, <span id="LST25C64FF5_70"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_70?cpp=array&lt;");</script>T<span id="LST25C64FF5_71"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_71?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Return a square matrix with a vector of values on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_9.htm">Diagonal<span id="LST25C64FF5_72"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_72?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_73"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_73?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_74"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_74?cpp=array&lt;");</script>T<span id="LST25C64FF5_75"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_75?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_76"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_76?cpp=array&lt;");</script><span id="LST25C64FF5_77"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_77?cpp=array&lt;");</script>T<span id="LST25C64FF5_78"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_78?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_79"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_79?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Return a square matrix with a vector of values on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1.htm">Diagonal<span id="LST25C64FF5_80"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_80?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_81"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_81?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, T)</a></td><td><div class="summary">
              Returns a matrix of the given size with value on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_2.htm">Diagonal<span id="LST25C64FF5_82"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_82?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_83"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_83?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, <span id="LST25C64FF5_84"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_84?cpp=array&lt;");</script>T<span id="LST25C64FF5_85"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_85?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a matrix with a vector of values on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_5.htm">Diagonal<span id="LST25C64FF5_86"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_86?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_87"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_87?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, T, <span id="LST25C64FF5_88"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_88?cpp=array&lt;");</script><span id="LST25C64FF5_89"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_89?cpp=array&lt;");</script>T<span id="LST25C64FF5_90"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_90?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_91"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_91?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a square diagonal matrix of the given size.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_7.htm">Diagonal<span id="LST25C64FF5_92"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_92?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_93"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_93?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, <span id="LST25C64FF5_94"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_94?cpp=array&lt;");</script>T<span id="LST25C64FF5_95"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_95?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_96"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_96?cpp=array&lt;");</script><span id="LST25C64FF5_97"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_97?cpp=array&lt;");</script>T<span id="LST25C64FF5_98"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_98?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_99"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_99?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Return a square matrix with a vector of values on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_1.htm">Diagonal<span id="LST25C64FF5_100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_100?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_101?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, T, <span id="LST25C64FF5_102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_102?cpp=array&lt;");</script><span id="LST25C64FF5_103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_103?cpp=array&lt;");</script>T<span id="LST25C64FF5_104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_104?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_105?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a matrix of the given size with value on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Diagonal__1_3.htm">Diagonal<span id="LST25C64FF5_106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_106?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_107?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, <span id="LST25C64FF5_108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_108?cpp=array&lt;");</script>T<span id="LST25C64FF5_109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_109?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_110?cpp=array&lt;");</script><span id="LST25C64FF5_111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_111?cpp=array&lt;");</script>T<span id="LST25C64FF5_112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_112?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_113?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Returns a matrix with a vector of values on its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Enumerate.htm">Enumerate(Array)</a></td><td><div class="summary">
              Enumerates through all elements in a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Enumerate_1.htm">Enumerate(Array, <span id="LST25C64FF5_114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_114?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_115?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Enumerates through all elements in a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Enumerate__1.htm">Enumerate<span id="LST25C64FF5_116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_116?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_117?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Array)</a></td><td><div class="summary">
              Enumerates through all elements in a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Enumerate__1_1.htm">Enumerate<span id="LST25C64FF5_118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_118?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_119?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Array, <span id="LST25C64FF5_120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_120?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_121?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Enumerates through all elements in a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Identity.htm">Identity(Int32)</a></td><td><div class="summary">
              Creates a square matrix with ones across its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Identity__1.htm">Identity<span id="LST25C64FF5_122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_122?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_123?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32)</a></td><td><div class="summary">
              Creates a square matrix with ones across its diagonal.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_KHot.htm">KHot(<span id="LST25C64FF5_124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_124?cpp=array&lt;");</script><span id="LST25C64FF5_125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_125?cpp=array&lt;");</script>Boolean<span id="LST25C64FF5_126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_126?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_127?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Creates a matrix of k-hot vectors, where all values at each row are 
              zero except for the ones in the positions where <span class="parameter">mask</span>
              are true, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_KHot_1.htm">KHot(<span id="LST25C64FF5_128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_128?cpp=array&lt;");</script><span id="LST25C64FF5_129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_129?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_130?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_131?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_132?cpp=array&lt;");</script><span id="LST25C64FF5_133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_133?cpp=array&lt;");</script>Double<span id="LST25C64FF5_134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_134?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_135?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of k-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_KHot_2.htm">KHot(<span id="LST25C64FF5_136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_136?cpp=array&lt;");</script><span id="LST25C64FF5_137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_137?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_138?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_139?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Creates a matrix of k-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_KHot__1.htm">KHot<span id="LST25C64FF5_140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_140?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_141?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_142?cpp=array&lt;");</script><span id="LST25C64FF5_143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_143?cpp=array&lt;");</script>Boolean<span id="LST25C64FF5_144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_144?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_145?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of k-hot vectors, where all values at each row are 
              zero except for the ones in the positions where <span class="parameter">mask</span>
              are true, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_KHot__1_1.htm">KHot<span id="LST25C64FF5_146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_146?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_147?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_148"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_148?cpp=array&lt;");</script><span id="LST25C64FF5_149"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_149?cpp=array&lt;");</script>Boolean<span id="LST25C64FF5_150"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_150?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_151"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_151?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_152"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_152?cpp=array&lt;");</script><span id="LST25C64FF5_153"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_153?cpp=array&lt;");</script>T<span id="LST25C64FF5_154"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_154?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_155"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_155?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the ones in the positions where <span class="parameter">mask</span>
              are true, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_KHot__1_2.htm">KHot<span id="LST25C64FF5_156"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_156?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_157"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_157?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_158"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_158?cpp=array&lt;");</script><span id="LST25C64FF5_159"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_159?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_160"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_160?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_161"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_161?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Creates a matrix of k-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_KHot__1_3.htm">KHot<span id="LST25C64FF5_162"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_162?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_163"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_163?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_164"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_164?cpp=array&lt;");</script><span id="LST25C64FF5_165"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_165?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_166"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_166?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_167"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_167?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_168"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_168?cpp=array&lt;");</script><span id="LST25C64FF5_169"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_169?cpp=array&lt;");</script>T<span id="LST25C64FF5_170"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_170?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_171"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_171?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of k-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Magic.htm">Magic</a></td><td><div class="summary">
              Creates a jagged magic square matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot.htm">OneHot(<span id="LST25C64FF5_172"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_172?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_173"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_173?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which is set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot_1.htm">OneHot(<span id="LST25C64FF5_174"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_174?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_175"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_175?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_176"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_176?cpp=array&lt;");</script><span id="LST25C64FF5_177"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_177?cpp=array&lt;");</script>Double<span id="LST25C64FF5_178"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_178?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_179"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_179?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which is set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot_2.htm">OneHot(<span id="LST25C64FF5_180"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_180?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_181"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_181?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which is set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot__1.htm">OneHot<span id="LST25C64FF5_182"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_182?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_183"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_183?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_184"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_184?cpp=array&lt;");</script>Boolean<span id="LST25C64FF5_185"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_185?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the ones in the positions where <span class="parameter">mask</span>
              are true, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot__1_2.htm">OneHot<span id="LST25C64FF5_186"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_186?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_187"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_187?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_188"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_188?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_189"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_189?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which is set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot__1_1.htm">OneHot<span id="LST25C64FF5_190"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_190?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_191"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_191?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_192"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_192?cpp=array&lt;");</script>Boolean<span id="LST25C64FF5_193"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_193?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_194"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_194?cpp=array&lt;");</script><span id="LST25C64FF5_195"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_195?cpp=array&lt;");</script>T<span id="LST25C64FF5_196"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_196?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_197"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_197?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the ones in the positions where <span class="parameter">mask</span>
              are true, which are set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot__1_3.htm">OneHot<span id="LST25C64FF5_198"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_198?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_199"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_199?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_200"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_200?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_201"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_201?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which is set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_OneHot__1_4.htm">OneHot<span id="LST25C64FF5_202"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_202?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_203"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_203?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_204"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_204?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_205"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_205?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_206"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_206?cpp=array&lt;");</script><span id="LST25C64FF5_207"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_207?cpp=array&lt;");</script>T<span id="LST25C64FF5_208"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_208?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_209"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_209?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix of one-hot vectors, where all values at each row are 
              zero except for the indicated <span class="parameter">indices</span>, which is set to one.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Ones.htm">Ones(Int32, Int32)</a></td><td><div class="summary">
              Creates a zero-valued matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Ones__1.htm">Ones<span id="LST25C64FF5_210"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_210?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_211"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_211?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32)</a></td><td><div class="summary">
              Creates a zero-valued matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer.htm">Outer(<span id="LST25C64FF5_212"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_212?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_213"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_213?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_214"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_214?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_215"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_215?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_4.htm">Outer(<span id="LST25C64FF5_216"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_216?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_217"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_217?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_218"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_218?cpp=array&lt;");</script>Double<span id="LST25C64FF5_219"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_219?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_8.htm">Outer(<span id="LST25C64FF5_220"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_220?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_221"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_221?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_222"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_222?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_223"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_223?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_12.htm">Outer(<span id="LST25C64FF5_224"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_224?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_225"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_225?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_226"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_226?cpp=array&lt;");</script>Single<span id="LST25C64FF5_227"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_227?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_17.htm">Outer(<span id="LST25C64FF5_228"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_228?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_229"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_229?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_230"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_230?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_231"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_231?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_21.htm">Outer(<span id="LST25C64FF5_232"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_232?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_233"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_233?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_234"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_234?cpp=array&lt;");</script>Double<span id="LST25C64FF5_235"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_235?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_25.htm">Outer(<span id="LST25C64FF5_236"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_236?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_237"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_237?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_238"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_238?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_239"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_239?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_29.htm">Outer(<span id="LST25C64FF5_240"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_240?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_241"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_241?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_242"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_242?cpp=array&lt;");</script>Single<span id="LST25C64FF5_243"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_243?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_34.htm">Outer(<span id="LST25C64FF5_244"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_244?cpp=array&lt;");</script>Double<span id="LST25C64FF5_245"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_245?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_246"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_246?cpp=array&lt;");</script>Double<span id="LST25C64FF5_247"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_247?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_37.htm">Outer(<span id="LST25C64FF5_248"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_248?cpp=array&lt;");</script>Double<span id="LST25C64FF5_249"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_249?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_250"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_250?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_251"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_251?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_40.htm">Outer(<span id="LST25C64FF5_252"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_252?cpp=array&lt;");</script>Double<span id="LST25C64FF5_253"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_253?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_254"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_254?cpp=array&lt;");</script>Single<span id="LST25C64FF5_255"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_255?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_44.htm">Outer(<span id="LST25C64FF5_256"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_256?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_257"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_257?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_258"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_258?cpp=array&lt;");</script>Double<span id="LST25C64FF5_259"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_259?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_48.htm">Outer(<span id="LST25C64FF5_260"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_260?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_261"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_261?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_262"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_262?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_263"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_263?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_52.htm">Outer(<span id="LST25C64FF5_264"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_264?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_265"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_265?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_266"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_266?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_267"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_267?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_56.htm">Outer(<span id="LST25C64FF5_268"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_268?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_269"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_269?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_270"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_270?cpp=array&lt;");</script>Single<span id="LST25C64FF5_271"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_271?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_61.htm">Outer(<span id="LST25C64FF5_272"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_272?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_273"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_273?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_274"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_274?cpp=array&lt;");</script>Double<span id="LST25C64FF5_275"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_275?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_64.htm">Outer(<span id="LST25C64FF5_276"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_276?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_277"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_277?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_278"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_278?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_279"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_279?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_67.htm">Outer(<span id="LST25C64FF5_280"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_280?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_281"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_281?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_282"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_282?cpp=array&lt;");</script>Single<span id="LST25C64FF5_283"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_283?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_71.htm">Outer(<span id="LST25C64FF5_284"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_284?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_285"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_285?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_286"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_286?cpp=array&lt;");</script>Double<span id="LST25C64FF5_287"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_287?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_75.htm">Outer(<span id="LST25C64FF5_288"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_288?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_289"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_289?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_290"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_290?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_291"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_291?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_79.htm">Outer(<span id="LST25C64FF5_292"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_292?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_293"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_293?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_294"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_294?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_295"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_295?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_83.htm">Outer(<span id="LST25C64FF5_296"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_296?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_297"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_297?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_298"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_298?cpp=array&lt;");</script>Single<span id="LST25C64FF5_299"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_299?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_88.htm">Outer(<span id="LST25C64FF5_300"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_300?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_301"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_301?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_302"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_302?cpp=array&lt;");</script>Double<span id="LST25C64FF5_303"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_303?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_92.htm">Outer(<span id="LST25C64FF5_304"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_304?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_305"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_305?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_306"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_306?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_307"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_307?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_96.htm">Outer(<span id="LST25C64FF5_308"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_308?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_309"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_309?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_310"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_310?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_311"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_311?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_100.htm">Outer(<span id="LST25C64FF5_312"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_312?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_313"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_313?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_314"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_314?cpp=array&lt;");</script>Single<span id="LST25C64FF5_315"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_315?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_105.htm">Outer(<span id="LST25C64FF5_316"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_316?cpp=array&lt;");</script>Single<span id="LST25C64FF5_317"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_317?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_318"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_318?cpp=array&lt;");</script>Double<span id="LST25C64FF5_319"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_319?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_109.htm">Outer(<span id="LST25C64FF5_320"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_320?cpp=array&lt;");</script>Single<span id="LST25C64FF5_321"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_321?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_322"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_322?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_323"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_323?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_113.htm">Outer(<span id="LST25C64FF5_324"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_324?cpp=array&lt;");</script>Single<span id="LST25C64FF5_325"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_325?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_326"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_326?cpp=array&lt;");</script>Single<span id="LST25C64FF5_327"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_327?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_1.htm">Outer(<span id="LST25C64FF5_328"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_328?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_329"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_329?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_330"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_330?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_331"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_331?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_332"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_332?cpp=array&lt;");</script><span id="LST25C64FF5_333"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_333?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_334"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_334?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_335"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_335?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_2.htm">Outer(<span id="LST25C64FF5_336"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_336?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_337"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_337?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_338"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_338?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_339"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_339?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_340"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_340?cpp=array&lt;");</script><span id="LST25C64FF5_341"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_341?cpp=array&lt;");</script>Double<span id="LST25C64FF5_342"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_342?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_343"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_343?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_3.htm">Outer(<span id="LST25C64FF5_344"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_344?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_345"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_345?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_346"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_346?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_347"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_347?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_348"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_348?cpp=array&lt;");</script><span id="LST25C64FF5_349"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_349?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_350"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_350?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_351"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_351?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_5.htm">Outer(<span id="LST25C64FF5_352"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_352?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_353"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_353?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_354"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_354?cpp=array&lt;");</script>Double<span id="LST25C64FF5_355"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_355?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_356"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_356?cpp=array&lt;");</script><span id="LST25C64FF5_357"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_357?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_358"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_358?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_359"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_359?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_6.htm">Outer(<span id="LST25C64FF5_360"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_360?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_361"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_361?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_362"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_362?cpp=array&lt;");</script>Double<span id="LST25C64FF5_363"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_363?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_364"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_364?cpp=array&lt;");</script><span id="LST25C64FF5_365"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_365?cpp=array&lt;");</script>Double<span id="LST25C64FF5_366"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_366?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_367"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_367?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_7.htm">Outer(<span id="LST25C64FF5_368"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_368?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_369"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_369?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_370"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_370?cpp=array&lt;");</script>Double<span id="LST25C64FF5_371"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_371?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_372"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_372?cpp=array&lt;");</script><span id="LST25C64FF5_373"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_373?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_374"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_374?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_375"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_375?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_9.htm">Outer(<span id="LST25C64FF5_376"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_376?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_377"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_377?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_378"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_378?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_379"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_379?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_380"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_380?cpp=array&lt;");</script><span id="LST25C64FF5_381"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_381?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_382"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_382?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_383"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_383?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_10.htm">Outer(<span id="LST25C64FF5_384"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_384?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_385"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_385?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_386"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_386?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_387"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_387?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_388"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_388?cpp=array&lt;");</script><span id="LST25C64FF5_389"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_389?cpp=array&lt;");</script>Double<span id="LST25C64FF5_390"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_390?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_391"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_391?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_11.htm">Outer(<span id="LST25C64FF5_392"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_392?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_393"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_393?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_394"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_394?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_395"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_395?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_396"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_396?cpp=array&lt;");</script><span id="LST25C64FF5_397"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_397?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_398"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_398?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_399"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_399?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_13.htm">Outer(<span id="LST25C64FF5_400"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_400?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_401"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_401?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_402"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_402?cpp=array&lt;");</script>Single<span id="LST25C64FF5_403"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_403?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_404"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_404?cpp=array&lt;");</script><span id="LST25C64FF5_405"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_405?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_406"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_406?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_407"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_407?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_14.htm">Outer(<span id="LST25C64FF5_408"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_408?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_409"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_409?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_410"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_410?cpp=array&lt;");</script>Single<span id="LST25C64FF5_411"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_411?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_412"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_412?cpp=array&lt;");</script><span id="LST25C64FF5_413"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_413?cpp=array&lt;");</script>Double<span id="LST25C64FF5_414"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_414?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_415"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_415?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_15.htm">Outer(<span id="LST25C64FF5_416"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_416?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_417"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_417?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_418"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_418?cpp=array&lt;");</script>Single<span id="LST25C64FF5_419"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_419?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_420"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_420?cpp=array&lt;");</script><span id="LST25C64FF5_421"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_421?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_422"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_422?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_423"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_423?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_16.htm">Outer(<span id="LST25C64FF5_424"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_424?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_425"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_425?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_426"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_426?cpp=array&lt;");</script>Single<span id="LST25C64FF5_427"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_427?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_428"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_428?cpp=array&lt;");</script><span id="LST25C64FF5_429"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_429?cpp=array&lt;");</script>Single<span id="LST25C64FF5_430"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_430?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_431"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_431?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_18.htm">Outer(<span id="LST25C64FF5_432"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_432?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_433"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_433?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_434"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_434?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_435"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_435?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_436"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_436?cpp=array&lt;");</script><span id="LST25C64FF5_437"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_437?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_438"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_438?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_439"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_439?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_19.htm">Outer(<span id="LST25C64FF5_440"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_440?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_441"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_441?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_442"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_442?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_443"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_443?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_444"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_444?cpp=array&lt;");</script><span id="LST25C64FF5_445"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_445?cpp=array&lt;");</script>Double<span id="LST25C64FF5_446"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_446?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_447"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_447?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_20.htm">Outer(<span id="LST25C64FF5_448"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_448?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_449"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_449?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_450"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_450?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_451"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_451?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_452"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_452?cpp=array&lt;");</script><span id="LST25C64FF5_453"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_453?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_454"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_454?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_455"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_455?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_22.htm">Outer(<span id="LST25C64FF5_456"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_456?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_457"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_457?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_458"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_458?cpp=array&lt;");</script>Double<span id="LST25C64FF5_459"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_459?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_460"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_460?cpp=array&lt;");</script><span id="LST25C64FF5_461"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_461?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_462"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_462?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_463"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_463?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_23.htm">Outer(<span id="LST25C64FF5_464"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_464?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_465"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_465?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_466"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_466?cpp=array&lt;");</script>Double<span id="LST25C64FF5_467"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_467?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_468"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_468?cpp=array&lt;");</script><span id="LST25C64FF5_469"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_469?cpp=array&lt;");</script>Double<span id="LST25C64FF5_470"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_470?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_471"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_471?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_24.htm">Outer(<span id="LST25C64FF5_472"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_472?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_473"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_473?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_474"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_474?cpp=array&lt;");</script>Double<span id="LST25C64FF5_475"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_475?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_476"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_476?cpp=array&lt;");</script><span id="LST25C64FF5_477"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_477?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_478"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_478?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_479"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_479?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_26.htm">Outer(<span id="LST25C64FF5_480"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_480?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_481"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_481?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_482"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_482?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_483"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_483?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_484"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_484?cpp=array&lt;");</script><span id="LST25C64FF5_485"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_485?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_486"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_486?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_487"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_487?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_27.htm">Outer(<span id="LST25C64FF5_488"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_488?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_489"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_489?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_490"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_490?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_491"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_491?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_492"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_492?cpp=array&lt;");</script><span id="LST25C64FF5_493"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_493?cpp=array&lt;");</script>Double<span id="LST25C64FF5_494"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_494?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_495"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_495?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_28.htm">Outer(<span id="LST25C64FF5_496"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_496?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_497"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_497?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_498"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_498?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_499"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_499?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_500"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_500?cpp=array&lt;");</script><span id="LST25C64FF5_501"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_501?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_502"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_502?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_503"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_503?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_30.htm">Outer(<span id="LST25C64FF5_504"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_504?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_505"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_505?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_506"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_506?cpp=array&lt;");</script>Single<span id="LST25C64FF5_507"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_507?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_508"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_508?cpp=array&lt;");</script><span id="LST25C64FF5_509"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_509?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_510"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_510?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_511"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_511?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_31.htm">Outer(<span id="LST25C64FF5_512"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_512?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_513"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_513?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_514"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_514?cpp=array&lt;");</script>Single<span id="LST25C64FF5_515"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_515?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_516"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_516?cpp=array&lt;");</script><span id="LST25C64FF5_517"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_517?cpp=array&lt;");</script>Double<span id="LST25C64FF5_518"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_518?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_519"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_519?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_32.htm">Outer(<span id="LST25C64FF5_520"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_520?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_521"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_521?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_522"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_522?cpp=array&lt;");</script>Single<span id="LST25C64FF5_523"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_523?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_524"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_524?cpp=array&lt;");</script><span id="LST25C64FF5_525"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_525?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_526"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_526?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_527"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_527?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_33.htm">Outer(<span id="LST25C64FF5_528"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_528?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_529"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_529?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_530"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_530?cpp=array&lt;");</script>Single<span id="LST25C64FF5_531"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_531?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_532"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_532?cpp=array&lt;");</script><span id="LST25C64FF5_533"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_533?cpp=array&lt;");</script>Single<span id="LST25C64FF5_534"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_534?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_535"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_535?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_35.htm">Outer(<span id="LST25C64FF5_536"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_536?cpp=array&lt;");</script>Double<span id="LST25C64FF5_537"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_537?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_538"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_538?cpp=array&lt;");</script>Double<span id="LST25C64FF5_539"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_539?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_540"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_540?cpp=array&lt;");</script><span id="LST25C64FF5_541"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_541?cpp=array&lt;");</script>Double<span id="LST25C64FF5_542"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_542?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_543"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_543?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_36.htm">Outer(<span id="LST25C64FF5_544"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_544?cpp=array&lt;");</script>Double<span id="LST25C64FF5_545"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_545?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_546"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_546?cpp=array&lt;");</script>Double<span id="LST25C64FF5_547"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_547?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_548"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_548?cpp=array&lt;");</script><span id="LST25C64FF5_549"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_549?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_550"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_550?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_551"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_551?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_38.htm">Outer(<span id="LST25C64FF5_552"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_552?cpp=array&lt;");</script>Double<span id="LST25C64FF5_553"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_553?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_554"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_554?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_555"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_555?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_556"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_556?cpp=array&lt;");</script><span id="LST25C64FF5_557"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_557?cpp=array&lt;");</script>Double<span id="LST25C64FF5_558"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_558?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_559"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_559?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_39.htm">Outer(<span id="LST25C64FF5_560"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_560?cpp=array&lt;");</script>Double<span id="LST25C64FF5_561"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_561?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_562"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_562?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_563"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_563?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_564"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_564?cpp=array&lt;");</script><span id="LST25C64FF5_565"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_565?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_566"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_566?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_567"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_567?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_41.htm">Outer(<span id="LST25C64FF5_568"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_568?cpp=array&lt;");</script>Double<span id="LST25C64FF5_569"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_569?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_570"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_570?cpp=array&lt;");</script>Single<span id="LST25C64FF5_571"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_571?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_572"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_572?cpp=array&lt;");</script><span id="LST25C64FF5_573"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_573?cpp=array&lt;");</script>Double<span id="LST25C64FF5_574"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_574?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_575"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_575?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_42.htm">Outer(<span id="LST25C64FF5_576"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_576?cpp=array&lt;");</script>Double<span id="LST25C64FF5_577"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_577?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_578"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_578?cpp=array&lt;");</script>Single<span id="LST25C64FF5_579"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_579?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_580"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_580?cpp=array&lt;");</script><span id="LST25C64FF5_581"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_581?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_582"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_582?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_583"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_583?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_43.htm">Outer(<span id="LST25C64FF5_584"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_584?cpp=array&lt;");</script>Double<span id="LST25C64FF5_585"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_585?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_586"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_586?cpp=array&lt;");</script>Single<span id="LST25C64FF5_587"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_587?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_588"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_588?cpp=array&lt;");</script><span id="LST25C64FF5_589"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_589?cpp=array&lt;");</script>Single<span id="LST25C64FF5_590"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_590?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_591"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_591?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_45.htm">Outer(<span id="LST25C64FF5_592"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_592?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_593"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_593?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_594"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_594?cpp=array&lt;");</script>Double<span id="LST25C64FF5_595"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_595?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_596"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_596?cpp=array&lt;");</script><span id="LST25C64FF5_597"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_597?cpp=array&lt;");</script>Double<span id="LST25C64FF5_598"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_598?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_599"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_599?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_46.htm">Outer(<span id="LST25C64FF5_600"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_600?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_601"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_601?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_602"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_602?cpp=array&lt;");</script>Double<span id="LST25C64FF5_603"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_603?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_604"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_604?cpp=array&lt;");</script><span id="LST25C64FF5_605"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_605?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_606"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_606?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_607"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_607?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_47.htm">Outer(<span id="LST25C64FF5_608"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_608?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_609"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_609?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_610"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_610?cpp=array&lt;");</script>Double<span id="LST25C64FF5_611"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_611?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_612"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_612?cpp=array&lt;");</script><span id="LST25C64FF5_613"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_613?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_614"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_614?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_615"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_615?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_49.htm">Outer(<span id="LST25C64FF5_616"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_616?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_617"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_617?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_618"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_618?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_619"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_619?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_620"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_620?cpp=array&lt;");</script><span id="LST25C64FF5_621"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_621?cpp=array&lt;");</script>Double<span id="LST25C64FF5_622"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_622?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_623"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_623?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_50.htm">Outer(<span id="LST25C64FF5_624"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_624?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_625"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_625?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_626"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_626?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_627"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_627?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_628"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_628?cpp=array&lt;");</script><span id="LST25C64FF5_629"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_629?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_630"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_630?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_631"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_631?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_51.htm">Outer(<span id="LST25C64FF5_632"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_632?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_633"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_633?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_634"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_634?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_635"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_635?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_636"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_636?cpp=array&lt;");</script><span id="LST25C64FF5_637"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_637?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_638"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_638?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_639"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_639?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_53.htm">Outer(<span id="LST25C64FF5_640"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_640?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_641"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_641?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_642"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_642?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_643"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_643?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_644"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_644?cpp=array&lt;");</script><span id="LST25C64FF5_645"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_645?cpp=array&lt;");</script>Double<span id="LST25C64FF5_646"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_646?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_647"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_647?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_54.htm">Outer(<span id="LST25C64FF5_648"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_648?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_649"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_649?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_650"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_650?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_651"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_651?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_652"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_652?cpp=array&lt;");</script><span id="LST25C64FF5_653"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_653?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_654"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_654?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_655"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_655?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_55.htm">Outer(<span id="LST25C64FF5_656"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_656?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_657"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_657?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_658"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_658?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_659"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_659?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_660"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_660?cpp=array&lt;");</script><span id="LST25C64FF5_661"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_661?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_662"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_662?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_663"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_663?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_57.htm">Outer(<span id="LST25C64FF5_664"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_664?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_665"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_665?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_666"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_666?cpp=array&lt;");</script>Single<span id="LST25C64FF5_667"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_667?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_668"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_668?cpp=array&lt;");</script><span id="LST25C64FF5_669"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_669?cpp=array&lt;");</script>Double<span id="LST25C64FF5_670"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_670?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_671"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_671?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_58.htm">Outer(<span id="LST25C64FF5_672"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_672?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_673"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_673?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_674"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_674?cpp=array&lt;");</script>Single<span id="LST25C64FF5_675"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_675?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_676"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_676?cpp=array&lt;");</script><span id="LST25C64FF5_677"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_677?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_678"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_678?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_679"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_679?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_59.htm">Outer(<span id="LST25C64FF5_680"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_680?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_681"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_681?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_682"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_682?cpp=array&lt;");</script>Single<span id="LST25C64FF5_683"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_683?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_684"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_684?cpp=array&lt;");</script><span id="LST25C64FF5_685"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_685?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_686"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_686?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_687"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_687?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_60.htm">Outer(<span id="LST25C64FF5_688"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_688?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_689"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_689?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_690"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_690?cpp=array&lt;");</script>Single<span id="LST25C64FF5_691"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_691?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_692"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_692?cpp=array&lt;");</script><span id="LST25C64FF5_693"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_693?cpp=array&lt;");</script>Single<span id="LST25C64FF5_694"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_694?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_695"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_695?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_62.htm">Outer(<span id="LST25C64FF5_696"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_696?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_697"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_697?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_698"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_698?cpp=array&lt;");</script>Double<span id="LST25C64FF5_699"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_699?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_700"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_700?cpp=array&lt;");</script><span id="LST25C64FF5_701"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_701?cpp=array&lt;");</script>Double<span id="LST25C64FF5_702"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_702?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_703"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_703?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_63.htm">Outer(<span id="LST25C64FF5_704"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_704?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_705"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_705?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_706"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_706?cpp=array&lt;");</script>Double<span id="LST25C64FF5_707"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_707?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_708"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_708?cpp=array&lt;");</script><span id="LST25C64FF5_709"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_709?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_710"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_710?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_711"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_711?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_65.htm">Outer(<span id="LST25C64FF5_712"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_712?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_713"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_713?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_714"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_714?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_715"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_715?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_716"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_716?cpp=array&lt;");</script><span id="LST25C64FF5_717"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_717?cpp=array&lt;");</script>Double<span id="LST25C64FF5_718"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_718?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_719"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_719?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_66.htm">Outer(<span id="LST25C64FF5_720"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_720?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_721"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_721?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_722"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_722?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_723"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_723?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_724"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_724?cpp=array&lt;");</script><span id="LST25C64FF5_725"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_725?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_726"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_726?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_727"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_727?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_68.htm">Outer(<span id="LST25C64FF5_728"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_728?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_729"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_729?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_730"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_730?cpp=array&lt;");</script>Single<span id="LST25C64FF5_731"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_731?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_732"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_732?cpp=array&lt;");</script><span id="LST25C64FF5_733"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_733?cpp=array&lt;");</script>Double<span id="LST25C64FF5_734"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_734?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_735"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_735?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_69.htm">Outer(<span id="LST25C64FF5_736"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_736?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_737"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_737?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_738"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_738?cpp=array&lt;");</script>Single<span id="LST25C64FF5_739"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_739?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_740"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_740?cpp=array&lt;");</script><span id="LST25C64FF5_741"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_741?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_742"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_742?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_743"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_743?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_70.htm">Outer(<span id="LST25C64FF5_744"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_744?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_745"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_745?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_746"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_746?cpp=array&lt;");</script>Single<span id="LST25C64FF5_747"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_747?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_748"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_748?cpp=array&lt;");</script><span id="LST25C64FF5_749"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_749?cpp=array&lt;");</script>Single<span id="LST25C64FF5_750"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_750?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_751"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_751?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_72.htm">Outer(<span id="LST25C64FF5_752"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_752?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_753"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_753?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_754"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_754?cpp=array&lt;");</script>Double<span id="LST25C64FF5_755"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_755?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_756"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_756?cpp=array&lt;");</script><span id="LST25C64FF5_757"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_757?cpp=array&lt;");</script>Double<span id="LST25C64FF5_758"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_758?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_759"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_759?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_73.htm">Outer(<span id="LST25C64FF5_760"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_760?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_761"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_761?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_762"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_762?cpp=array&lt;");</script>Double<span id="LST25C64FF5_763"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_763?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_764"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_764?cpp=array&lt;");</script><span id="LST25C64FF5_765"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_765?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_766"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_766?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_767"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_767?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_74.htm">Outer(<span id="LST25C64FF5_768"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_768?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_769"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_769?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_770"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_770?cpp=array&lt;");</script>Double<span id="LST25C64FF5_771"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_771?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_772"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_772?cpp=array&lt;");</script><span id="LST25C64FF5_773"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_773?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_774"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_774?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_775"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_775?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_76.htm">Outer(<span id="LST25C64FF5_776"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_776?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_777"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_777?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_778"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_778?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_779"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_779?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_780"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_780?cpp=array&lt;");</script><span id="LST25C64FF5_781"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_781?cpp=array&lt;");</script>Double<span id="LST25C64FF5_782"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_782?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_783"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_783?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_77.htm">Outer(<span id="LST25C64FF5_784"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_784?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_785"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_785?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_786"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_786?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_787"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_787?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_788"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_788?cpp=array&lt;");</script><span id="LST25C64FF5_789"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_789?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_790"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_790?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_791"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_791?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_78.htm">Outer(<span id="LST25C64FF5_792"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_792?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_793"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_793?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_794"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_794?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_795"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_795?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_796"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_796?cpp=array&lt;");</script><span id="LST25C64FF5_797"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_797?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_798"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_798?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_799"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_799?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_80.htm">Outer(<span id="LST25C64FF5_800"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_800?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_801"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_801?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_802"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_802?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_803"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_803?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_804"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_804?cpp=array&lt;");</script><span id="LST25C64FF5_805"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_805?cpp=array&lt;");</script>Double<span id="LST25C64FF5_806"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_806?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_807"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_807?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_81.htm">Outer(<span id="LST25C64FF5_808"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_808?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_809"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_809?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_810"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_810?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_811"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_811?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_812"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_812?cpp=array&lt;");</script><span id="LST25C64FF5_813"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_813?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_814"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_814?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_815"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_815?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_82.htm">Outer(<span id="LST25C64FF5_816"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_816?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_817"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_817?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_818"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_818?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_819"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_819?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_820"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_820?cpp=array&lt;");</script><span id="LST25C64FF5_821"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_821?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_822"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_822?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_823"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_823?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_84.htm">Outer(<span id="LST25C64FF5_824"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_824?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_825"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_825?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_826"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_826?cpp=array&lt;");</script>Single<span id="LST25C64FF5_827"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_827?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_828"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_828?cpp=array&lt;");</script><span id="LST25C64FF5_829"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_829?cpp=array&lt;");</script>Double<span id="LST25C64FF5_830"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_830?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_831"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_831?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_85.htm">Outer(<span id="LST25C64FF5_832"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_832?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_833"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_833?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_834"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_834?cpp=array&lt;");</script>Single<span id="LST25C64FF5_835"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_835?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_836"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_836?cpp=array&lt;");</script><span id="LST25C64FF5_837"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_837?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_838"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_838?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_839"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_839?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_86.htm">Outer(<span id="LST25C64FF5_840"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_840?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_841"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_841?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_842"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_842?cpp=array&lt;");</script>Single<span id="LST25C64FF5_843"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_843?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_844"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_844?cpp=array&lt;");</script><span id="LST25C64FF5_845"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_845?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_846"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_846?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_847"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_847?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_87.htm">Outer(<span id="LST25C64FF5_848"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_848?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_849"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_849?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_850"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_850?cpp=array&lt;");</script>Single<span id="LST25C64FF5_851"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_851?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_852"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_852?cpp=array&lt;");</script><span id="LST25C64FF5_853"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_853?cpp=array&lt;");</script>Single<span id="LST25C64FF5_854"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_854?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_855"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_855?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_89.htm">Outer(<span id="LST25C64FF5_856"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_856?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_857"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_857?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_858"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_858?cpp=array&lt;");</script>Double<span id="LST25C64FF5_859"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_859?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_860"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_860?cpp=array&lt;");</script><span id="LST25C64FF5_861"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_861?cpp=array&lt;");</script>Double<span id="LST25C64FF5_862"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_862?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_863"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_863?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_90.htm">Outer(<span id="LST25C64FF5_864"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_864?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_865"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_865?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_866"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_866?cpp=array&lt;");</script>Double<span id="LST25C64FF5_867"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_867?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_868"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_868?cpp=array&lt;");</script><span id="LST25C64FF5_869"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_869?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_870"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_870?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_871"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_871?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_91.htm">Outer(<span id="LST25C64FF5_872"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_872?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_873"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_873?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_874"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_874?cpp=array&lt;");</script>Double<span id="LST25C64FF5_875"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_875?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_876"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_876?cpp=array&lt;");</script><span id="LST25C64FF5_877"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_877?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_878"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_878?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_879"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_879?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_93.htm">Outer(<span id="LST25C64FF5_880"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_880?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_881"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_881?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_882"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_882?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_883"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_883?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_884"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_884?cpp=array&lt;");</script><span id="LST25C64FF5_885"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_885?cpp=array&lt;");</script>Double<span id="LST25C64FF5_886"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_886?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_887"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_887?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_94.htm">Outer(<span id="LST25C64FF5_888"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_888?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_889"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_889?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_890"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_890?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_891"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_891?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_892"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_892?cpp=array&lt;");</script><span id="LST25C64FF5_893"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_893?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_894"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_894?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_895"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_895?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_95.htm">Outer(<span id="LST25C64FF5_896"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_896?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_897"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_897?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_898"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_898?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_899"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_899?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_900"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_900?cpp=array&lt;");</script><span id="LST25C64FF5_901"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_901?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_902"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_902?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_903"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_903?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_97.htm">Outer(<span id="LST25C64FF5_904"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_904?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_905"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_905?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_906"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_906?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_907"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_907?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_908"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_908?cpp=array&lt;");</script><span id="LST25C64FF5_909"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_909?cpp=array&lt;");</script>Double<span id="LST25C64FF5_910"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_910?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_911"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_911?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_98.htm">Outer(<span id="LST25C64FF5_912"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_912?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_913"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_913?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_914"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_914?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_915"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_915?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_916"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_916?cpp=array&lt;");</script><span id="LST25C64FF5_917"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_917?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_918"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_918?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_919"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_919?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_99.htm">Outer(<span id="LST25C64FF5_920"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_920?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_921"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_921?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_922"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_922?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_923"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_923?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_924"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_924?cpp=array&lt;");</script><span id="LST25C64FF5_925"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_925?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_926"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_926?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_927"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_927?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_101.htm">Outer(<span id="LST25C64FF5_928"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_928?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_929"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_929?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_930"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_930?cpp=array&lt;");</script>Single<span id="LST25C64FF5_931"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_931?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_932"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_932?cpp=array&lt;");</script><span id="LST25C64FF5_933"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_933?cpp=array&lt;");</script>Double<span id="LST25C64FF5_934"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_934?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_935"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_935?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_102.htm">Outer(<span id="LST25C64FF5_936"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_936?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_937"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_937?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_938"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_938?cpp=array&lt;");</script>Single<span id="LST25C64FF5_939"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_939?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_940"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_940?cpp=array&lt;");</script><span id="LST25C64FF5_941"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_941?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_942"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_942?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_943"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_943?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_103.htm">Outer(<span id="LST25C64FF5_944"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_944?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_945"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_945?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_946"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_946?cpp=array&lt;");</script>Single<span id="LST25C64FF5_947"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_947?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_948"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_948?cpp=array&lt;");</script><span id="LST25C64FF5_949"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_949?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_950"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_950?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_951"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_951?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_104.htm">Outer(<span id="LST25C64FF5_952"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_952?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_953"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_953?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_954"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_954?cpp=array&lt;");</script>Single<span id="LST25C64FF5_955"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_955?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_956"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_956?cpp=array&lt;");</script><span id="LST25C64FF5_957"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_957?cpp=array&lt;");</script>Single<span id="LST25C64FF5_958"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_958?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_959"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_959?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_106.htm">Outer(<span id="LST25C64FF5_960"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_960?cpp=array&lt;");</script>Single<span id="LST25C64FF5_961"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_961?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_962"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_962?cpp=array&lt;");</script>Double<span id="LST25C64FF5_963"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_963?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_964"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_964?cpp=array&lt;");</script><span id="LST25C64FF5_965"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_965?cpp=array&lt;");</script>Double<span id="LST25C64FF5_966"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_966?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_967"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_967?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_107.htm">Outer(<span id="LST25C64FF5_968"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_968?cpp=array&lt;");</script>Single<span id="LST25C64FF5_969"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_969?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_970"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_970?cpp=array&lt;");</script>Double<span id="LST25C64FF5_971"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_971?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_972"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_972?cpp=array&lt;");</script><span id="LST25C64FF5_973"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_973?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_974"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_974?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_975"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_975?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_108.htm">Outer(<span id="LST25C64FF5_976"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_976?cpp=array&lt;");</script>Single<span id="LST25C64FF5_977"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_977?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_978"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_978?cpp=array&lt;");</script>Double<span id="LST25C64FF5_979"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_979?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_980"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_980?cpp=array&lt;");</script><span id="LST25C64FF5_981"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_981?cpp=array&lt;");</script>Single<span id="LST25C64FF5_982"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_982?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_983"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_983?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_110.htm">Outer(<span id="LST25C64FF5_984"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_984?cpp=array&lt;");</script>Single<span id="LST25C64FF5_985"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_985?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_986"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_986?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_987"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_987?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_988"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_988?cpp=array&lt;");</script><span id="LST25C64FF5_989"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_989?cpp=array&lt;");</script>Double<span id="LST25C64FF5_990"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_990?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_991"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_991?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_111.htm">Outer(<span id="LST25C64FF5_992"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_992?cpp=array&lt;");</script>Single<span id="LST25C64FF5_993"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_993?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_994"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_994?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_995"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_995?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_996"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_996?cpp=array&lt;");</script><span id="LST25C64FF5_997"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_997?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_998"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_998?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_999"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_999?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_112.htm">Outer(<span id="LST25C64FF5_1000"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1000?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1001"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1001?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1002"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1002?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_1003"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1003?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1004"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1004?cpp=array&lt;");</script><span id="LST25C64FF5_1005"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1005?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1006"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1006?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1007"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1007?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_114.htm">Outer(<span id="LST25C64FF5_1008"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1008?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1009"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1009?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1010"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1010?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1011"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1011?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1012"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1012?cpp=array&lt;");</script><span id="LST25C64FF5_1013"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1013?cpp=array&lt;");</script>Double<span id="LST25C64FF5_1014"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1014?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1015"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1015?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_115.htm">Outer(<span id="LST25C64FF5_1016"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1016?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1017"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1017?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1018"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1018?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1019"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1019?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1020"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1020?cpp=array&lt;");</script><span id="LST25C64FF5_1021"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1021?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_1022"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1022?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1023"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1023?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Outer_116.htm">Outer(<span id="LST25C64FF5_1024"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1024?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1025"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1025?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1026"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1026?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1027"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1027?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST25C64FF5_1028"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1028?cpp=array&lt;");</script><span id="LST25C64FF5_1029"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1029?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1030"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1030?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1031"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1031?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Gets the outer product (matrix product) between two vectors (a*bT).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Parse.htm">Parse(String)</a></td><td><div class="summary">
              Converts the string representation of a matrix to its
              double-precision floating-point number matrix equivalent.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Parse_1.htm">Parse(String, IMatrixFormatProvider)</a></td><td><div class="summary">
              Converts the string representation of a matrix to its
              double-precision floating-point number matrix equivalent.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random.htm">Random(Int32)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_5.htm">Random(Int32, Int32)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_1.htm">Random(Int32, Byte, Byte, Boolean, <span id="LST25C64FF5_1032"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1032?cpp=array&lt;");</script><span id="LST25C64FF5_1033"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1033?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_1034"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1034?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1035"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1035?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_2.htm">Random(Int32, Decimal, Decimal, Boolean, <span id="LST25C64FF5_1036"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1036?cpp=array&lt;");</script><span id="LST25C64FF5_1037"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1037?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_1038"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1038?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1039"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1039?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_3.htm">Random(Int32, Double, Double, Boolean, <span id="LST25C64FF5_1040"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1040?cpp=array&lt;");</script><span id="LST25C64FF5_1041"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1041?cpp=array&lt;");</script>Double<span id="LST25C64FF5_1042"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1042?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1043"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1043?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_4.htm">Random(Int32, Int16, Int16, Boolean, <span id="LST25C64FF5_1044"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1044?cpp=array&lt;");</script><span id="LST25C64FF5_1045"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1045?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_1046"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1046?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1047"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1047?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_6.htm">Random(Int32, Int32, Byte, Byte, <span id="LST25C64FF5_1048"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1048?cpp=array&lt;");</script><span id="LST25C64FF5_1049"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1049?cpp=array&lt;");</script>Byte<span id="LST25C64FF5_1050"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1050?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1051"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1051?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_7.htm">Random(Int32, Int32, Decimal, Decimal, <span id="LST25C64FF5_1052"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1052?cpp=array&lt;");</script><span id="LST25C64FF5_1053"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1053?cpp=array&lt;");</script>Decimal<span id="LST25C64FF5_1054"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1054?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1055"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1055?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_8.htm">Random(Int32, Int32, Double, Double, <span id="LST25C64FF5_1056"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1056?cpp=array&lt;");</script><span id="LST25C64FF5_1057"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1057?cpp=array&lt;");</script>Double<span id="LST25C64FF5_1058"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1058?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1059"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1059?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_9.htm">Random(Int32, Int32, Int16, Int16, <span id="LST25C64FF5_1060"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1060?cpp=array&lt;");</script><span id="LST25C64FF5_1061"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1061?cpp=array&lt;");</script>Int16<span id="LST25C64FF5_1062"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1062?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1063"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1063?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_10.htm">Random(Int32, Int32, Int32, Boolean, <span id="LST25C64FF5_1064"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1064?cpp=array&lt;");</script><span id="LST25C64FF5_1065"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1065?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_1066"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1066?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1067"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1067?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_11.htm">Random(Int32, Int32, Int32, Int32, <span id="LST25C64FF5_1068"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1068?cpp=array&lt;");</script><span id="LST25C64FF5_1069"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1069?cpp=array&lt;");</script>Int32<span id="LST25C64FF5_1070"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1070?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1071"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1071?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_12.htm">Random(Int32, Int32, Int64, Int64, <span id="LST25C64FF5_1072"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1072?cpp=array&lt;");</script><span id="LST25C64FF5_1073"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1073?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_1074"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1074?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1075"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1075?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_13.htm">Random(Int32, Int32, SByte, SByte, <span id="LST25C64FF5_1076"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1076?cpp=array&lt;");</script><span id="LST25C64FF5_1077"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1077?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_1078"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1078?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1079"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1079?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_14.htm">Random(Int32, Int32, Single, Single, <span id="LST25C64FF5_1080"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1080?cpp=array&lt;");</script><span id="LST25C64FF5_1081"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1081?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1082"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1082?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1083"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1083?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_15.htm">Random(Int32, Int32, UInt16, UInt16, <span id="LST25C64FF5_1084"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1084?cpp=array&lt;");</script><span id="LST25C64FF5_1085"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1085?cpp=array&lt;");</script>UInt16<span id="LST25C64FF5_1086"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1086?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1087"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1087?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_16.htm">Random(Int32, Int32, UInt64, UInt64, <span id="LST25C64FF5_1088"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1088?cpp=array&lt;");</script><span id="LST25C64FF5_1089"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1089?cpp=array&lt;");</script>UInt64<span id="LST25C64FF5_1090"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1090?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1091"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1091?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_17.htm">Random(Int32, Int64, Int64, Boolean, <span id="LST25C64FF5_1092"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1092?cpp=array&lt;");</script><span id="LST25C64FF5_1093"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1093?cpp=array&lt;");</script>Int64<span id="LST25C64FF5_1094"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1094?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1095"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1095?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_18.htm">Random(Int32, SByte, SByte, Boolean, <span id="LST25C64FF5_1096"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1096?cpp=array&lt;");</script><span id="LST25C64FF5_1097"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1097?cpp=array&lt;");</script>SByte<span id="LST25C64FF5_1098"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1098?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1099"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1099?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_19.htm">Random(Int32, Single, Single, Boolean, <span id="LST25C64FF5_1100"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1100?cpp=array&lt;");</script><span id="LST25C64FF5_1101"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1101?cpp=array&lt;");</script>Single<span id="LST25C64FF5_1102"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1102?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1103"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1103?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_20.htm">Random(Int32, UInt16, UInt16, Boolean, <span id="LST25C64FF5_1104"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1104?cpp=array&lt;");</script><span id="LST25C64FF5_1105"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1105?cpp=array&lt;");</script>UInt16<span id="LST25C64FF5_1106"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1106?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1107"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1107?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random_21.htm">Random(Int32, UInt64, UInt64, Boolean, <span id="LST25C64FF5_1108"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1108?cpp=array&lt;");</script><span id="LST25C64FF5_1109"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1109?cpp=array&lt;");</script>UInt64<span id="LST25C64FF5_1110"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1110?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1111"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1111?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a matrix with uniformly distributed random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random__1.htm">Random<span id="LST25C64FF5_1112"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1112?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1113"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1113?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, IRandomNumberGenerator<span id="LST25C64FF5_1114"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1114?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1115"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1115?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, Boolean, <span id="LST25C64FF5_1116"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1116?cpp=array&lt;");</script><span id="LST25C64FF5_1117"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1117?cpp=array&lt;");</script>T<span id="LST25C64FF5_1118"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1118?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1119"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1119?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a square matrix matrix with random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Random__1_1.htm">Random<span id="LST25C64FF5_1120"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1120?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1121"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1121?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, IRandomNumberGenerator<span id="LST25C64FF5_1122"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1122?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1123"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1123?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>, <span id="LST25C64FF5_1124"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1124?cpp=array&lt;");</script><span id="LST25C64FF5_1125"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1125?cpp=array&lt;");</script>T<span id="LST25C64FF5_1126"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1126?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1127"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1127?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Creates a rows-by-cols matrix with random data.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Reshape__1.htm">Reshape<span id="LST25C64FF5_1128"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1128?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1129"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1129?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_1130"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1130?cpp=array&lt;");</script>T<span id="LST25C64FF5_1131"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1131?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, MatrixOrder)</a></td><td><div class="summary">
              Transforms a vector into a matrix of given dimensions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Reshape__1_1.htm">Reshape<span id="LST25C64FF5_1132"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1132?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1133"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1133?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(<span id="LST25C64FF5_1134"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1134?cpp=array&lt;");</script>T<span id="LST25C64FF5_1135"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1135?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, Int32, Int32, <span id="LST25C64FF5_1136"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1136?cpp=array&lt;");</script><span id="LST25C64FF5_1137"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1137?cpp=array&lt;");</script>T<span id="LST25C64FF5_1138"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1138?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script><span id="LST25C64FF5_1139"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1139?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, MatrixOrder)</a></td><td><div class="summary">
              Transforms a vector into a matrix of given dimensions.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_RowVector__1.htm">RowVector<span id="LST25C64FF5_1140"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1140?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1141"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1141?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Creates a 1xN matrix with a single row vector of size N.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Square__1.htm">Square<span id="LST25C64FF5_1142"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1142?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1143"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1143?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Creates a jagged matrix with all values set to a given value.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Transpose__1.htm">Transpose<span id="LST25C64FF5_1144"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1144?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1145"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1145?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Gets the transpose of a matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_TryParse.htm">TryParse</a></td><td><div class="summary">
              Converts the string representation of a matrix to its
              double-precision floating-point number matrix equivalent.
              A return value indicates whether the conversion succeeded or failed.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Zeros.htm">Zeros(Int32, Int32)</a></td><td><div class="summary">
              Creates a zero-valued matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Zeros_1.htm">Zeros(Int32, Int32, Int32)</a></td><td><div class="summary">
              Creates a zero-valued rank-3 tensor.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Zeros__1.htm">Zeros<span id="LST25C64FF5_1146"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1146?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1147"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1147?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32)</a></td><td><div class="summary">
              Creates a zero-valued matrix.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_Accord_Math_Jagged_Zeros__1_1.htm">Zeros<span id="LST25C64FF5_1148"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1148?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST25C64FF5_1149"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST25C64FF5_1149?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script>(Int32, Int32, Int32)</a></td><td><div class="summary">
              Creates a zero-valued rank-3 tensor.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID1RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_Accord_Math_Jagged.htm">Jagged Class</a></div><div class="seeAlsoStyle"><a href="N_Accord_Math.htm">Accord.Math Namespace</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>