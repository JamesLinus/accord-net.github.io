<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>ParallelResilientBackpropagationLearning Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="ParallelResilientBackpropagationLearning class" />
    <meta name="System.Keywords" content="Accord.Neuro.Learning.ParallelResilientBackpropagationLearning class" />
    <meta name="System.Keywords" content="ParallelResilientBackpropagationLearning class, about ParallelResilientBackpropagationLearning class" />
    <meta name="Microsoft.Help.F1" content="Accord.Neuro.Learning.ParallelResilientBackpropagationLearning" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Neuro.Learning.ParallelResilientBackpropagationLearning" />
    <meta name="Description" content="Resilient Backpropagation learning algorithm." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Neuro.Learning" />
    <meta name="file" content="T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning" />
    <meta name="guid" content="T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_Neuro_Learning.htm" title="Accord.Neuro.Learning" tocid="N_Accord_Neuro_Learning">Accord.Neuro.Learning</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning.htm" title="ParallelResilientBackpropagationLearning Class" tocid="T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning">ParallelResilientBackpropagationLearning Class</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning__ctor.htm" title="ParallelResilientBackpropagationLearning Constructor " tocid="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning__ctor">ParallelResilientBackpropagationLearning Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning.htm" title="ParallelResilientBackpropagationLearning Properties" tocid="Properties_T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning">ParallelResilientBackpropagationLearning Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning.htm" title="ParallelResilientBackpropagationLearning Methods" tocid="Methods_T_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning">ParallelResilientBackpropagationLearning Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>ParallelResilientBackpropagationLearning Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Resilient Backpropagation learning algorithm.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LST6A35341D_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <span class="selflink">Accord.Neuro.Learning<span id="LST6A35341D_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>ParallelResilientBackpropagationLearning</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_Neuro_Learning.htm">Accord.Neuro.Learning</a><br />
    <strong>Assembly:</strong>
   Accord.Neuro (in Accord.Neuro.dll) Version: 3.6.4-alpha<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">ParallelResilientBackpropagationLearning</span> : <span class="identifier">ISupervisedLearning</span>, 
	<span class="identifier">IDisposable</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">ParallelResilientBackpropagationLearning</span>
	<span class="keyword">Implements</span> <span class="identifier">ISupervisedLearning</span>, <span class="identifier">IDisposable</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.Neuro/Learning/ParallelResilientBackPropagationLearning.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">ParallelResilientBackpropagationLearning</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning__ctor.htm">ParallelResilientBackpropagationLearning</a></td><td><div class="summary">
              Initializes a new instance of the <span class="selflink">ParallelResilientBackpropagationLearning</span> class.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_DecreaseFactor.htm">DecreaseFactor</a></td><td><div class="summary">
              Gets the decrease parameter, also 
              referred as eta minus. Default is 0.5.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_IncreaseFactor.htm">IncreaseFactor</a></td><td><div class="summary">
              Gets the increase parameter, also
              referred as eta plus. Default is 1.2.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_UpdateLowerBound.htm">UpdateLowerBound</a></td><td><div class="summary">
              Gets or sets the minimum possible update step,
              also referred as delta max. Default is 1e-6.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_UpdateUpperBound.htm">UpdateUpperBound</a></td><td><div class="summary">
              Gets or sets the maximum possible update step,
              also referred as delta min. Default is 50.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_ComputeError.htm">ComputeError</a></td><td><div class="summary">
              Compute network error for a given data set.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_Dispose.htm">Dispose<span id="LST6A35341D_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_2?cs=()|vb=|cpp=()|nu=()|fs=()");</script></a></td><td><div class="summary">
              Performs application-defined tasks associated with freeing,
              releasing, or resetting unmanaged resources.
            </div></td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_Dispose_1.htm">Dispose(Boolean)</a></td><td><div class="summary">
              Releases unmanaged and - optionally - managed resources
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;declared;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_Finalize.htm">Finalize</a></td><td><div class="summary">
              Releases unmanaged resources and performs other cleanup operations before
              the <span class="selflink">ParallelResilientBackpropagationLearning</span> is reclaimed by garbage
              collection.
            </div> (Overrides <span class="nolink">Object<span id="LST6A35341D_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_3?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Finalize<span id="LST6A35341D_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_4?cs=()|vb=|cpp=()|nu=()|fs=()");</script></span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_Reset.htm">Reset</a></td><td><div class="summary">
              Resets the current update steps using the given learning rate.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_Run.htm">Run</a></td><td><div class="summary">
               Runs learning iteration.
             </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Neuro_Learning_ParallelResilientBackpropagationLearning_RunEpoch.htm">RunEpoch</a></td><td><div class="summary">
              Runs learning epoch.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LST6A35341D_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_5?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LST6A35341D_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_6?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
              This class implements the resilient backpropagation (RProp)
              learning algorithm. The RProp learning algorithm is one of the fastest learning
              algorithms for feed-forward learning networks which use only first-order
              information.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><p>
              Sample usage (training network to calculate XOR function):</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACBBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// initialize input and output values</span>
<span class="highlight-keyword">double</span>[][] input = 
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">0</span>, <span class="highlight-number">0</span>}, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">0</span>, <span class="highlight-number">1</span>},
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">1</span>, <span class="highlight-number">0</span>}, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">1</span>, <span class="highlight-number">1</span>}
};

<span class="highlight-keyword">double</span>[][] output = 
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">0</span>}, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">1</span>},
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">1</span>}, <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] {<span class="highlight-number">0</span>}
};

<span class="highlight-comment">// create neural network</span>
ActivationNetwork   network = <span class="highlight-keyword">new</span> ActivationNetwork(
    SigmoidFunction(<span class="highlight-number">2</span>),
    <span class="highlight-number">2</span>, <span class="highlight-comment">// two inputs in the network</span>
    <span class="highlight-number">2</span>, <span class="highlight-comment">// two neurons in the first layer</span>
    <span class="highlight-number">1</span> ); <span class="highlight-comment">// one neuron in the second layer</span>

<span class="highlight-comment">// create teacher</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> ResilientBackpropagationLearning(network);

<span class="highlight-comment">// loop</span>
<span class="highlight-keyword">while</span> (!needToStop)
{
    <span class="highlight-comment">// run epoch of learning procedure</span>
    <span class="highlight-keyword">double</span> error = teacher.RunEpoch( input, output );
    <span class="highlight-comment">// check error value to see if we need to stop</span>
    <span class="highlight-comment">// ...</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACBBA");</script><p>
              The following example shows how to use Rprop to solve a multi-class
              classification problem.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAABBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose we would like to teach a network to recognize </span>
<span class="highlight-comment">// the following input vectors into 3 possible classes:</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] inputs =
{
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 0</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span> }, <span class="highlight-comment">// 1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 1</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">0</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">0</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 2</span>
    <span class="highlight-keyword">new</span> <span class="highlight-keyword">double</span>[] { <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span> }, <span class="highlight-comment">// 2</span>
};

<span class="highlight-keyword">int</span>[] classes =
{
    <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>, <span class="highlight-number">0</span>,
    <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>, <span class="highlight-number">1</span>,
    <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>, <span class="highlight-number">2</span>,
};

<span class="highlight-comment">// First we have to convert this problem into a way that  the neural</span>
<span class="highlight-comment">// network can handle. The first step is to expand the classes into </span>
<span class="highlight-comment">// indicator vectors, where a 1 into a position signifies that this</span>
<span class="highlight-comment">// position indicates the class the sample belongs to.</span>
<span class="highlight-comment">// </span>
<span class="highlight-keyword">double</span>[][] outputs = Measures.Expand(classes, <span class="highlight-number">-1</span>, <span class="highlight-number">+1</span>);

<span class="highlight-comment">// Create an activation function for the net</span>
<span class="highlight-keyword">var</span> function = <span class="highlight-keyword">new</span> BipolarSigmoidFunction();

<span class="highlight-comment">// Create an activation network with the function and</span>
<span class="highlight-comment">//  4 inputs, 5 hidden neurons and 3 possible outputs:</span>
<span class="highlight-keyword">var</span> network = <span class="highlight-keyword">new</span> ActivationNetwork(function, <span class="highlight-number">4</span>, <span class="highlight-number">5</span>, <span class="highlight-number">3</span>);

<span class="highlight-comment">// Randomly initialize the network</span>
<span class="highlight-keyword">new</span> NguyenWidrow(network).Randomize();

<span class="highlight-comment">// Teach the network using parallel Rprop:</span>
<span class="highlight-keyword">var</span> teacher = <span class="highlight-keyword">new</span> ParallelResilientBackpropagationLearning(network);

<span class="highlight-keyword">double</span> error = <span class="highlight-number">1.0</span>;
<span class="highlight-keyword">while</span> (error &gt; <span class="highlight-number">1</span>e<span class="highlight-number">-5</span>)
    error = teacher.RunEpoch(inputs, outputs);


<span class="highlight-comment">// Checks if the network has learned</span>
<span class="highlight-keyword">for</span> (<span class="highlight-keyword">int</span> i = <span class="highlight-number">0</span>; i &lt; inputs.Length; i++)
{
    <span class="highlight-keyword">double</span>[] answer = network.Compute(inputs[i]);

    <span class="highlight-keyword">int</span> expected = classes[i];
    <span class="highlight-keyword">int</span> actual; answer.Max(<span class="highlight-keyword">out</span> actual);

    <span class="highlight-comment">// actual should be equal to expected</span>
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID9RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Neuro_Learning.htm">Accord.Neuro.Learning Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_Neuro_Learning_LevenbergMarquardtLearning.htm">Accord.Neuro.Learning<span id="LST6A35341D_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST6A35341D_7?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>LevenbergMarquardtLearning</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>