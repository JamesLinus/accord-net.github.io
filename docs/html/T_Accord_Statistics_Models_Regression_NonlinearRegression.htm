<html>
  <head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" type="text/css" href="../styles/branding.css" />
    <link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" />
    <script type="text/javascript" src="../scripts/branding.js"> </script>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>NonlinearRegression Class</title>
    <meta name="Language" content="en-us" />
    <meta name="System.Keywords" content="NonlinearRegression class" />
    <meta name="System.Keywords" content="Accord.Statistics.Models.Regression.NonlinearRegression class" />
    <meta name="System.Keywords" content="NonlinearRegression class, about NonlinearRegression class" />
    <meta name="Microsoft.Help.F1" content="Accord.Statistics.Models.Regression.NonlinearRegression" />
    <meta name="Microsoft.Help.Id" content="T:Accord.Statistics.Models.Regression.NonlinearRegression" />
    <meta name="Description" content="Nonlinear Regression." />
    <meta name="Microsoft.Help.ContentType" content="Reference" />
    <meta name="BrandingAware" content="true" />
    
    <meta name="container" content="Accord.Statistics.Models.Regression" />
    <meta name="file" content="T_Accord_Statistics_Models_Regression_NonlinearRegression" />
    <meta name="guid" content="T_Accord_Statistics_Models_Regression_NonlinearRegression" />
    
    <link type="text/css" rel="stylesheet" href="../styles/highlight.css" />
    <script type="text/javascript" src="../scripts/highlight.js"> </script>
    <link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" />
    <script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script>
    <script type="text/javascript" src="../scripts/branding-Website.js"></script>
    <script type="text/javascript" src="../scripts/clipboard.min.js"></script>
  </head>
  <body onload="OnLoad('cs')">
    <input type="hidden" id="userDataCache" class="userDataStyle" />
    <div class="pageHeader" id="PageHeader">Accord.NET Framework<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div>
    <div class="pageBody">
      <div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Accord.NET Framework" tocid="roottoc">Accord.NET Framework</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="R_Project_Accord_NET.htm" title="Framework modules" tocid="R_Project_Accord_NET">Framework modules</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_Accord_Statistics_Models_Regression.htm" title="Accord.Statistics.Models.Regression" tocid="N_Accord_Statistics_Models_Regression">Accord.Statistics.Models.Regression</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_Accord_Statistics_Models_Regression_NonlinearRegression.htm" title="NonlinearRegression Class" tocid="T_Accord_Statistics_Models_Regression_NonlinearRegression">NonlinearRegression Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Overload_Accord_Statistics_Models_Regression_NonlinearRegression__ctor.htm" title="NonlinearRegression Constructor " tocid="Overload_Accord_Statistics_Models_Regression_NonlinearRegression__ctor">NonlinearRegression Constructor </a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_Accord_Statistics_Models_Regression_NonlinearRegression.htm" title="NonlinearRegression Properties" tocid="Properties_T_Accord_Statistics_Models_Regression_NonlinearRegression">NonlinearRegression Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_Accord_Statistics_Models_Regression_NonlinearRegression.htm" title="NonlinearRegression Methods" tocid="Methods_T_Accord_Statistics_Models_Regression_NonlinearRegression">NonlinearRegression Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent">
        <table class="titleTable">
          <tr>
            <td class="logoColumn">
              <img alt="Accord.NET (logo)" src="../icons/logo.png" />
            </td>
            <td class="titleColumn">
              <h1>NonlinearRegression Class</h1>
            </td>
          </tr>
        </table>
        <span class="introStyle"></span> <div class="summary">
              Nonlinear Regression.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><span class="nolink">System<span id="LSTD278B6C5_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</span><br />  <a href="T_Accord_MachineLearning_TransformBase_2.htm">Accord.MachineLearning<span id="LSTD278B6C5_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>TransformBase</a><span id="LSTD278B6C5_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_2?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><span id="LSTD278B6C5_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_3?cpp=array&lt;");</script><span class="nolink">Double</span><span id="LSTD278B6C5_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_4?cpp=&gt;|vb=()|nu=[]");</script>, <span class="nolink">Double</span><span id="LSTD278B6C5_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_5?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><br />    <span class="selflink">Accord.Statistics.Models.Regression<span id="LSTD278B6C5_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_6?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>NonlinearRegression</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_Accord_Statistics_Models_Regression.htm">Accord.Statistics.Models.Regression</a><br />
    <strong>Assembly:</strong>
   Accord.Statistics (in Accord.Statistics.dll) Version: 3.6.4-alpha<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','cs','1','2');return false;">C#</a></div><div id="ID1EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">NonlinearRegression</span> : <span class="identifier">TransformBase</span>&lt;<span class="identifier">double</span>[], <span class="identifier">double</span>&gt;, 
	<span class="identifier">ICloneable</span></pre></div><div id="ID1EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve">&lt;<span class="identifier">SerializableAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Class</span> <span class="identifier">NonlinearRegression</span>
	<span class="keyword">Inherits</span> <span class="identifier">TransformBase</span>(<span class="keyword">Of</span> <span class="identifier">Double</span>(), <span class="identifier">Double</span>)
	<span class="keyword">Implements</span> <span class="identifier">ICloneable</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCA");</script><a id="HT_RequestExampleLink" href="https://github.com/accord-net/framework/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=Accord.NET Framework: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/accord-net/framework/blob/master/Sources/Accord.Statistics/Models/Regression/Nonlinear/NonlinearRegression.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">NonlinearRegression</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Constructors</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="constructorList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Regression_NonlinearRegression__ctor.htm">NonlinearRegression(Int32, RegressionFunction)</a></td><td><div class="summary">
              Initializes a new instance of the <span class="selflink">NonlinearRegression</span> class.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Regression_NonlinearRegression__ctor_1.htm">NonlinearRegression(Int32, RegressionFunction, RegressionGradientFunction)</a></td><td><div class="summary">
              Initializes a new instance of the <span class="selflink">NonlinearRegression</span> class.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Models_Regression_NonlinearRegression_Coefficients.htm">Coefficients</a></td><td><div class="summary">
              Gets the regression coefficients.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Models_Regression_NonlinearRegression_Function.htm">Function</a></td><td><div class="summary">
              Gets the model function, mapping inputs to 
              outputs given a suitable parameter vector.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Models_Regression_NonlinearRegression_Gradient.htm">Gradient</a></td><td><div class="summary">
              Gets or sets a function that computes the gradient of the
              <a href="P_Accord_Statistics_Models_Regression_NonlinearRegression_Function.htm">Function</a> in respect to the <a href="P_Accord_Statistics_Models_Regression_NonlinearRegression_Coefficients.htm">Coefficients</a>.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_TransformBase_2_NumberOfInputs.htm">NumberOfInputs</a></td><td><div class="summary">
              Gets the number of inputs accepted by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTD278B6C5_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_7?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTD278B6C5_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_8?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_MachineLearning_TransformBase_2_NumberOfOutputs.htm">NumberOfOutputs</a></td><td><div class="summary">
              Gets the number of outputs generated by the model.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTD278B6C5_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_9?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTD278B6C5_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_10?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /></td><td><a href="P_Accord_Statistics_Models_Regression_NonlinearRegression_StandardErrors.htm">StandardErrors</a></td><td><div class="summary">
              Gets the standard errors for the regression coefficients.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID5RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Regression_NonlinearRegression_Clone.htm">Clone</a></td><td><div class="summary">
              Creates a new object that is a copy of the current instance.
            </div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Regression_NonlinearRegression_Compute.htm">Compute</a></td><td> <strong>Obsolete. </strong><div class="summary">
              Computes the model output for the given input vector.
            </div></td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">Equals</span></td><td><div class="summary">Determines whether the specified object is equal to the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">Finalize</span></td><td><div class="summary">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetHashCode</span></td><td><div class="summary">Serves as the default hash function. </div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">GetType</span></td><td><div class="summary">Gets the <span class="nolink">Type</span> of the current instance.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="protected;inherited;notNetfw;"><td><img src="../icons/protmethod.gif" alt="Protected method" title="Protected method" /></td><td><span class="nolink">MemberwiseClone</span></td><td><div class="summary">Creates a shallow copy of the current <span class="nolink">Object</span>.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><span class="nolink">ToString</span></td><td><div class="summary">Returns a string that represents the current object.</div> (Inherited from <span class="nolink">Object</span>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_TransformBase_2_Transform_1.htm">Transform(<span id="LSTD278B6C5_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_11?cpp=array&lt;");</script>TInput<span id="LSTD278B6C5_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_12?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Applies the transformation to a set of input vectors,
              producing an associated set of output vectors.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTD278B6C5_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_13?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTD278B6C5_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_14?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_Statistics_Models_Regression_NonlinearRegression_Transform.htm">Transform(<span id="LSTD278B6C5_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_15?cpp=array&lt;");</script>Double<span id="LSTD278B6C5_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_16?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
            Applies the transformation to an input, producing an associated output.
            </div> (Overrides <a href="M_Accord_MachineLearning_TransformBase_2_Transform.htm">TransformBase<span id="LSTD278B6C5_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_17?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTD278B6C5_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_18?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script><span id="LSTD278B6C5_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_19?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Transform(TInput)</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /></td><td><a href="M_Accord_MachineLearning_TransformBase_2_Transform_2.htm">Transform(<span id="LSTD278B6C5_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_20?cpp=array&lt;");</script>TInput<span id="LSTD278B6C5_21"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_21?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LSTD278B6C5_22"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_22?cpp=array&lt;");</script>TOutput<span id="LSTD278B6C5_23"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_23?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a></td><td><div class="summary">
              Applies the transformation to an input, producing an associated output.
            </div> (Inherited from <a href="T_Accord_MachineLearning_TransformBase_2.htm">TransformBase<span id="LSTD278B6C5_24"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_24?cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'");</script>TInput, TOutput<span id="LSTD278B6C5_25"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_25?cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;");</script></a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Extension Methods</span></div><div id="ID6RBSection" class="collapsibleSection"><table class="members" id="extensionMethodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_HasMethod.htm">HasMethod</a></td><td><div class="summary">
              Checks whether an object implements a method with the given name.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_Math_Matrix_IsEqual_577.htm">IsEqual</a></td><td><div class="summary">Compares two objects for equality, performing an elementwise comparison if the elements are vectors or matrices.</div> (Defined by <a href="T_Accord_Math_Matrix.htm">Matrix</a>.)</td></tr><tr data="public;inherited;notNetfw;"><td><img src="../icons/pubextension.gif" alt="Public Extension Method" title="Public Extension Method" /></td><td><a href="M_Accord_ExtensionMethods_To__1.htm">To<span id="LSTD278B6C5_26"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_26?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>T<span id="LSTD278B6C5_27"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_27?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script></a></td><td><div class="summary">
              Converts an object into another type, irrespective of whether
              the conversion can be done at compile time or not. This can be
              used to convert generic types to numeric types during runtime.
            </div> (Defined by <a href="T_Accord_ExtensionMethods.htm">ExtensionMethods</a>.)</td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><p>
              The first example shows how to fit a non-linear regression with <a href="T_Accord_Math_Optimization_LevenbergMarquardt.htm">LevenbergMarquardt</a>.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBCBBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCBBA','cs','1','2');return false;">C#</a></div><div id="ID1EBCBBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBCBBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBCBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBCBBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBCBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose we would like to map the continuous values in the</span>
<span class="highlight-comment">// second column to the integer values in the first column.</span>
<span class="highlight-keyword">double</span>[,] data =
{
    { <span class="highlight-number">-40</span>,    <span class="highlight-number">-21142.1111111111</span> },
    { <span class="highlight-number">-30</span>,    <span class="highlight-number">-21330.1111111111</span> },
    { <span class="highlight-number">-20</span>,    <span class="highlight-number">-12036.1111111111</span> },
    { <span class="highlight-number">-10</span>,      <span class="highlight-number">7255.3888888889</span> },
    {   <span class="highlight-number">0</span>,     <span class="highlight-number">32474.8888888889</span> },
    {  <span class="highlight-number">10</span>,     <span class="highlight-number">32474.8888888889</span> },
    {  <span class="highlight-number">20</span>,      <span class="highlight-number">9060.8888888889</span> },
    {  <span class="highlight-number">30</span>,    <span class="highlight-number">-11628.1111111111</span> },
    {  <span class="highlight-number">40</span>,    <span class="highlight-number">-15129.6111111111</span> },
};

<span class="highlight-comment">// Extract inputs and outputs</span>
<span class="highlight-keyword">double</span>[][] inputs = data.GetColumn(<span class="highlight-number">0</span>).ToJagged();
<span class="highlight-keyword">double</span>[] outputs = data.GetColumn(<span class="highlight-number">1</span>);

<span class="highlight-comment">// Create a Nonlinear regression using </span>
<span class="highlight-keyword">var</span> nls = <span class="highlight-keyword">new</span> NonlinearLeastSquares()
{
    NumberOfParameters = <span class="highlight-number">3</span>,

    <span class="highlight-comment">// Initialize to some random values</span>
    StartValues = <span class="highlight-keyword">new</span>[] { <span class="highlight-number">4.2</span>, <span class="highlight-number">0.3</span>, <span class="highlight-number">1</span> },

    <span class="highlight-comment">// Let's assume a quadratic model function: ax² + bx + c</span>
    Function = (w, x) =&gt; w[<span class="highlight-number">0</span>] * x[<span class="highlight-number">0</span>] * x[<span class="highlight-number">0</span>] + w[<span class="highlight-number">1</span>] * x[<span class="highlight-number">0</span>] + w[<span class="highlight-number">2</span>],

    <span class="highlight-comment">// Derivative in respect to the weights:</span>
    Gradient = (w, x, r) =&gt;
    {
        r[<span class="highlight-number">0</span>] = <span class="highlight-number">2</span> * w[<span class="highlight-number">0</span>]; <span class="highlight-comment">// w.r.t a: 2a  </span>
        r[<span class="highlight-number">1</span>] = w[<span class="highlight-number">1</span>];     <span class="highlight-comment">// w.r.t b: b</span>
        r[<span class="highlight-number">2</span>] = w[<span class="highlight-number">2</span>];     <span class="highlight-comment">// w.r.t c: 0</span>
    },

    Algorithm = <span class="highlight-keyword">new</span> LevenbergMarquardt()
    {
        MaxIterations = <span class="highlight-number">100</span>,
        Tolerance = <span class="highlight-number">0</span>
    }
};


<span class="highlight-keyword">var</span> regression = nls.Learn(inputs, outputs);

<span class="highlight-comment">// Use the function to compute the input values</span>
<span class="highlight-keyword">double</span>[] predict = regression.Transform(inputs);</pre></div><div id="ID1EBCBBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Suppose we would Like to map the continuous values in the</span>
<span class="highlight-comment">' second column to the integer values in the first column.</span>
<span class="highlight-keyword">Dim</span> data(,) <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span> =
{
    {<span class="highlight-number">-40</span>, <span class="highlight-number">-21142.1111111111</span>},
    {<span class="highlight-number">-30</span>, <span class="highlight-number">-21330.1111111111</span>},
    {<span class="highlight-number">-20</span>, <span class="highlight-number">-12036.1111111111</span>},
    {<span class="highlight-number">-10</span>, <span class="highlight-number">7255.3888888889</span>},
    {<span class="highlight-number">0</span>, <span class="highlight-number">32474.8888888889</span>},
    {<span class="highlight-number">10</span>, <span class="highlight-number">32474.8888888889</span>},
    {<span class="highlight-number">20</span>, <span class="highlight-number">9060.8888888889</span>},
    {<span class="highlight-number">30</span>, <span class="highlight-number">-11628.1111111111</span>},
    {<span class="highlight-number">40</span>, <span class="highlight-number">-15129.6111111111</span>}
}

<span class="highlight-comment">' Extract inputs And outputs</span>
<span class="highlight-keyword">Dim</span> inputs <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>()() = data.GetColumn(<span class="highlight-number">0</span>).ToJagged()
<span class="highlight-keyword">Dim</span> outputs <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>() = data.GetColumn(<span class="highlight-number">1</span>)

<span class="highlight-comment">' Create a Nonlinear regression using </span>
<span class="highlight-keyword">Dim</span> nls <span class="highlight-keyword">As</span> NonlinearLeastSquares = <span class="highlight-keyword">New</span> NonlinearLeastSquares
<span class="highlight-keyword">With</span> nls
    .NumberOfParameters = <span class="highlight-number">3</span>

    <span class="highlight-comment">' Initialize to some random values</span>
    .StartValues = {<span class="highlight-number">4.2</span>, <span class="highlight-number">0.3</span>, <span class="highlight-number">1</span>}

    <span class="highlight-comment">' Let's assume a quadratic model function: ax² + bx + c</span>
    .<span class="highlight-keyword">Function</span> = <span class="highlight-keyword">Function</span>(w, x) w(<span class="highlight-number">0</span>) * x(<span class="highlight-number">0</span>) * x(<span class="highlight-number">0</span>) + w(<span class="highlight-number">1</span>) * x(<span class="highlight-number">0</span>) + w(<span class="highlight-number">2</span>)

    <span class="highlight-comment">' Derivative in respect to the weights</span>
    .Gradient = <span class="highlight-keyword">Sub</span>(w, x, r)
                    r(<span class="highlight-number">0</span>) = <span class="highlight-number">2</span> * w(<span class="highlight-number">0</span>) <span class="highlight-comment">' w.r.t a:     2a  </span>
                    r(<span class="highlight-number">1</span>) = w(<span class="highlight-number">1</span>)     <span class="highlight-comment">' w.r.t b: b</span>
                    r(<span class="highlight-number">2</span>) = w(<span class="highlight-number">2</span>)     <span class="highlight-comment">' w.r.t c: 0</span>
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">With</span>

<span class="highlight-keyword">Dim</span> algorithm <span class="highlight-keyword">As</span> LevenbergMarquardt = <span class="highlight-keyword">New</span> LevenbergMarquardt
<span class="highlight-keyword">With</span> algorithm
    .MaxIterations = <span class="highlight-number">100</span>
    .Tolerance = <span class="highlight-number">0</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">With</span>

nls.Algorithm = algorithm

<span class="highlight-keyword">Dim</span> regression <span class="highlight-keyword">As</span> NonlinearRegression = nls.Learn(inputs, outputs)

<span class="highlight-comment">' Use the function to compute the input values</span>
<span class="highlight-keyword">Dim</span> predict <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>() = regression.Transform(inputs)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBCBBA");</script><p>
              The second example shows how to fit a non-linear regression with <a href="T_Accord_Math_Optimization_GaussNewton.htm">GaussNewton</a>.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EBABBA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBABBA','cs','1','2');return false;">C#</a></div><div id="ID1EBABBA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID1EBABBA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EBABBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EBABBA');return false;" title="Copy">Copy</a></div></div><div id="ID1EBABBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment">// Suppose we would like to map the continuous values in the</span>
<span class="highlight-comment">// second row to the integer values in the first row.</span>
<span class="highlight-keyword">double</span>[,] data =
{
    { <span class="highlight-number">0.03</span>, <span class="highlight-number">0.1947</span>, <span class="highlight-number">0.425</span>, <span class="highlight-number">0.626</span>, <span class="highlight-number">1.253</span>, <span class="highlight-number">2.500</span>, <span class="highlight-number">3.740</span> },
    { <span class="highlight-number">0.05</span>, <span class="highlight-number">0.127</span>, <span class="highlight-number">0.094</span>, <span class="highlight-number">0.2122</span>, <span class="highlight-number">0.2729</span>, <span class="highlight-number">0.2665</span>, <span class="highlight-number">0.3317</span>}
};

<span class="highlight-comment">// Extract inputs and outputs</span>
<span class="highlight-keyword">double</span>[][] inputs = data.GetRow(<span class="highlight-number">0</span>).ToJagged();
<span class="highlight-keyword">double</span>[] outputs = data.GetRow(<span class="highlight-number">1</span>);

<span class="highlight-comment">// Create a Nonlinear regression using </span>
<span class="highlight-keyword">var</span> nls = <span class="highlight-keyword">new</span> NonlinearLeastSquares()
{
    <span class="highlight-comment">// Initialize to some random values</span>
    StartValues = <span class="highlight-keyword">new</span>[] { <span class="highlight-number">0.9</span>, <span class="highlight-number">0.2</span> },

    <span class="highlight-comment">// Let's assume a quadratic model function: ax² + bx + c</span>
    Function = (w, x) =&gt; (w[<span class="highlight-number">0</span>] * x[<span class="highlight-number">0</span>]) / (w[<span class="highlight-number">1</span>] + x[<span class="highlight-number">0</span>]),

    <span class="highlight-comment">// Derivative in respect to the weights:</span>
    Gradient = (w, x, r) =&gt;
    {
        r[<span class="highlight-number">0</span>] = -((-x[<span class="highlight-number">0</span>]) / (w[<span class="highlight-number">1</span>] + x[<span class="highlight-number">0</span>]));
        r[<span class="highlight-number">1</span>] = -((w[<span class="highlight-number">0</span>] * x[<span class="highlight-number">0</span>]) / Math.Pow(w[<span class="highlight-number">1</span>] + x[<span class="highlight-number">0</span>], <span class="highlight-number">2</span>));
    },

    Algorithm = <span class="highlight-keyword">new</span> GaussNewton()
    {
        MaxIterations = <span class="highlight-number">0</span>,
        Tolerance = <span class="highlight-number">1</span>e<span class="highlight-number">-5</span>
    }
};


<span class="highlight-keyword">var</span> regression = nls.Learn(inputs, outputs);

<span class="highlight-comment">// Use the function to compute the input values</span>
<span class="highlight-keyword">double</span>[] predict = regression.Transform(inputs);</pre></div><div id="ID1EBABBA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="highlight-comment">' Suppose we would Like to map the continuous values in the</span>
<span class="highlight-comment">' second row to the integer values in the first row.</span>
<span class="highlight-keyword">Dim</span> data <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>(,) =
{
    {<span class="highlight-number">0.03</span>, <span class="highlight-number">0.1947</span>, <span class="highlight-number">0.425</span>, <span class="highlight-number">0.626</span>, <span class="highlight-number">1.253</span>, <span class="highlight-number">2.5</span>, <span class="highlight-number">3.74</span>},
    {<span class="highlight-number">0.05</span>, <span class="highlight-number">0.127</span>, <span class="highlight-number">0.094</span>, <span class="highlight-number">0.2122</span>, <span class="highlight-number">0.2729</span>, <span class="highlight-number">0.2665</span>, <span class="highlight-number">0.3317</span>}
}

<span class="highlight-comment">' Extract inputs And outputs</span>
<span class="highlight-keyword">Dim</span> inputs <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>()() = data.GetRow(<span class="highlight-number">0</span>).ToJagged()
<span class="highlight-keyword">Dim</span> outputs <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>() = data.GetRow(<span class="highlight-number">1</span>)

<span class="highlight-comment">' Create a Nonlinear regression using </span>
<span class="highlight-keyword">Dim</span> nls <span class="highlight-keyword">As</span> NonlinearLeastSquares = <span class="highlight-keyword">New</span> NonlinearLeastSquares
<span class="highlight-keyword">With</span> nls
    <span class="highlight-comment">' Initialize to some random values</span>
    .StartValues = {<span class="highlight-number">0.9</span>, <span class="highlight-number">0.2</span>}

    <span class="highlight-comment">' Let's assume a quadratic model function: ax² + bx + c</span>
    .<span class="highlight-keyword">Function</span> = <span class="highlight-keyword">Function</span>(w, x) w(<span class="highlight-number">0</span>) * x(<span class="highlight-number">0</span>) / (w(<span class="highlight-number">1</span>) + x(<span class="highlight-number">0</span>))

    <span class="highlight-comment">' Derivative in respect to the weights</span>
    .Gradient = <span class="highlight-keyword">Sub</span>(w, x, r)
                    r(<span class="highlight-number">0</span>) = -((-x(<span class="highlight-number">0</span>)) / (w(<span class="highlight-number">1</span>) + x(<span class="highlight-number">0</span>)))
                    r(<span class="highlight-number">1</span>) = -((w(<span class="highlight-number">0</span>) * x(<span class="highlight-number">0</span>)) / System.Math.Pow(w(<span class="highlight-number">1</span>) + x(<span class="highlight-number">0</span>), <span class="highlight-number">2</span>))
                <span class="highlight-keyword">End</span> <span class="highlight-keyword">Sub</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">With</span>

<span class="highlight-keyword">Dim</span> algorithm <span class="highlight-keyword">As</span> GaussNewton = <span class="highlight-keyword">New</span> GaussNewton
<span class="highlight-keyword">With</span> algorithm
    .MaxIterations = <span class="highlight-number">0</span>
    .Tolerance = <span class="highlight-number">0.00001</span>
<span class="highlight-keyword">End</span> <span class="highlight-keyword">With</span>

nls.Algorithm = algorithm

<span class="highlight-keyword">Dim</span> regression <span class="highlight-keyword">As</span> NonlinearRegression = nls.Learn(inputs, outputs)

<span class="highlight-comment">' Use the function to compute the input values</span>
<span class="highlight-keyword">Dim</span> predict <span class="highlight-keyword">As</span> <span class="highlight-keyword">Double</span>() = regression.Transform(inputs)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EBABBA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID8RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_Accord_Statistics_Models_Regression.htm">Accord.Statistics.Models.Regression Namespace</a></div><div class="seeAlsoStyle"><a href="T_Accord_Statistics_Models_Regression_Fitting_NonlinearLeastSquares.htm">Accord.Statistics.Models.Regression.Fitting<span id="LSTD278B6C5_28"></span><script type="text/javascript">AddLanguageSpecificTextSet("LSTD278B6C5_28?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>NonlinearLeastSquares</a></div></div></div>
    </div>
    <div id="pageFooter" class="pageFooter">
      <p>Accord.NET Framework © 2009-2017. All documentation is licensed under the Creative Commons Attribution/Share-Alike License.</p>
      <div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:feedback%40accord-framework.net?Subject=Accord.NET Framework">feedback@accord-framework.net</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div>
  </body>
</html>